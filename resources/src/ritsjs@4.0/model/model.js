/* Generated by the Nim Compiler v1.2.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI11626893 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11996044 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12110139 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11400051 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11535201 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11535200 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11996033 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11996032 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12070010 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12055010 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10005833 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11895030 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11827310 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10005986 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI610236 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11627836 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11626666 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11627764 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11627763 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11500312 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11500311 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11627745 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11627744 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11627741 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11627740 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11655028 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9861064 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9861068 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9861067 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI2080230 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6286 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI6281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI143 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI4275232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI4530011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11626715 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI11626481 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI112 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
NTI11626481.base = NTI104;
NTI11626715.base = NTI104;
var NNI4530011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI4275232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI4530011.node = NNI4530011;
var NNI6243 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6243.node = NNI6243;
var NNI6221 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6221.node = NNI6221;
NTI6281.base = NTI6217;
NTI6286.base = NTI6217;
var NNI6217 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6281, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI114, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI112, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI112, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6286, name: "up", sons: null}]};
NTI6217.node = NNI6217;
var NNI6008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6008.node = NNI6008;
NTI6217.base = NTI6008;
NTI6221.base = NTI6217;
NTI6243.base = NTI6221;
var NNI2080230 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI143, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI2080230.node = NNI2080230;
NTI9861068.base = NTI104;
NTI9861067.base = NTI9861068;
NTI9861064.base = NTI104;
var NNI11500312 = {kind: 1, offset: "dof", len: 0, typ: NTI143, name: "dof", sons: null};
NTI11500312.node = NNI11500312;
NTI11500311.base = NTI11500312;
var NNI11627745 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "distribution", len: 0, typ: NTI11500311, name: "distribution", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI104, name: "location", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI104, name: "scale", sons: null}]};
NTI11627745.node = NNI11627745;
NTI11627744.base = NTI11627745;
var NNI11626666 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI11626666, name: "twoTailed", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11626666, name: "oneTailed", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11626666, name: "rightTailed", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11626666, name: "leftTailed", len: 0, sons: null}}};
NTI11626666.node = NNI11626666;
var NNI11627764 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "distribution", len: 0, typ: NTI11627744, name: "distribution", sons: null}, 
{kind: 1, offset: "test_score", len: 0, typ: NTI104, name: "test_score", sons: null}, 
{kind: 1, offset: "test_type", len: 0, typ: NTI11626666, name: "test_type", sons: null}]};
NTI11627764.node = NNI11627764;
NTI11627763.base = NTI11627764;
var NNI11627741 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "distribution", len: 0, typ: NTI11627744, name: "distribution", sons: null}, 
{kind: 1, offset: "hypothesis_test", len: 0, typ: NTI11627763, name: "hypothesis_test", sons: null}]};
NTI11627741.node = NNI11627741;
NTI11627740.base = NTI11627741;
NTI11655028.base = NTI11627740;
NTI11627836.base = NTI112;
NTI610236.base = NTI112;
NTI10005986.base = NTI104;
NTI11827310.base = NTI112;
NTI11895030.base = NTI112;
NTI10005833.base = NTI104;
NTI12055010.base = NTI104;
var NNI11535201 = {kind: 1, offset: "dof", len: 0, typ: NTI104, name: "dof", sons: null};
NTI11535201.node = NNI11535201;
NTI11535200.base = NTI11535201;
var NNI11996033 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "distribution", len: 0, typ: NTI11535200, name: "distribution", sons: null}, 
{kind: 1, offset: "test_score", len: 0, typ: NTI104, name: "test_score", sons: null}, 
{kind: 1, offset: "test_type", len: 0, typ: NTI11626666, name: "test_type", sons: null}]};
NTI11996033.node = NNI11996033;
NTI11996032.base = NTI11996033;
NTI12070010.base = NTI11996032;
NTI11400051.base = NTI104;
NTI12110139.base = NTI11996032;
NTI11996044.base = NTI143;
NTI11626893.base = NTI104;
function toJSStr(s_225096) {
                    var Tmp5;
            var Tmp7;

  var result_225097 = null;

    var res_225170 = new_seq_225128((s_225096 != null ? s_225096.length : 0));
    var i_225172 = 0;
    var j_225174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_225172 < (s_225096 != null ? s_225096.length : 0))) break L2;
          var c_225175 = s_225096[i_225172];
          if ((c_225175 < 128)) {
          res_225170[j_225174] = String.fromCharCode(c_225175);
          i_225172 += 1;
          }
          else {
            var helper_225198 = new_seq_225128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_225199 = c_225175.toString(16);
                  if (((code_225199 != null ? code_225199.length : 0) == 1)) {
                  if (helper_225198 != null) { helper_225198.push("%0"); } else { helper_225198 = ["%0"]; };
                  }
                  else {
                  if (helper_225198 != null) { helper_225198.push("%"); } else { helper_225198 = ["%"]; };
                  }
                  
                  if (helper_225198 != null) { helper_225198.push(code_225199); } else { helper_225198 = [code_225199]; };
                  i_225172 += 1;
                    if (((s_225096 != null ? s_225096.length : 0) <= i_225172)) Tmp5 = true; else {                      Tmp5 = (s_225096[i_225172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_225175 = s_225096[i_225172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_225170[j_225174] = decodeURIComponent(helper_225198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_225170[j_225174] = helper_225198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_225174 += 1;
        }
    } while(false);
    if (res_225170 === null) res_225170 = [];
               if (res_225170.length < j_225174) { for (var i=res_225170.length;i<j_225174;++i) res_225170.push(null); }
               else { res_225170.length = j_225174; };
    result_225097 = res_225170.join("");

  return result_225097;

}
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function makeNimstrLit(c_225062) {
      var ln = c_225062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_225062.charCodeAt(i);
  }
  return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_240023, src_240024, ti_240025) {
  var result_245219 = null;

    switch (ti_240025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_235401(ti_240025))) {
      result_245219 = src_240024;
      }
      else {
        result_245219 = [src_240024[0], src_240024[1]];
      }
      
      break;
    case 19:
            if (dest_240023 === null || dest_240023 === undefined) {
        dest_240023 = {};
      }
      else {
        for (var key in dest_240023) { delete dest_240023[key]; }
      }
      for (var key in src_240024) { dest_240023[key] = src_240024[key]; }
      result_245219 = dest_240023;
    
      break;
    case 18:
    case 17:
      if (!((ti_240025.base == null))) {
      result_245219 = nimCopy(dest_240023, src_240024, ti_240025.base);
      }
      else {
      if ((ti_240025.kind == 17)) {
      result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {m_type: ti_240025} : dest_240023;
      }
      else {
        result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {} : dest_240023;
      }
      }
      nimCopyAux(result_245219, src_240024, ti_240025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_240024 === null) {
        result_245219 = null;
      }
      else {
        if (dest_240023 === null || dest_240023 === undefined) {
          dest_240023 = new Array(src_240024.length);
        }
        else {
          dest_240023.length = src_240024.length;
        }
        result_245219 = dest_240023;
        for (var i = 0; i < src_240024.length; ++i) {
          result_245219[i] = nimCopy(result_245219[i], src_240024[i], ti_240025.base);
        }
      }
    
      break;
    case 28:
            if (src_240024 !== null) {
        result_245219 = src_240024.slice(0);
      }
    
      break;
    default: 
      result_245219 = src_240024;
      break;
    }

  return result_245219;

}
function cstrToNimstr(c_225079) {
      var ln = c_225079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_225079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_225079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
            var cof_11306078 = [7.6180091729471457e+001, -8.6505320329416776e+001, 2.4014098240830911e+001, -1.2317395724501550e+000, 1.2086509738661790e-003, -5.3952393849530003e-006];
function mnewString(len_230044) {
        return new Array(len_230044);
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([65, 90], [97, 122]);
function raiseException(e_190218, ename_190219) {
    e_190218.name = ename_190219;
    if ((excHandler == 0)) {
    unhandledException(e_190218);
    }
    
    throw e_190218;

  
}
function nimCharToStr(x_156052) {
  var result_156053 = null;

    result_156053 = nimCopy(null, mnewString(1), NTI112);
    result_156053[0] = x_156052;

  return result_156053;

}
function addChar(x_275031, c_275032) {
    x_275031.push(c_275032);

  
}
function nimMax(a_230821, b_230822) {
    var Tmp1;

  var result_230823 = 0;

  BeforeRet: do {
    if ((b_230822 <= a_230821)) {
    Tmp1 = a_230821;
    }
    else {
    Tmp1 = b_230822;
    }
    
    result_230823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230823;

}
function eqStrings(a_230222, b_230223) {
        if (a_230222 == b_230223) return true;
    if (a_230222 === null && b_230223.length == 0) return true;
    if (b_230223 === null && a_230222.length == 0) return true;
    if ((!a_230222) || (!b_230223)) return false;
    var alen = a_230222.length;
    if (alen != b_230223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_230222[i] != b_230223[i]) return false;
    return true;
  

  
}
var ConstSet9 = setConstr(46, 44);
var ConstSet10 = setConstr([65, 90]);
var ConstSet11 = setConstr([97, 122]);
function nimMin(a_230803, b_230804) {
    var Tmp1;

  var result_230805 = 0;

  BeforeRet: do {
    if ((a_230803 <= b_230804)) {
    Tmp1 = a_230803;
    }
    else {
    Tmp1 = b_230804;
    }
    
    result_230805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230805;

}
          var cof_11345027 = [-1.3026537197817094e+000, 6.4196979235649021e-001, 1.9476473204185836e-002, -9.5615147868086305e-003, -9.4659534448203605e-004, 3.6683949785276101e-004, 4.2523324806907003e-005, -2.0278578112534001e-005, -1.6242900046470000e-006, 1.3036558355800000e-006, 1.5626441722000001e-008, -8.5238095914999995e-008, 6.5290544390000001e-009, 5.0593434950000004e-009, -9.9136415599999992e-010, -2.2736512200000000e-010, 9.6467910999999994e-011, 2.3940379999999998e-012, -6.8860269999999998e-012, 8.9448700000000004e-013, 3.1309199999999997e-013, -1.1270800000000000e-013, 3.8099999999999998e-016, 7.1059999999999999e-015, -1.5230000000000001e-015, -9.3999999999999999e-017, 1.2099999999999999e-016, -2.7999999999999999e-017];
process.exitCode = 0;
var global_raise_hook_142018 = [null];
var local_raise_hook_142023 = [null];
var out_of_mem_hook_142026 = [null];
var unhandled_exception_hook_142031 = [null];
function abs_75247(x_75249) {
    var Tmp1;

  var result_75250 = 0.0;

    if ((x_75249 < 0.0)) {
    Tmp1 = -(x_75249);
    }
    else {
    Tmp1 = x_75249;
    }
    
    result_75250 = Tmp1;

  return result_75250;

}
function classify_880431(x_880433) {
  var result_880434 = 0;

  BeforeRet: do {
    if ((x_880433 == 0.0)) {
    if (((1.0000000000000000e+000 / x_880433) == Infinity)) {
    result_880434 = 2;
    break BeforeRet;
    }
    else {
      result_880434 = 3;
      break BeforeRet;
    }
    
    }
    
    if (((x_880433 * 5.0000000000000000e-001) == x_880433)) {
    if ((0.0 < x_880433)) {
    result_880434 = 5;
    break BeforeRet;
    }
    else {
      result_880434 = 6;
      break BeforeRet;
    }
    
    }
    
    if (!((x_880433 == x_880433))) {
    result_880434 = 4;
    break BeforeRet;
    }
    
    if ((abs_75247(x_880433) < 2.2250738585072009e-308)) {
    result_880434 = 1;
    break BeforeRet;
    }
    
    result_880434 = 0;
    break BeforeRet;
  } while (false);

  return result_880434;

}
function interpolated_if_not_valid_10045229(data_10045231, i_10045232) {
      var Tmp1;

  var result_10045233 = 0.0;

  BeforeRet: do {
    var v_10045234 = data_10045231[i_10045232];
      if ((((classify_880431(v_10045234) == 4) || (classify_880431(v_10045234) == 5)) || (classify_880431(v_10045234) == 6))) Tmp1 = true; else {        Tmp1 = !((((v_10045234 * 1.0000000000000000e+001) / 1.0000000000000000e+001) == v_10045234));      }    if (Tmp1) {
    if ((i_10045232 == 0)) {
    result_10045233 = data_10045231[(i_10045232 + 1)];
    break BeforeRet;
    }
    else {
    if ((i_10045232 == (data_10045231 != null ? (data_10045231.length-1) : -1))) {
    result_10045233 = data_10045231[(i_10045232 - 1)];
    break BeforeRet;
    }
    else {
      result_10045233 = (5.0000000000000000e-001 * (data_10045231[(i_10045232 - 1)] + data_10045231[(i_10045232 + 1)]));
      break BeforeRet;
    }
    }
    }
    
    result_10045233 = data_10045231[i_10045232];
    break BeforeRet;
  } while (false);

  return result_10045233;

}
function fill_non_numerical(v_10050028) {
  var result_10050029 = null;

    L1: do {
      var k_10050047 = 0;
      var colontmp__10050069 = 0;
      colontmp__10050069 = (v_10050028 != null ? (v_10050028.length-1) : -1);
      var res_10050070 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_10050070 <= colontmp__10050069)) break L3;
            k_10050047 = res_10050070;
            if (result_10050029 != null) { result_10050029.push(interpolated_if_not_valid_10045229(v_10050028, k_10050047)); } else { result_10050029 = [interpolated_if_not_valid_10045229(v_10050028, k_10050047)]; };
            res_10050070 += 1;
          }
      } while(false);
    } while(false);

  return result_10050029;

}
var state_10357005 = [{a0: 1773455756, a1: 4275166512}];
var utc_instance_10695231 = [null];
var local_instance_10695232 = [null];
function new_seq_225128(len_225131) {
  var result_225133 = null;

    result_225133 = new Array(len_225131); for (var i=0;i<len_225131;++i) {result_225133[i]=null;}
  return result_225133;

}
function is_fat_pointer_235401(ti_235403) {
  var result_235404 = false;

  BeforeRet: do {
    result_235404 = !((ConstSet1[ti_235403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_235404;

}
function nimCopyAux(dest_240028, src_240029, n_240031) {
    switch (n_240031.kind) {
    case 0:
      break;
    case 1:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_240031.sons.length; i++) {
      nimCopyAux(dest_240028, src_240029, n_240031.sons[i]);
    }
    
      break;
    case 3:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
      for (var i = 0; i < n_240031.sons.length; ++i) {
        nimCopyAux(dest_240028, src_240029, n_240031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_float_325219(result_325222, result_325222_Idx, x_325223) {
    if (result_325222[result_325222_Idx] != null) { result_325222[result_325222_Idx] = (result_325222[result_325222_Idx]).concat(cstrToNimstr((x_325223)+"")); } else { result_325222[result_325222_Idx] = cstrToNimstr((x_325223)+"").slice(); };

  
}
function add_quoted_11595201(s_11595204, s_11595204_Idx, x_11595205) {
    add_float_325219(s_11595204, s_11595204_Idx, x_11595205);

  
}
function collection_to_string_11595015(x_11595018, prefix_11595019, separator_11595020, suffix_11595021) {
  var result_11595022 = [null];

    result_11595022[0] = nimCopy(null, prefix_11595019, NTI112);
    var first_element_11595023 = true;
    L1: do {
      var value_11595030 = 0.0;
      var i_12196369 = 0;
      var l_12196370 = (x_11595018 != null ? x_11595018.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_12196369 < l_12196370)) break L3;
            value_11595030 = x_11595018[i_12196369];
            if (first_element_11595023) {
            first_element_11595023 = false;
            }
            else {
            if (result_11595022[0] != null) { result_11595022[0] = (result_11595022[0]).concat(separator_11595020); } else { result_11595022[0] = separator_11595020.slice(); };
            }
            
            add_quoted_11595201(result_11595022, 0, value_11595030);
            i_12196369 += 1;
          }
      } while(false);
    } while(false);
    if (result_11595022[0] != null) { result_11595022[0] = (result_11595022[0]).concat(suffix_11595021); } else { result_11595022[0] = suffix_11595021.slice(); };

  return result_11595022[0];

}
function HEX24_11595009(x_11595013) {
  var result_11595014 = null;

    result_11595014 = nimCopy(null, collection_to_string_11595015(x_11595013, makeNimstrLit("@["), makeNimstrLit(", "), makeNimstrLit("]")), NTI112);

  return result_11595014;

}
function to_float_26459(i_26461) {
  var result_26462 = 0.0;

    result_26462 = i_26461;

  return result_26462;

}
function min_12196265(x_12196269) {
  var result_12196270 = 0.0;

    result_12196270 = x_12196269[0];
    L1: do {
      var i_12196284 = 0;
      var colontmp__12196374 = 0;
      colontmp__12196374 = (x_12196269 != null ? (x_12196269.length-1) : -1);
      var res_12196375 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12196375 <= colontmp__12196374)) break L3;
            i_12196284 = res_12196375;
            if ((x_12196269[i_12196284] < result_12196270)) {
            result_12196270 = x_12196269[i_12196284];
            }
            
            res_12196375 += 1;
          }
      } while(false);
    } while(false);

  return result_12196270;

}
function HEX2DHEX3D_10345020(x_10345024, x_10345024_Idx, y_10345025) {
    x_10345024[x_10345024_Idx] = (x_10345024[x_10345024_Idx] - y_10345025);

  
}
function HEX2BHEX3D_1000001(x_1000005, x_1000005_Idx, y_1000006) {
    x_1000005[x_1000005_Idx] = (x_1000005[x_1000005_Idx] + y_1000006);

  
}
function gammaln_11306072(x_11306074) {
  var result_11306075 = 0.0;

  BeforeRet: do {
    var ser_11306079 = [1.0000000001900149e+000];
    var xx_11306080 = x_11306074;
    var y_11306081 = [x_11306074];
    var tmp_11306082 = [(x_11306074 + 5.5000000000000000e+000)];
    HEX2DHEX3D_10345020(tmp_11306082, 0, ((xx_11306080 + 5.0000000000000000e-001) * Math.log(tmp_11306082[0])));
    L1: do {
      var j_11306105 = 0;
      var res_12196393 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196393 <= 5)) break L3;
            j_11306105 = res_12196393;
            HEX2BHEX3D_1000001(y_11306081, 0, 1.0000000000000000e+000);
            HEX2BHEX3D_1000001(ser_11306079, 0, (cof_11306078[j_11306105] / y_11306081[0]));
            res_12196393 += 1;
          }
      } while(false);
    } while(false);
    result_11306075 = (Math.log(((2.5066282746310007e+000 * ser_11306079[0]) / xx_11306080)) - tmp_11306082[0]);
    break BeforeRet;
  } while (false);

  return result_11306075;

}
function to_int_26493(f_26495) {
    var Tmp1;

  var result_26496 = 0;

    if ((0.0 <= f_26495)) {
    Tmp1 = (((f_26495 + 5.0000000000000000e-001))|0);
    }
    else {
    Tmp1 = (((f_26495 - 5.0000000000000000e-001))|0);
    }
    
    result_26496 = Tmp1;

  return result_26496;

}
function HEX2AHEX3D_9620001(x_9620005, x_9620005_Idx, y_9620006) {
    x_9620005[x_9620005_Idx] = (x_9620005[x_9620005_Idx] * y_9620006);

  
}
function low_reg_gamma_11310067(a_11310069, x_11310070) {
    var Tmp1;

  var result_11310071 = 0.0;

  BeforeRet: do {
    var ap_11310072 = [a_11310069];
    var sum_11310073 = [(1.0000000000000000e+000 - (0.0 / a_11310069))];
    var del_11310074 = [sum_11310073[0]];
    var b_11310075 = [((x_11310070 + 1.0000000000000000e+000) - a_11310069)];
    var c_11310076 = 9.9999999999999988e+029;
    var d_11310077 = (1.0000000000000000e+000 / b_11310075[0]);
    var h_11310078 = [d_11310077];
    var an_11310079 = 0.0;
    var endval_11310080 = 0.0;
    var aln_11310081 = gammaln_11306072(a_11310069);
    if ((1.0000000000000000e+000 <= a_11310069)) {
    Tmp1 = a_11310069;
    }
    else {
    Tmp1 = (1.0000000000000000e+000 / a_11310069);
    }
    
    var itmax_11315001 = to_int_26493((((-1.0000000000000000e+000 + (Math.log(Tmp1) * 8.5000000000000000e+000)) + (a_11310069 * 4.0000000000000002e-001)) + 1.7000000000000000e+001));
    if (((x_11310070 < 0.0) || (a_11310069 <= 0.0))) {
    result_11310071 = NaN;
    break BeforeRet;
    }
    else {
    if ((x_11310070 < (a_11310069 + 1.0000000000000000e+000))) {
    L2: do {
      var i_11315010 = 0;
      var res_12196381 = 1;
      L3: do {
          L4: while (true) {
          if (!(res_12196381 <= itmax_11315001)) break L4;
            i_11315010 = res_12196381;
            HEX2BHEX3D_1000001(ap_11310072, 0, 1.0000000000000000e+000);
            HEX2AHEX3D_9620001(del_11310074, 0, (x_11310070 / ap_11310072[0]));
            HEX2BHEX3D_1000001(sum_11310073, 0, del_11310074[0]);
            res_12196381 += 1;
          }
      } while(false);
    } while(false);
    var p_a_x_11315032 = [(sum_11310073[0] * Math.exp(((-(x_11310070) + (a_11310069 * Math.log(x_11310070))) - aln_11310081)))];
    HEX2AHEX3D_9620001(p_a_x_11315032, 0, 5.0000000000000000e-001);
    result_11310071 = p_a_x_11315032[0];
    break BeforeRet;
    }
    }
    L5: do {
      var i_11315048 = 0;
      var res_12196387 = 1;
      L6: do {
          L7: while (true) {
          if (!(res_12196387 <= itmax_11315001)) break L7;
            i_11315048 = res_12196387;
            an_11310079 = (-(to_float_26459(i_11315048)) * (to_float_26459(i_11315048) - a_11310069));
            HEX2BHEX3D_1000001(b_11310075, 0, 2.0000000000000000e+000);
            d_11310077 = ((an_11310079 * d_11310077) + b_11310075[0]);
            c_11310076 = (b_11310075[0] + (an_11310079 / c_11310076));
            d_11310077 = (1.0000000000000000e+000 / d_11310077);
            HEX2AHEX3D_9620001(h_11310078, 0, (d_11310077 * c_11310076));
            res_12196387 += 1;
          }
      } while(false);
    } while(false);
    result_11310071 = (1.0000000000000000e+000 - (h_11310078[0] * Math.exp(((-(x_11310070) + (a_11310069 * Math.log(x_11310070))) - aln_11310081))));
    break BeforeRet;
  } while (false);

  return result_11310071;

}
function cdf_11540039(d_11540041, x_11540042) {
  var result_11540043 = 0.0;

  BeforeRet: do {
    if ((x_11540042 <= 0.0)) {
    result_11540043 = 0.0;
    break BeforeRet;
    }
    
    result_11540043 = low_reg_gamma_11310067((d_11540041.dof / 2.0000000000000000e+000), (x_11540042 / 2.0000000000000000e+000));
    break BeforeRet;
  } while (false);

  return result_11540043;

}
function p_value_12035089(sd_12035093) {
    var Tmp1;
      var Tmp2;

  var result_12035094 = 0.0;

  BeforeRet: do {
    if ((sd_12035093.test_type == 0)) {
    result_12035094 = ((1.0000000000000000e+000 - cdf_11540039(sd_12035093.distribution, abs_75247(sd_12035093.test_score))) + cdf_11540039(sd_12035093.distribution, -(abs_75247(sd_12035093.test_score))));
    break BeforeRet;
    }
    
    if ((sd_12035093.test_type == 3)) {
    result_12035094 = cdf_11540039(sd_12035093.distribution, sd_12035093.test_score);
    break BeforeRet;
    }
    
    if ((sd_12035093.test_type == 2)) {
    result_12035094 = (1.0000000000000000e+000 - cdf_11540039(sd_12035093.distribution, sd_12035093.test_score));
    break BeforeRet;
    }
    
    var p1_12035113 = (1.0000000000000000e+000 - cdf_11540039(sd_12035093.distribution, sd_12035093.test_score));
    var p2_12035114 = cdf_11540039(sd_12035093.distribution, sd_12035093.test_score);
      if (!(p1_12035113 < p2_12035114)) Tmp2 = false; else {        Tmp2 = (0.0 <= p1_12035113);      }    if (Tmp2) {
    Tmp1 = p1_12035113;
    }
    else {
    Tmp1 = p2_12035114;
    }
    
    result_12035094 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_12035094;

}
function max_90014(x_90016, y_90017) {
    var Tmp1;
      var Tmp2;

  var result_90018 = 0.0;

      if ((y_90017 <= x_90016)) Tmp2 = true; else {        Tmp2 = !((y_90017 == y_90017));      }    if (Tmp2) {
    Tmp1 = x_90016;
    }
    else {
    Tmp1 = y_90017;
    }
    
    result_90018 = Tmp1;

  return result_90018;

}
function HEX5E_9861027(a_9861029, b_9861030) {
  var result_9861031 = 0.0;

    result_9861031 = Math.pow(a_9861029, b_9861030);

  return result_9861031;

}
function min_80014(x_80016, y_80017) {
    var Tmp1;
      var Tmp2;

  var result_80018 = 0.0;

      if ((x_80016 <= y_80017)) Tmp2 = true; else {        Tmp2 = !((y_80017 == y_80017));      }    if (Tmp2) {
    Tmp1 = x_80016;
    }
    else {
    Tmp1 = y_80017;
    }
    
    result_80018 = Tmp1;

  return result_80018;

}
function gammapinv_11330068(p_11330070, a_11330071) {
    var Tmp1;

  var result_11330072 = 0.0;

  BeforeRet: do {
    var a1_11330073 = (a_11330071 - 1.0000000000000000e+000);
    var eps_11330074 = 1.0000000000000000e-008;
    var gln_11330075 = gammaln_11306072(a_11330071);
    var x_11330076 = [0.0];
    var err_11330077 = 0.0;
    var t_11330078 = 0.0;
    var u_11330079 = 0.0;
    var pp_11330080 = 0.0;
    var lna1_11330081 = 0.0;
    var afac_11330082 = 0.0;
    if ((1.0000000000000000e+000 <= p_11330070)) {
    result_11330072 = max_90014(1.0000000000000000e+002, (a_11330071 + (1.0000000000000000e+002 * Math.sqrt(a_11330071))));
    break BeforeRet;
    }
    
    if ((p_11330070 <= 0.0)) {
    result_11330072 = 0.0;
    break BeforeRet;
    }
    
    if ((1.0000000000000000e+000 < a_11330071)) {
    lna1_11330081 = Math.log(a1_11330073);
    afac_11330082 = Math.exp(((a1_11330073 * (lna1_11330081 - 1.0000000000000000e+000)) - gln_11330075));
    if ((p_11330070 < 5.0000000000000000e-001)) {
    Tmp1 = p_11330070;
    }
    else {
    Tmp1 = (1.0000000000000000e+000 - p_11330070);
    }
    
    pp_11330080 = Tmp1;
    t_11330078 = Math.sqrt((-2.0000000000000000e+000 * Math.log(pp_11330080)));
    x_11330076[0] = (((2.3075299999999999e+000 + (t_11330078 * 2.7061000000000002e-001)) / (1.0000000000000000e+000 + (t_11330078 * (9.9229000000000001e-001 + (t_11330078 * 4.4810000000000003e-002))))) - t_11330078);
    if ((p_11330070 < 5.0000000000000000e-001)) {
    x_11330076[0] = -(x_11330076[0]);
    }
    
    x_11330076[0] = max_90014(1.0000000000000000e-003, (a_11330071 * HEX5E_9861027(((1.0000000000000000e+000 - (1.0000000000000000e+000 / (9.0000000000000000e+000 * a_11330071))) - (x_11330076[0] / (3.0000000000000000e+000 * Math.sqrt(a_11330071)))), 3.0000000000000000e+000)));
    }
    else {
      t_11330078 = (1.0000000000000000e+000 - (a_11330071 * (2.5300000000000000e-001 + (a_11330071 * 1.2000000000000000e-001))));
      if ((p_11330070 < t_11330078)) {
      x_11330076[0] = HEX5E_9861027((p_11330070 / t_11330078), (1.0000000000000000e+000 / a_11330071));
      }
      else {
        x_11330076[0] = (1.0000000000000000e+000 - Math.log((1.0000000000000000e+000 - ((p_11330070 - t_11330078) / (1.0000000000000000e+000 - t_11330078)))));
      }
      
    }
    
    L2: do {
      var j_11340010 = 0;
      var res_12196401 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_12196401 <= 11)) break L4;
            j_11340010 = res_12196401;
            if ((x_11330076[0] <= 0.0)) {
            result_11330072 = 0.0;
            break BeforeRet;
            }
            
            err_11330077 = (low_reg_gamma_11310067(a_11330071, x_11330076[0]) - p_11330070);
            if ((1.0000000000000000e+000 < a_11330071)) {
            t_11330078 = (afac_11330082 * Math.exp((-((x_11330076[0] - a1_11330073)) + (a1_11330073 * (Math.log(x_11330076[0]) - lna1_11330081)))));
            }
            else {
              t_11330078 = Math.exp(((-(x_11330076[0]) + (a1_11330073 * Math.log(x_11330076[0]))) - gln_11330075));
            }
            
            u_11330079 = (err_11330077 / t_11330078);
            t_11330078 = (u_11330079 / (1.0000000000000000e+000 - (5.0000000000000000e-001 * min_80014(1.0000000000000000e+000, (u_11330079 * (((a_11330071 - 1.0000000000000000e+000) / x_11330076[0]) - 1.0000000000000000e+000))))));
            HEX2DHEX3D_10345020(x_11330076, 0, t_11330078);
            if ((x_11330076[0] <= 0.0)) {
            x_11330076[0] = (5.0000000000000000e-001 * (x_11330076[0] + t_11330078));
            }
            
            if ((abs_75247(t_11330078) < (eps_11330074 * x_11330076[0]))) {
            break L2;
            }
            
            res_12196401 += 1;
          }
      } while(false);
    } while(false);
    result_11330072 = x_11330076[0];
    break BeforeRet;
  } while (false);

  return result_11330072;

}
function inv_11540057(d_11540059, p_11540060) {
  var result_11540061 = 0.0;

  BeforeRet: do {
    result_11540061 = (2.0000000000000000e+000 * gammapinv_11330068(p_11540060, (5.0000000000000000e-001 * d_11540059.dof)));
    break BeforeRet;
  } while (false);

  return result_11540061;

}
function mean_11540075(d_11540077) {
  var result_11540078 = 0.0;

  BeforeRet: do {
    result_11540078 = d_11540077.dof;
    break BeforeRet;
  } while (false);

  return result_11540078;

}
function null_confidence_interval_12030010(sd_12030014, alpha_12030015) {
  var result_12030016 = null;

  BeforeRet: do {
    var default_ci_12030028 = [inv_11540057(sd_12030014.distribution, (5.0000000000000000e-001 * alpha_12030015)), inv_11540057(sd_12030014.distribution, (1.0000000000000000e+000 - (5.0000000000000000e-001 * alpha_12030015)))];
    var right_ci_12030040 = [inv_11540057(sd_12030014.distribution, 0.0), inv_11540057(sd_12030014.distribution, (1.0000000000000000e+000 - alpha_12030015))];
    var left_ci_12030052 = [inv_11540057(sd_12030014.distribution, (1.0000000000000000e+000 - alpha_12030015)), inv_11540057(sd_12030014.distribution, 1.0000000000000000e+000)];
    var test_score_12030053 = mean_11540075(sd_12030014.distribution);
    if ((test_score_12030053 < default_ci_12030028[0])) {
    result_12030016 = nimCopy(null, right_ci_12030040, NTI11626481);
    break BeforeRet;
    }
    else {
    if ((default_ci_12030028[1] < test_score_12030053)) {
    result_12030016 = nimCopy(null, left_ci_12030052, NTI11626481);
    break BeforeRet;
    }
    }
    result_12030016 = nimCopy(null, default_ci_12030028, NTI11626481);
    break BeforeRet;
  } while (false);

  return result_12030016;

}
function parse_saturated_natural_1120017(s_1120019, b_1120021, b_1120021_Idx, start_1120022) {
      var Tmp1;
          var Tmp4;

  var result_1120024 = 0;

    var i_1120025 = start_1120022;
    if (((i_1120025 < (s_1120019 != null ? s_1120019.length : 0)) && (s_1120019[i_1120025] == 43))) {
    i_1120025 += 1;
    }
    
      if (!(i_1120025 < (s_1120019 != null ? s_1120019.length : 0))) Tmp1 = false; else {        Tmp1 = (ConstSet6[s_1120019[i_1120025]] != undefined);      }    if (Tmp1) {
    b_1120021[b_1120021_Idx] = 0;
    L2: do {
        L3: while (true) {
          if (!(i_1120025 < (s_1120019 != null ? s_1120019.length : 0))) Tmp4 = false; else {            Tmp4 = (ConstSet7[s_1120019[i_1120025]] != undefined);          }        if (!Tmp4) break L3;
          var c_1130016 = (s_1120019[i_1120025] - 48);
          if ((b_1120021[b_1120021_Idx] <= Math.trunc((2147483647 - c_1130016) / 10))) {
          b_1120021[b_1120021_Idx] = ((b_1120021[b_1120021_Idx] * 10) + c_1130016);
          }
          else {
            b_1120021[b_1120021_Idx] = 2147483647;
          }
          
          i_1120025 += 1;
          L5: do {
              L6: while (true) {
              if (!((i_1120025 < (s_1120019 != null ? s_1120019.length : 0)) && (s_1120019[i_1120025] == 95))) break L6;
                i_1120025 += 1;
              }
          } while(false);
        }
    } while(false);
    result_1120024 = (i_1120025 - start_1120022);
    }
    

  return result_1120024;

}
function HEX5BHEX5D_4530068(s_4530072, x_4530074) {
  var result_4530075 = null;

    var a_4530201 = x_4530074.a;
    var l_4530401 = ((((s_4530072 != null ? s_4530072.length : 0) - x_4530074.b) - a_4530201) + 1);
    result_4530075 = nimCopy(null, mnewString(l_4530401), NTI112);
    L1: do {
      var i_4530409 = 0;
      var i_12196419 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12196419 < l_4530401)) break L3;
            i_4530409 = i_12196419;
            result_4530075[i_4530409] = s_4530072[(i_4530409 + a_4530201)];
            i_12196419 += 1;
          }
      } while(false);
    } while(false);

  return result_4530075;

}
function HEX2EHEX2E_4530001(a_4530006, b_4530008) {
  var result_4530014 = ({a: 0, b: 0});

    nimCopy(result_4530014, {a: a_4530006, b: b_4530008}, NTI4530011);

  return result_4530014;

}
function add_142042(x_142045, x_142045_Idx, y_142046) {
          if (x_142045[x_142045_Idx] === null) { x_142045[x_142045_Idx] = []; }
      var off = x_142045[x_142045_Idx].length;
      x_142045[x_142045_Idx].length += y_142046.length;
      for (var i = 0; i < y_142046.length; ++i) {
        x_142045[x_142045_Idx][off+i] = y_142046.charCodeAt(i);
      }
    

  
}
function unhandledException(e_185059) {
    var buf_185060 = [[]];
    if (!(((e_185059.message != null ? e_185059.message.length : 0) == 0))) {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(e_185059.message); } else { buf_185060[0] = e_185059.message.slice(); };
    }
    else {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit(" [")); } else { buf_185060[0] = makeNimstrLit(" ["); };
    add_142042(buf_185060, 0, e_185059.name);
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_185060[0] = makeNimstrLit("]\x0A"); };
    var cbuf_190201 = toJSStr(buf_185060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_190201);
  }
  else {
    throw cbuf_190201;
  }
  

  
}
function parse_standard_format_specifier_9755322(s_9755324, start_9755325, ignore_unknown_suffix_9755327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_9755328 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_9755328.fill = 32;
    result_9755328.align = 0;
    result_9755328.sign = 45;
    var i_9755331 = start_9755325;
    if ((((i_9755331 + 1) < (s_9755324 != null ? s_9755324.length : 0)) && (ConstSet2[s_9755324[(i_9755331 + 1)]] != undefined))) {
    result_9755328.fill = s_9755324[i_9755331];
    result_9755328.align = s_9755324[(i_9755331 + 1)];
    i_9755331 += 2;
    }
    else {
    if (((i_9755331 < (s_9755324 != null ? s_9755324.length : 0)) && (ConstSet3[s_9755324[i_9755331]] != undefined))) {
    result_9755328.align = s_9755324[i_9755331];
    i_9755331 += 1;
    }
    }
    if (((i_9755331 < (s_9755324 != null ? s_9755324.length : 0)) && (ConstSet4[s_9755324[i_9755331]] != undefined))) {
    result_9755328.sign = s_9755324[i_9755331];
    i_9755331 += 1;
    }
    
    if (((i_9755331 < (s_9755324 != null ? s_9755324.length : 0)) && (s_9755324[i_9755331] == 35))) {
    result_9755328.alternateForm = true;
    i_9755331 += 1;
    }
    
      if (!(((i_9755331 + 1) < (s_9755324 != null ? s_9755324.length : 0)) && (s_9755324[i_9755331] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet5[s_9755324[(i_9755331 + 1)]] != undefined);      }    if (Tmp1) {
    result_9755328.padWithZero = true;
    i_9755331 += 1;
    }
    
    var parsed_length_9775015 = parse_saturated_natural_1120017(s_9755324, result_9755328, "minimumWidth", i_9755331);
    i_9755331 += parsed_length_9775015;
    if (((i_9755331 < (s_9755324 != null ? s_9755324.length : 0)) && (s_9755324[i_9755331] == 46))) {
    i_9755331 += 1;
    var parsed_length_b_9775029 = parse_saturated_natural_1120017(s_9755324, result_9755328, "precision", i_9755331);
    i_9755331 += parsed_length_b_9775029;
    }
    else {
      result_9755328.precision = -1;
    }
    
      if (!(i_9755331 < (s_9755324 != null ? s_9755324.length : 0))) Tmp2 = false; else {        Tmp2 = (ConstSet8[s_9755324[i_9755331]] != undefined);      }    if (Tmp2) {
    result_9755328.typ = s_9755324[i_9755331];
    i_9755331 += 1;
    }
    
    result_9755328.endPosition = i_9755331;
      if (!!((i_9755331 == (s_9755324 != null ? s_9755324.length : 0)))) Tmp3 = false; else {        Tmp3 = !(ignore_unknown_suffix_9755327);      }    if (Tmp3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_4530068(s_9755324, HEX2EHEX2E_4530001(i_9755331, 1)) || []), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    

  return result_9755328;

}
function mk_digit_9746014(v_9746016, typ_9746017) {
      var Tmp1;

  var result_9746018 = null;

    if ((v_9746016 < 10)) {
    result_9746018 = nimCopy(null, nimCharToStr((48 + v_9746016)), NTI112);
    }
    else {
      if ((typ_9746017 == 120)) {
      Tmp1 = 97;
      }
      else {
      Tmp1 = 65;
      }
      
      result_9746018 = nimCopy(null, nimCharToStr(((Tmp1 + v_9746016) - 10)), NTI112);
    }
    

  return result_9746018;

}
function nsuRepeatChar(c_9300048, count_9300049) {
  var result_9300050 = null;

    result_9300050 = nimCopy(null, mnewString(count_9300049), NTI112);
    L1: do {
      var i_9300059 = 0;
      var colontmp__12196435 = 0;
      colontmp__12196435 = (count_9300049 - 1);
      var res_12196436 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196436 <= colontmp__12196435)) break L3;
            i_9300059 = res_12196436;
            result_9300050[i_9300059] = c_9300048;
            res_12196436 += 1;
          }
      } while(false);
    } while(false);

  return result_9300050;

}
function format_int_11490002(n_11490005, radix_11490006, spec_11490007) {
    var Tmp7;

  var result_11490008 = null;

    var v_11490201 = n_11490005;
    var negative_11490202 = (v_11490201 < 0);
    if (negative_11490202) {
    v_11490201 = (v_11490201 * -1);
    }
    
    var xx_11490203 = [];
    if (spec_11490007.alternateForm) {
    switch (spec_11490007.typ) {
    case 88:
      xx_11490203 = nimCopy(null, makeNimstrLit("0x"), NTI112);
      break;
    case 120:
      xx_11490203 = nimCopy(null, makeNimstrLit("0x"), NTI112);
      break;
    case 98:
      xx_11490203 = nimCopy(null, makeNimstrLit("0b"), NTI112);
      break;
    case 111:
      xx_11490203 = nimCopy(null, makeNimstrLit("0o"), NTI112);
      break;
    default: 
      break;
    }
    }
    
    if ((v_11490201 == 0)) {
    result_11490008 = nimCopy(null, makeNimstrLit("0"), NTI112);
    }
    else {
      result_11490008 = nimCopy(null, [], NTI112);
      L1: do {
          L2: while (true) {
          if (!(0 < v_11490201)) break L2;
            var d_11490206 = Math.trunc(v_11490201 % radix_11490006);
            v_11490201 = Math.trunc(v_11490201 / radix_11490006);
            if (result_11490008 != null) { result_11490008 = (result_11490008).concat(mk_digit_9746014(d_11490206, spec_11490007.typ)); } else { result_11490008 = mk_digit_9746014(d_11490206, spec_11490007.typ).slice(); };
          }
      } while(false);
      L3: do {
        var idx_11490215 = 0;
        var colontmp__12196427 = 0;
        colontmp__12196427 = Math.trunc((result_11490008 != null ? result_11490008.length : 0) / 2);
        var i_12196428 = 0;
        L4: do {
            L5: while (true) {
            if (!(i_12196428 < colontmp__12196427)) break L5;
              idx_11490215 = i_12196428;
              var Tmp6 = result_11490008[idx_11490215]; result_11490008[idx_11490215] = result_11490008[(((result_11490008 != null ? result_11490008.length : 0) - idx_11490215) - 1)]; result_11490008[(((result_11490008 != null ? result_11490008.length : 0) - idx_11490215) - 1)] = Tmp6;              i_12196428 += 1;
            }
        } while(false);
      } while(false);
    }
    
    if (spec_11490007.padWithZero) {
    if (negative_11490202) Tmp7 = true; else {      Tmp7 = !((spec_11490007.sign == 45));    }    var sign_11500008 = Tmp7;
    var to_fill_11500013 = (((spec_11490007.minimumWidth - (result_11490008 != null ? result_11490008.length : 0)) - (xx_11490203 != null ? xx_11490203.length : 0)) - (sign_11500008 ? 1:0));
    if ((0 < to_fill_11500013)) {
    result_11490008 = nimCopy(null, (nsuRepeatChar(48, to_fill_11500013) || []).concat(result_11490008 || []), NTI112);
    }
    
    }
    
    if (negative_11490202) {
    result_11490008 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_11490203 || [],result_11490008 || []), NTI112);
    }
    else {
    if (!((spec_11490007.sign == 45))) {
    result_11490008 = nimCopy(null, [spec_11490007.sign].concat(xx_11490203 || [],result_11490008 || []), NTI112);
    }
    else {
      result_11490008 = nimCopy(null, (xx_11490203 || []).concat(result_11490008 || []), NTI112);
    }
    }
    if ((spec_11490007.align == 60)) {
    L8: do {
      var i_11500019 = 0;
      var colontmp__12196431 = 0;
      colontmp__12196431 = (result_11490008 != null ? result_11490008.length : 0);
      var i_12196432 = colontmp__12196431;
      L9: do {
          L10: while (true) {
          if (!(i_12196432 < spec_11490007.minimumWidth)) break L10;
            i_11500019 = i_12196432;
            if (result_11490008 != null) { addChar(result_11490008, spec_11490007.fill); } else { result_11490008 = [spec_11490007.fill]; };
            i_12196432 += 1;
          }
      } while(false);
    } while(false);
    }
    else {
      var to_fill_11500020 = (spec_11490007.minimumWidth - (result_11490008 != null ? result_11490008.length : 0));
      if ((spec_11490007.align == 94)) {
      var half_11500021 = Math.trunc(to_fill_11500020 / 2);
      result_11490008 = nimCopy(null, (nsuRepeatChar(spec_11490007.fill, half_11500021) || []).concat(result_11490008 || [],nsuRepeatChar(spec_11490007.fill, (to_fill_11500020 - half_11500021)) || []), NTI112);
      }
      else {
        if ((0 < to_fill_11500020)) {
        result_11490008 = nimCopy(null, (nsuRepeatChar(spec_11490007.fill, to_fill_11500020) || []).concat(result_11490008 || []), NTI112);
        }
        
      }
      
    }
    

  return result_11490008;

}
function format_value_11485001(result_11485004, result_11485004_Idx, value_11485005, specifier_11485006) {
  BeforeRet: do {
    if (((specifier_11485006 != null ? specifier_11485006.length : 0) == 0)) {
    if (result_11485004[result_11485004_Idx] != null) { result_11485004[result_11485004_Idx] = (result_11485004[result_11485004_Idx]).concat(cstrToNimstr((value_11485005)+"")); } else { result_11485004[result_11485004_Idx] = cstrToNimstr((value_11485005)+"").slice(); };
    break BeforeRet;
    }
    
    var spec_11485007 = parse_standard_format_specifier_9755322(specifier_11485006, 0, false);
    var radix_11485009 = 10;
    switch (spec_11485007.typ) {
    case 120:
    case 88:
      radix_11485009 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_11485009 = 2;
      break;
    case 111:
      radix_11485009 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_11485007.typ]), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    if (result_11485004[result_11485004_Idx] != null) { result_11485004[result_11485004_Idx] = (result_11485004[result_11485004_Idx]).concat(format_int_11490002(value_11485005, radix_11485009, spec_11485007)); } else { result_11485004[result_11485004_Idx] = format_int_11490002(value_11485005, radix_11485009, spec_11485007).slice(); };
  } while (false);

  
}
function HEX24_11535293(d_11535295) {
  var result_11535296 = null;

    var fmt_res_11535297 = [mnewString(0)];
    if (fmt_res_11535297[0] != null) { fmt_res_11535297[0] = (fmt_res_11535297[0]).concat(makeNimstrLit("ChiSquare(dof=")); } else { fmt_res_11535297[0] = makeNimstrLit("ChiSquare(dof="); };
    format_value_11485001(fmt_res_11535297, 0, to_int_26493(d_11535295.dof), []);
    if (fmt_res_11535297[0] != null) { fmt_res_11535297[0] = (fmt_res_11535297[0]).concat(makeNimstrLit(")")); } else { fmt_res_11535297[0] = makeNimstrLit(")"); };
    result_11535296 = nimCopy(null, fmt_res_11535297[0], NTI112);

  return result_11535296;

}
function flatten_12196076(test_12196080) {
  var result_12196081 = null;

    result_12196081 = ({score: 0.0, p_value: 0.0, null_confidence_interval: null, distribution: null});
    result_12196081.score = test_12196080.test_score;
    result_12196081.p_value = p_value_12035089(test_12196080);
    result_12196081.null_confidence_interval = nimCopy(null, null_confidence_interval_12030010(test_12196080, 5.0000000000000003e-002), NTI11626715);
    result_12196081.distribution = nimCopy(null, HEX24_11535293(test_12196080.distribution), NTI112);

  return result_12196081;

}
function htest_score_12060210(distribution_12060213, score_12060214, test_type_12060215) {
  var result_12060217 = null;

    result_12060217 = ({distribution: null, test_score: 0.0, test_type: 0});
    result_12060217.distribution = distribution_12060213;
    result_12060217.test_score = score_12060214;
    result_12060217.test_type = test_type_12060215;

  return result_12060217;

}
function chisquare_11535270(dof_11535272) {
  var result_11535273 = null;

    result_11535273 = ({dof: 0.0});
    result_11535273.dof = dof_11535272;

  return result_11535273;

}
function existence_change_point_hypothesis(test_scores_12196245) {
  var result_12196246 = null;

    rawEcho(makeNimstrLit("test_scores:"), HEX24_11595009(test_scores_12196245));
    var total_score_12196298 = (to_float_26459((test_scores_12196245 != null ? test_scores_12196245.length : 0)) * min_12196265(test_scores_12196245));
    result_12196246 = flatten_12196076(htest_score_12060210(chisquare_11535270((2.0000000000000000e+000 * to_float_26459((test_scores_12196245 != null ? test_scores_12196245.length : 0)))), total_score_12196298, 1));

  return result_12196246;

}
function add_intercept_11626449(x_11626451) {
  var result_11626452 = null;

    L1: do {
      var r_11626470 = 0;
      var colontmp__12196652 = 0;
      colontmp__12196652 = (x_11626451 != null ? (x_11626451.length-1) : -1);
      var res_12196653 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196653 <= colontmp__12196652)) break L3;
            r_11626470 = res_12196653;
            if (result_11626452 != null) { result_11626452.push([x_11626451[r_11626470], 1.0000000000000000e+000]); } else { result_11626452 = [[x_11626451[r_11626470], 1.0000000000000000e+000]]; };
            res_12196653 += 1;
          }
      } while(false);
    } while(false);

  return result_11626452;

}
function HEX5BHEX5D_11627070(s_11627076, x_11627078) {
  var result_11627080 = null;

    var a_11627201 = x_11627078.a;
    var l_11627401 = ((x_11627078.b - a_11627201) + 1);
    result_11627080 = new Array(l_11627401); for (var i=0;i<l_11627401;++i) {result_11627080[i]=0.0;}    L1: do {
      var i_11627416 = 0;
      var i_12196661 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12196661 < l_11627401)) break L3;
            i_11627416 = i_12196661;
            result_11627080[i_11627416] = s_11627076[(i_11627416 + a_11627201)];
            i_12196661 += 1;
          }
      } while(false);
    } while(false);

  return result_11627080;

}
function HEX2EHEX2E_2080220(a_2080225, b_2080227) {
  var result_2080233 = ({a: 0, b: 0});

    nimCopy(result_2080233, {a: a_2080225, b: b_2080227}, NTI2080230);

  return result_2080233;

}
function cols_10075836(a_10075838) {
  var result_10075839 = 0;

    result_10075839 = (a_10075838[0] != null ? a_10075838[0].length : 0);

  return result_10075839;

}
function as_column_vector_10015414(v_10015416) {
  var result_10015417 = null;

    L1: do {
      var i_10015431 = 0;
      var colontmp__12196691 = 0;
      colontmp__12196691 = (v_10015416 != null ? v_10015416.length : 0);
      var res_12196692 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12196692 <= colontmp__12196691)) break L3;
            i_10015431 = res_12196692;
            if (result_10015417 != null) { result_10015417.push([v_10015416[(i_10015431 - 1)]]); } else { result_10015417 = [[v_10015416[(i_10015431 - 1)]]]; };
            res_12196692 += 1;
          }
      } while(false);
    } while(false);

  return result_10015417;

}
function identity_10300414(rows_10300416, cols_10300417) {
                    var Tmp7;
                      var Tmp8;

  var result_10300418 = null;

    var cols0_10300419 = cols_10300417;
    if ((cols_10300417 < 0)) {
    cols0_10300419 = rows_10300416;
    }
    
    L1: do {
      var i_10300428 = 0;
      var res_12196719 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12196719 <= rows_10300416)) break L3;
            i_10300428 = res_12196719;
            if (result_10300418 != null) { result_10300418.push([]); } else { result_10300418 = [[]]; };
            L4: do {
              var j_10300459 = 0;
              var res_12196714 = 1;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196714 <= cols0_10300419)) break L6;
                    j_10300459 = res_12196714;
                    if ((i_10300428 == j_10300459)) {
                    if ((Tmp7 = result_10300418[(i_10300428 - 1)], Tmp7) != null) { Tmp7.push(1.0000000000000000e+000); } else { Tmp7 = [1.0000000000000000e+000]; };
                    }
                    else {
                    if ((Tmp8 = result_10300418[(i_10300428 - 1)], Tmp8) != null) { Tmp8.push(0.0); } else { Tmp8 = [0.0]; };
                    }
                    
                    res_12196714 += 1;
                  }
              } while(false);
            } while(false);
            res_12196719 += 1;
          }
      } while(false);
    } while(false);

  return result_10300418;

}
function rows_10075814(a_10075816) {
  var result_10075817 = 0;

    result_10075817 = (a_10075816 != null ? a_10075816.length : 0);

  return result_10075817;

}
function hstack_10301414(matrices_10301417) {
  var result_10301418 = null;

    L1: do {
      var k_10301431 = 0;
      var colontmp__12196772 = 0;
      colontmp__12196772 = ((matrices_10301417 != null ? matrices_10301417.length : 0) - 1);
      var res_12196773 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12196773 <= colontmp__12196772)) break L3;
            k_10301431 = res_12196773;
            res_12196773 += 1;
          }
      } while(false);
    } while(false);
    L4: do {
      var r_10310209 = 0;
      var colontmp__12196790 = 0;
      colontmp__12196790 = (rows_10075814(matrices_10301417[0]) - 1);
      var res_12196791 = 0;
      L5: do {
          L6: while (true) {
          if (!(res_12196791 <= colontmp__12196790)) break L6;
            r_10310209 = res_12196791;
            if (result_10301418 != null) { result_10301418.push([]); } else { result_10301418 = [[]]; };
            L7: do {
              var a_10310262 = null;
              var i_12196788 = 0;
              L8: do {
                  L9: while (true) {
                  if (!(i_12196788 < (matrices_10301417 != null ? matrices_10301417.length : 0))) break L9;
                    a_10310262 = matrices_10301417[i_12196788];
                    L10: do {
                      var c_10310271 = 0;
                      var colontmp__12196781 = 0;
                      colontmp__12196781 = (cols_10075836(a_10310262) - 1);
                      var res_12196782 = 0;
                      L11: do {
                          L12: while (true) {
                          if (!(res_12196782 <= colontmp__12196781)) break L12;
                            c_10310271 = res_12196782;
                            if (result_10301418[r_10310209] != null) { result_10301418[r_10310209].push(a_10310262[r_10310209][c_10310271]); } else { result_10301418[r_10310209] = [a_10310262[r_10310209][c_10310271]]; };
                            res_12196782 += 1;
                          }
                      } while(false);
                    } while(false);
                    i_12196788 += 1;
                  }
              } while(false);
            } while(false);
            res_12196791 += 1;
          }
      } while(false);
    } while(false);

  return result_10301418;

}
function HEX2FHEX3D_326241(x_326244, x_326244_Idx, y_326245) {
    x_326244[x_326244_Idx] = (x_326244[x_326244_Idx] / y_326245);

  
}
function gauss_jordan_10340277(a_10340279, b_10340280) {
  var result_10340281 = null;

  BeforeRet: do {
    var m_10340284 = hstack_10301414([nimCopy(null, a_10340279, NTI9861067), nimCopy(null, b_10340280, NTI9861067)]);
    var c_10340285 = 0.0;
    var maxrow_10340287 = 0;
    L1: do {
      var y_10340296 = 0;
      var colontmp__12196748 = 0;
      colontmp__12196748 = (rows_10075814(m_10340284) - 1);
      var res_12196749 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196749 <= colontmp__12196748)) break L3;
            y_10340296 = res_12196749;
            maxrow_10340287 = y_10340296;
            L4: do {
              var y2_10340302 = 0;
              var colontmp__12196726 = 0;
              var colontmp__12196727 = 0;
              colontmp__12196726 = (y_10340296 + 1);
              colontmp__12196727 = (rows_10075814(m_10340284) - 1);
              var res_12196728 = colontmp__12196726;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196728 <= colontmp__12196727)) break L6;
                    y2_10340302 = res_12196728;
                    if ((abs_75247(m_10340284[maxrow_10340287][y_10340296]) < abs_75247(m_10340284[y2_10340302][y_10340296]))) {
                    maxrow_10340287 = y2_10340302;
                    }
                    
                    res_12196728 += 1;
                  }
              } while(false);
            } while(false);
            var Tmp7 = m_10340284[y_10340296]; m_10340284[y_10340296] = m_10340284[maxrow_10340287]; m_10340284[maxrow_10340287] = Tmp7;            L8: do {
              var y2_10345013 = 0;
              var colontmp__12196741 = 0;
              var colontmp__12196742 = 0;
              colontmp__12196741 = (y_10340296 + 1);
              colontmp__12196742 = (rows_10075814(m_10340284) - 1);
              var res_12196743 = colontmp__12196741;
              L9: do {
                  L10: while (true) {
                  if (!(res_12196743 <= colontmp__12196742)) break L10;
                    y2_10345013 = res_12196743;
                    c_10340285 = (m_10340284[y2_10345013][y_10340296] / m_10340284[y_10340296][y_10340296]);
                    L11: do {
                      var x_10345019 = 0;
                      var colontmp__12196735 = 0;
                      colontmp__12196735 = (cols_10075836(m_10340284) - 1);
                      var res_12196736 = y_10340296;
                      L12: do {
                          L13: while (true) {
                          if (!(res_12196736 <= colontmp__12196735)) break L13;
                            x_10345019 = res_12196736;
                            HEX2DHEX3D_10345020(m_10340284[y2_10345013], x_10345019, (m_10340284[y_10340296][x_10345019] * c_10340285));
                            res_12196736 += 1;
                          }
                      } while(false);
                    } while(false);
                    res_12196743 += 1;
                  }
              } while(false);
            } while(false);
            res_12196749 += 1;
          }
      } while(false);
    } while(false);
    var y_10345040 = (rows_10075814(m_10340284) - 1);
    var x0_10345042 = 0;
    L14: do {
        L15: while (true) {
        if (!(0 <= y_10345040)) break L15;
          c_10340285 = m_10340284[y_10345040][y_10345040];
          L16: do {
            var y2_10350009 = 0;
            var colontmp__12196757 = 0;
            colontmp__12196757 = (y_10345040 - 1);
            var res_12196758 = 0;
            L17: do {
                L18: while (true) {
                if (!(res_12196758 <= colontmp__12196757)) break L18;
                  y2_10350009 = res_12196758;
                  x0_10345042 = (cols_10075836(m_10340284) - 1);
                  L19: do {
                      L20: while (true) {
                      if (!((y_10345040 - 1) < x0_10345042)) break L20;
                        HEX2DHEX3D_10345020(m_10340284[y2_10350009], x0_10345042, ((m_10340284[y_10345040][x0_10345042] * m_10340284[y2_10350009][y_10345040]) / c_10340285));
                        x0_10345042 -= 1;
                      }
                  } while(false);
                  res_12196758 += 1;
                }
            } while(false);
          } while(false);
          HEX2FHEX3D_326241(m_10340284[y_10345040], y_10345040, c_10340285);
          L21: do {
            var x_10355020 = 0;
            var colontmp__12196764 = 0;
            var colontmp__12196765 = 0;
            colontmp__12196764 = rows_10075814(m_10340284);
            colontmp__12196765 = (cols_10075836(m_10340284) - 1);
            var res_12196766 = colontmp__12196764;
            L22: do {
                L23: while (true) {
                if (!(res_12196766 <= colontmp__12196765)) break L23;
                  x_10355020 = res_12196766;
                  HEX2FHEX3D_326241(m_10340284[y_10345040], x_10355020, c_10340285);
                  res_12196766 += 1;
                }
            } while(false);
          } while(false);
          y_10345040 -= 1;
        }
    } while(false);
    result_10340281 = nimCopy(null, m_10340284, NTI9861067);
    break BeforeRet;
  } while (false);

  return result_10340281;

}
function inverse_10355071(a_10355073) {
  var result_10355074 = null;

    var b_10355075 = identity_10300414(rows_10075814(a_10355073), cols_10075836(a_10355073));
    var c_10355076 = gauss_jordan_10340277(a_10355073, b_10355075);
    L1: do {
      var i_10355085 = 0;
      var colontmp__12196706 = 0;
      colontmp__12196706 = (rows_10075814(a_10355073) - 1);
      var res_12196707 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196707 <= colontmp__12196706)) break L3;
            i_10355085 = res_12196707;
            if (result_10355074 != null) { result_10355074.push([]); } else { result_10355074 = [[]]; };
            L4: do {
              var j_10355113 = 0;
              var colontmp__12196699 = 0;
              var colontmp__12196700 = 0;
              colontmp__12196699 = cols_10075836(a_10355073);
              colontmp__12196700 = (cols_10075836(c_10355076) - 1);
              var res_12196701 = colontmp__12196699;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196701 <= colontmp__12196700)) break L6;
                    j_10355113 = res_12196701;
                    if (result_10355074[i_10355085] != null) { result_10355074[i_10355085].push(c_10355076[i_10355085][j_10355113]); } else { result_10355074[i_10355085] = [c_10355076[i_10355085][j_10355113]]; };
                    res_12196701 += 1;
                  }
              } while(false);
            } while(false);
            res_12196707 += 1;
          }
      } while(false);
    } while(false);

  return result_10355074;

}
function standard_matrix_product_10115614(a_10115616, b_10115617) {
  var result_10115618 = null;

    var n_10125206 = (a_10115616 != null ? a_10115616.length : 0);
    L1: do {
      var i_10125224 = 0;
      var colontmp__12196811 = 0;
      colontmp__12196811 = (a_10115616 != null ? (a_10115616.length-1) : -1);
      var res_12196812 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196812 <= colontmp__12196811)) break L3;
            i_10125224 = res_12196812;
            if (result_10115618 != null) { result_10115618.push([]); } else { result_10115618 = [[]]; };
            L4: do {
              var j_10125276 = 0;
              var colontmp__12196805 = 0;
              colontmp__12196805 = (b_10115617[0] != null ? (b_10115617[0].length-1) : -1);
              var res_12196806 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196806 <= colontmp__12196805)) break L6;
                    j_10125276 = res_12196806;
                    if (result_10115618[i_10125224] != null) { result_10115618[i_10125224].push(0.0); } else { result_10115618[i_10125224] = [0.0]; };
                    L7: do {
                      var k_10125301 = 0;
                      var colontmp__12196799 = 0;
                      colontmp__12196799 = (b_10115617 != null ? (b_10115617.length-1) : -1);
                      var res_12196800 = 0;
                      L8: do {
                          L9: while (true) {
                          if (!(res_12196800 <= colontmp__12196799)) break L9;
                            k_10125301 = res_12196800;
                            HEX2BHEX3D_1000001(result_10115618[i_10125224], j_10125276, (a_10115616[i_10125224][k_10125301] * b_10115617[k_10125301][j_10125276]));
                            res_12196800 += 1;
                          }
                      } while(false);
                    } while(false);
                    res_12196806 += 1;
                  }
              } while(false);
            } while(false);
            res_12196812 += 1;
          }
      } while(false);
    } while(false);

  return result_10115618;

}
function multiply_10125322(a_10125324, b_10125325) {
  var result_10125326 = null;

    result_10125326 = nimCopy(null, standard_matrix_product_10115614(a_10125324, b_10125325), NTI9861067);

  return result_10125326;

}
function HEX2A_10125340(a_10125342, b_10125343) {
  var result_10125344 = null;

    result_10125344 = nimCopy(null, multiply_10125322(a_10125342, b_10125343), NTI9861067);

  return result_10125344;

}
function transpose_10301214(a_10301216) {
  var result_10301217 = null;

    L1: do {
      var q_10301247 = 0;
      var colontmp__12196825 = 0;
      colontmp__12196825 = (a_10301216[0] != null ? (a_10301216[0].length-1) : -1);
      var res_12196826 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196826 <= colontmp__12196825)) break L3;
            q_10301247 = res_12196826;
            if (result_10301217 != null) { result_10301217.push([]); } else { result_10301217 = [[]]; };
            L4: do {
              var k_10301287 = 0;
              var colontmp__12196819 = 0;
              colontmp__12196819 = (a_10301216 != null ? (a_10301216.length-1) : -1);
              var res_12196820 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196820 <= colontmp__12196819)) break L6;
                    k_10301287 = res_12196820;
                    if (result_10301217[q_10301247] != null) { result_10301217[q_10301247].push(a_10301216[k_10301287][q_10301247]); } else { result_10301217[q_10301247] = [a_10301216[k_10301287][q_10301247]]; };
                    res_12196820 += 1;
                  }
              } while(false);
            } while(false);
            res_12196826 += 1;
          }
      } while(false);
    } while(false);

  return result_10301217;

}
function t_10301308(a_10301310) {
  var result_10301311 = null;

    result_10301311 = nimCopy(null, transpose_10301214(a_10301310), NTI9861067);

  return result_10301311;

}
function subtract_10076214(a_10076216, b_10076217) {
  var result_10076218 = null;

    L1: do {
      var k_10095218 = 0;
      var colontmp__12196839 = 0;
      colontmp__12196839 = (a_10076216 != null ? (a_10076216.length-1) : -1);
      var res_12196840 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196840 <= colontmp__12196839)) break L3;
            k_10095218 = res_12196840;
            if (result_10076218 != null) { result_10076218.push([]); } else { result_10076218 = [[]]; };
            L4: do {
              var q_10095270 = 0;
              var colontmp__12196833 = 0;
              colontmp__12196833 = (a_10076216[0] != null ? (a_10076216[0].length-1) : -1);
              var res_12196834 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196834 <= colontmp__12196833)) break L6;
                    q_10095270 = res_12196834;
                    if (result_10076218[k_10095218] != null) { result_10076218[k_10095218].push((a_10076216[k_10095218][q_10095270] - b_10076217[k_10095218][q_10095270])); } else { result_10076218[k_10095218] = [(a_10076216[k_10095218][q_10095270] - b_10076217[k_10095218][q_10095270])]; };
                    res_12196834 += 1;
                  }
              } while(false);
            } while(false);
            res_12196840 += 1;
          }
      } while(false);
    } while(false);

  return result_10076218;

}
function HEX2D_10095327(a_10095329, b_10095330) {
  var result_10095331 = null;

    result_10095331 = nimCopy(null, subtract_10076214(a_10095329, b_10095330), NTI9861067);

  return result_10095331;

}
function norm_9995414(a_9995416, p_9995417) {
  var result_9995418 = [0.0];

    L1: do {
      var k_9995436 = 0;
      var colontmp__12196846 = 0;
      colontmp__12196846 = (a_9995416 != null ? (a_9995416.length-1) : -1);
      var res_12196847 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196847 <= colontmp__12196846)) break L3;
            k_9995436 = res_12196847;
            HEX2BHEX3D_1000001(result_9995418, 0, Math.pow(a_9995416[k_9995436], p_9995417));
            res_12196847 += 1;
          }
      } while(false);
    } while(false);
    result_9995418[0] = Math.pow(result_9995418[0], (1.0000000000000000e+000 / p_9995417));

  return result_9995418[0];

}
function wise_multiply_10115291(a_10115293, b_10115294) {
  var result_10115295 = null;

    L1: do {
      var k_10115313 = 0;
      var colontmp__12196860 = 0;
      colontmp__12196860 = (a_10115293 != null ? (a_10115293.length-1) : -1);
      var res_12196861 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196861 <= colontmp__12196860)) break L3;
            k_10115313 = res_12196861;
            if (result_10115295 != null) { result_10115295.push([]); } else { result_10115295 = [[]]; };
            L4: do {
              var q_10115365 = 0;
              var colontmp__12196854 = 0;
              colontmp__12196854 = (a_10115293[0] != null ? (a_10115293[0].length-1) : -1);
              var res_12196855 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196855 <= colontmp__12196854)) break L6;
                    q_10115365 = res_12196855;
                    if (result_10115295[k_10115313] != null) { result_10115295[k_10115313].push((a_10115293[k_10115313][q_10115365] * b_10115294)); } else { result_10115295[k_10115313] = [(a_10115293[k_10115313][q_10115365] * b_10115294)]; };
                    res_12196855 += 1;
                  }
              } while(false);
            } while(false);
            res_12196861 += 1;
          }
      } while(false);
    } while(false);

  return result_10115295;

}
function wise_multiply_10115386(a_10115388, b_10115389) {
  var result_10115390 = null;

    result_10115390 = nimCopy(null, wise_multiply_10115291(b_10115389, a_10115388), NTI9861067);

  return result_10115390;

}
function HEX2A_10115512(a_10115514, b_10115515) {
  var result_10115516 = null;

    result_10115516 = nimCopy(null, wise_multiply_10115386(a_10115514, b_10115515), NTI9861067);

  return result_10115516;

}
function pow_10005239(a_10005241, b_10005242) {
  var result_10005243 = null;

    L1: do {
      var k_10005261 = 0;
      var colontmp__12196867 = 0;
      colontmp__12196867 = (a_10005241 != null ? (a_10005241.length-1) : -1);
      var res_12196868 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196868 <= colontmp__12196867)) break L3;
            k_10005261 = res_12196868;
            if (result_10005243 != null) { result_10005243.push(Math.pow(a_10005241[k_10005261], b_10005242)); } else { result_10005243 = [Math.pow(a_10005241[k_10005261], b_10005242)]; };
            res_12196868 += 1;
          }
      } while(false);
    } while(false);

  return result_10005243;

}
function HEX2EHEX5E_10005318(a_10005320, b_10005321) {
  var result_10005322 = null;

    result_10005322 = nimCopy(null, pow_10005239(a_10005320, b_10005321), NTI9861064);

  return result_10005322;

}
function constant_vector_10005414(cols_10005416, constant_10005417) {
  var result_10005418 = null;

    L1: do {
      var i_10005427 = 0;
      var res_12196881 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12196881 <= cols_10005416)) break L3;
            i_10005427 = res_12196881;
            if (result_10005418 != null) { result_10005418.push(constant_10005417); } else { result_10005418 = [constant_10005417]; };
            res_12196881 += 1;
          }
      } while(false);
    } while(false);

  return result_10005418;

}
function zeros_10005448(col_10005450) {
  var result_10005451 = null;

    result_10005451 = nimCopy(null, constant_vector_10005414(col_10005450, 0.0), NTI9861064);

  return result_10005451;

}
function diag_10076014(a_10076016) {
  var result_10076017 = null;

    result_10076017 = nimCopy(null, zeros_10005448(rows_10075814(a_10076016)), NTI9861064);
    L1: do {
      var i_10076026 = 0;
      var colontmp__12196874 = 0;
      colontmp__12196874 = (rows_10075814(a_10076016) - 1);
      var res_12196875 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196875 <= colontmp__12196874)) break L3;
            i_10076026 = res_12196875;
            result_10076017[i_10076026] = a_10076016[i_10076026][i_10076026];
            res_12196875 += 1;
          }
      } while(false);
    } while(false);

  return result_10076017;

}
function any_val_9910614(a_9910616, true_val_9910617) {
  var result_9910618 = false;

  BeforeRet: do {
    L1: do {
      var k_9910636 = 0;
      var colontmp__12196887 = 0;
      colontmp__12196887 = (a_9910616 != null ? (a_9910616.length-1) : -1);
      var res_12196888 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196888 <= colontmp__12196887)) break L3;
            k_9910636 = res_12196888;
            if ((a_9910616[k_9910636] == true_val_9910617)) {
            result_9910618 = true;
            break BeforeRet;
            }
            
            res_12196888 += 1;
          }
      } while(false);
    } while(false);
    result_9910618 = false;
    break BeforeRet;
  } while (false);

  return result_9910618;

}
function subtract_9870614(a_9870616, b_9870617) {
  var result_9870618 = null;

    L1: do {
      var k_9880218 = 0;
      var colontmp__12196894 = 0;
      colontmp__12196894 = (a_9870616 != null ? (a_9870616.length-1) : -1);
      var res_12196895 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196895 <= colontmp__12196894)) break L3;
            k_9880218 = res_12196895;
            if (result_9870618 != null) { result_9870618.push((a_9870616[k_9880218] - b_9870617[k_9880218])); } else { result_9870618 = [(a_9870616[k_9880218] - b_9870617[k_9880218])]; };
            res_12196895 += 1;
          }
      } while(false);
    } while(false);

  return result_9870618;

}
function HEX2D_9880275(a_9880277, b_9880278) {
  var result_9880279 = null;

    result_9880279 = nimCopy(null, subtract_9870614(a_9880277, b_9880278), NTI9861064);

  return result_9880279;

}
function divide_9900239(a_9900241, b_9900242) {
  var result_9900243 = null;

    L1: do {
      var k_9900261 = 0;
      var colontmp__12196901 = 0;
      colontmp__12196901 = (a_9900241 != null ? (a_9900241.length-1) : -1);
      var res_12196902 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196902 <= colontmp__12196901)) break L3;
            k_9900261 = res_12196902;
            if (result_9900243 != null) { result_9900243.push((a_9900241[k_9900261] / b_9900242)); } else { result_9900243 = [(a_9900241[k_9900261] / b_9900242)]; };
            res_12196902 += 1;
          }
      } while(false);
    } while(false);

  return result_9900243;

}
function HEX2F_9900343(a_9900345, b_9900346) {
  var result_9900347 = null;

    result_9900347 = nimCopy(null, divide_9900239(a_9900345, b_9900346), NTI9861064);

  return result_9900347;

}
function sum_10125614(a_10125616, axis_10125617) {
  var result_10125618 = [null];

    if ((axis_10125617 == 0)) {
    L1: do {
      var c_10125648 = 0;
      var colontmp__12196915 = 0;
      colontmp__12196915 = (a_10125616[0] != null ? (a_10125616[0].length-1) : -1);
      var res_12196916 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196916 <= colontmp__12196915)) break L3;
            c_10125648 = res_12196916;
            if (result_10125618[0] != null) { result_10125618[0].push(0.0); } else { result_10125618[0] = [0.0]; };
            L4: do {
              var r_10125673 = 0;
              var colontmp__12196909 = 0;
              colontmp__12196909 = (a_10125616 != null ? (a_10125616.length-1) : -1);
              var res_12196910 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196910 <= colontmp__12196909)) break L6;
                    r_10125673 = res_12196910;
                    HEX2BHEX3D_1000001(result_10125618[0], c_10125648, a_10125616[r_10125673][c_10125648]);
                    res_12196910 += 1;
                  }
              } while(false);
            } while(false);
            res_12196916 += 1;
          }
      } while(false);
    } while(false);
    }
    else {
      L7: do {
        var r_10125698 = 0;
        var colontmp__12196929 = 0;
        colontmp__12196929 = (a_10125616 != null ? (a_10125616.length-1) : -1);
        var res_12196930 = 0;
        L8: do {
            L9: while (true) {
            if (!(res_12196930 <= colontmp__12196929)) break L9;
              r_10125698 = res_12196930;
              if (result_10125618[0] != null) { result_10125618[0].push(0.0); } else { result_10125618[0] = [0.0]; };
              L10: do {
                var c_10125735 = 0;
                var colontmp__12196923 = 0;
                colontmp__12196923 = (a_10125616[0] != null ? (a_10125616[0].length-1) : -1);
                var res_12196924 = 0;
                L11: do {
                    L12: while (true) {
                    if (!(res_12196924 <= colontmp__12196923)) break L12;
                      c_10125735 = res_12196924;
                      HEX2BHEX3D_1000001(result_10125618[0], r_10125698, a_10125616[r_10125698][c_10125735]);
                      res_12196924 += 1;
                    }
                } while(false);
              } while(false);
              res_12196930 += 1;
            }
        } while(false);
      } while(false);
    }
    

  return result_10125618[0];

}
function mean_10145814(a_10145816, axis_10145817) {
  var result_10145818 = null;

  BeforeRet: do {
    if ((axis_10145817 == 0)) {
    result_10145818 = nimCopy(null, HEX2F_9900343(sum_10125614(a_10145816, axis_10145817), to_float_26459(cols_10075836(a_10145816))), NTI9861064);
    break BeforeRet;
    }
    
    result_10145818 = nimCopy(null, HEX2F_9900343(sum_10125614(a_10145816, axis_10145817), to_float_26459(rows_10075814(a_10145816))), NTI9861064);
    break BeforeRet;
  } while (false);

  return result_10145818;

}
function pow_10145291(a_10145293, b_10145294) {
  var result_10145295 = null;

    L1: do {
      var k_10145313 = 0;
      var colontmp__12196943 = 0;
      colontmp__12196943 = (a_10145293 != null ? (a_10145293.length-1) : -1);
      var res_12196944 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196944 <= colontmp__12196943)) break L3;
            k_10145313 = res_12196944;
            if (result_10145295 != null) { result_10145295.push([]); } else { result_10145295 = [[]]; };
            L4: do {
              var q_10145365 = 0;
              var colontmp__12196937 = 0;
              colontmp__12196937 = (a_10145293[0] != null ? (a_10145293[0].length-1) : -1);
              var res_12196938 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196938 <= colontmp__12196937)) break L6;
                    q_10145365 = res_12196938;
                    if (result_10145295[k_10145313] != null) { result_10145295[k_10145313].push(Math.pow(a_10145293[k_10145313][q_10145365], b_10145294)); } else { result_10145295[k_10145313] = [Math.pow(a_10145293[k_10145313][q_10145365], b_10145294)]; };
                    res_12196938 += 1;
                  }
              } while(false);
            } while(false);
            res_12196944 += 1;
          }
      } while(false);
    } while(false);

  return result_10145295;

}
function HEX2EHEX5E_10145422(a_10145424, b_10145425) {
  var result_10145426 = null;

    result_10145426 = nimCopy(null, pow_10145291(a_10145424, b_10145425), NTI9861067);

  return result_10145426;

}
function wise_variance_10155234(a_10155236, axis_10155237) {
  var result_10155238 = null;

  BeforeRet: do {
    result_10155238 = nimCopy(null, HEX2EHEX5E_10005318(HEX2D_9880275(mean_10145814(HEX2EHEX5E_10145422(a_10155236, 2.0000000000000000e+000), axis_10155237), mean_10145814(a_10155236, axis_10155237)), 2.0000000000000000e+000), NTI9861064);
    break BeforeRet;
  } while (false);

  return result_10155238;

}
function wise_standard_deviation_10165235(a_10165237, axis_10165238) {
  var result_10165239 = null;

  BeforeRet: do {
    result_10165239 = nimCopy(null, HEX2EHEX5E_10005318(wise_variance_10155234(a_10165237, axis_10165238), 5.0000000000000000e-001), NTI9861064);
    break BeforeRet;
  } while (false);

  return result_10165239;

}
function addition_9870254(a_9870256, b_9870257) {
  var result_9870258 = null;

    L1: do {
      var k_9870276 = 0;
      var colontmp__12196950 = 0;
      colontmp__12196950 = (a_9870256 != null ? (a_9870256.length-1) : -1);
      var res_12196951 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196951 <= colontmp__12196950)) break L3;
            k_9870276 = res_12196951;
            if (result_9870258 != null) { result_9870258.push((a_9870256[k_9870276] + b_9870257)); } else { result_9870258 = [(a_9870256[k_9870276] + b_9870257)]; };
            res_12196951 += 1;
          }
      } while(false);
    } while(false);

  return result_9870258;

}
function subtract_9880239(a_9880241, b_9880242) {
  var result_9880243 = null;

    result_9880243 = nimCopy(null, addition_9870254(a_9880241, -(b_9880242)), NTI9861064);

  return result_9880243;

}
function HEX2D_9880293(a_9880295, b_9880296) {
  var result_9880297 = null;

    result_9880297 = nimCopy(null, subtract_9880239(a_9880295, b_9880296), NTI9861064);

  return result_9880297;

}
function ravel_10330414(a_10330416) {
  var result_10330417 = null;

    L1: do {
      var r_10330426 = 0;
      var colontmp__12196964 = 0;
      colontmp__12196964 = (rows_10075814(a_10330416) - 1);
      var res_12196965 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196965 <= colontmp__12196964)) break L3;
            r_10330426 = res_12196965;
            L4: do {
              var c_10330435 = 0;
              var colontmp__12196958 = 0;
              colontmp__12196958 = (cols_10075836(a_10330416) - 1);
              var res_12196959 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196959 <= colontmp__12196958)) break L6;
                    c_10330435 = res_12196959;
                    if (result_10330417 != null) { result_10330417.push(a_10330416[r_10330426][c_10330435]); } else { result_10330417 = [a_10330416[r_10330426][c_10330435]]; };
                    res_12196959 += 1;
                  }
              } while(false);
            } while(false);
            res_12196965 += 1;
          }
      } while(false);
    } while(false);

  return result_10330417;

}
function mean_10015614(a_10015616, axis_10015617) {
  var result_10015618 = [0.0];

    L1: do {
      var k_10025218 = 0;
      var colontmp__12196971 = 0;
      colontmp__12196971 = (a_10015616 != null ? (a_10015616.length-1) : -1);
      var res_12196972 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196972 <= colontmp__12196971)) break L3;
            k_10025218 = res_12196972;
            HEX2BHEX3D_1000001(result_10015618, 0, a_10015616[k_10025218]);
            res_12196972 += 1;
          }
      } while(false);
    } while(false);
    result_10015618[0] = (result_10015618[0] / to_float_26459((a_10015616 != null ? a_10015616.length : 0)));

  return result_10015618[0];

}
function loglikelihood_11535167(d_11535169, y_11535170) {
  var result_11535171 = [0.0];

    L1: do {
      var yi_11535178 = 0.0;
      var i_12196978 = 0;
      var l_12196979 = (y_11535170 != null ? y_11535170.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_12196978 < l_12196979)) break L3;
            yi_11535178 = y_11535170[i_12196978];
            HEX2BHEX3D_1000001(result_11535171, 0, (((-5.0000000000000000e-001 * Math.log(6.2831853071795862e+000)) - Math.log(d_11535169.std)) - (Math.pow((yi_11535178 - d_11535169.mean), 2.0000000000000000e+000) / ((2.0000000000000000e+000 * d_11535169.std) * d_11535169.std))));
            i_12196978 += 1;
          }
      } while(false);
    } while(false);

  return result_11535171[0];

}
function normal_11530065(mean_11530067, std_11530068) {
  var result_11530069 = null;

    result_11530069 = ({mean: 0.0, std: 0.0});
    result_11530069.mean = mean_11530067;
    result_11530069.std = std_11530068;

  return result_11530069;

}
function scaled_shifted_11640026(distribution_11640029, location_11640030, scale_11640031) {
  var result_11640033 = null;

    result_11640033 = ({distribution: null, location: 0.0, scale: 0.0});
    result_11640033.distribution = distribution_11640029;
    result_11640033.location = location_11640030;
    result_11640033.scale = scale_11640031;

  return result_11640033;

}
function htest_score_11640084(distribution_11640087, score_11640088, test_type_11640089) {
  var result_11640091 = null;

    result_11640091 = ({distribution: null, test_score: 0.0, test_type: 0});
    result_11640091.distribution = distribution_11640087;
    result_11640091.test_score = score_11640088;
    result_11640091.test_type = test_type_11640089;

  return result_11640091;

}
function shifted_estimator_11640018(distribution_11640021, location_11640022, scale_11640023) {
  var result_11640025 = null;

    var est_distribution_11640068 = scaled_shifted_11640026(distribution_11640021, location_11640022, scale_11640023);
    var est_null_distribution_11640076 = scaled_shifted_11640026(distribution_11640021, 0.0, scale_11640023);
    result_11640025 = ({distribution: null, hypothesis_test: null});
    result_11640025.distribution = est_distribution_11640068;
    result_11640025.hypothesis_test = htest_score_11640084(est_null_distribution_11640076, location_11640022, 0);

  return result_11640025;

}
function invchisquare_11560124(dof_11560126, scale_11560127) {
    var Tmp1;

  var result_11560128 = null;

    result_11560128 = ({dof: 0.0, scale: 0.0});
    result_11560128.dof = dof_11560126;
    if ((classify_880431(scale_11560127) == 4)) {
    Tmp1 = (1.0000000000000000e+000 / dof_11560126);
    }
    else {
    Tmp1 = scale_11560127;
    }
    
    result_11560128.scale = Tmp1;

  return result_11560128;

}
function new_seq_11655024(len_11655027) {
  var result_11655029 = null;

    result_11655029 = new Array(len_11655027); for (var i=0;i<len_11655027;++i) {result_11655029[i]=null;}
  return result_11655029;

}
function len_11400018(x_11400023) {
  var result_11400024 = 0;

    result_11400024 = nimMax(0, ((x_11400023.b - x_11400023.a) + 1));

  return result_11400024;

}
function scaled_shifted_11645217(distribution_11645220, location_11645221, scale_11645222) {
  var result_11645224 = null;

    result_11645224 = ({distribution: null, location: 0.0, scale: 0.0});
    result_11645224.distribution = distribution_11645220;
    result_11645224.location = location_11645221;
    result_11645224.scale = scale_11645222;

  return result_11645224;

}
function htest_score_11645275(distribution_11645278, score_11645279, test_type_11645280) {
  var result_11645282 = null;

    result_11645282 = ({distribution: null, test_score: 0.0, test_type: 0});
    result_11645282.distribution = distribution_11645278;
    result_11645282.test_score = score_11645279;
    result_11645282.test_type = test_type_11645280;

  return result_11645282;

}
function shifted_estimator_11645209(distribution_11645212, location_11645213, scale_11645214) {
  var result_11645216 = null;

    var est_distribution_11645259 = scaled_shifted_11645217(distribution_11645212, location_11645213, scale_11645214);
    var est_null_distribution_11645267 = scaled_shifted_11645217(distribution_11645212, 0.0, scale_11645214);
    result_11645216 = ({distribution: null, hypothesis_test: null});
    result_11645216.distribution = est_distribution_11645259;
    result_11645216.hypothesis_test = htest_score_11645275(est_null_distribution_11645267, location_11645213, 0);

  return result_11645216;

}
function studentt_11500381(dof_11500383) {
  var result_11500384 = null;

    result_11500384 = ({dof: 0});
    result_11500384.dof = to_int_26493(dof_11500383);

  return result_11500384;

}
function htest_score_11660024(distribution_11660027, score_11660028, test_type_11660029) {
  var result_11660031 = null;

    result_11660031 = ({distribution: null, test_score: 0.0, test_type: 0});
    result_11660031.distribution = distribution_11660027;
    result_11660031.test_score = score_11660028;
    result_11660031.test_type = test_type_11660029;

  return result_11660031;

}
function central_f_11565236(df1_11565238, df2_11565239) {
  var result_11565240 = null;

    result_11565240 = ({df1: 0.0, df2: 0.0});
    result_11565240.df1 = df1_11565238;
    result_11565240.df2 = df2_11565239;

  return result_11565240;

}
function new_seq_610232(len_610235) {
  var result_610237 = null;

    result_610237 = new Array(len_610235); for (var i=0;i<len_610235;++i) {result_610237[i]=null;}
  return result_610237;

}
function ols_model_11627832(x_11627834, y_11627835, names_11627852) {
      var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
    var Tmp5;
    var Tmp11;

  var result_11627853 = null;

    result_11627853 = ({residuals: null, sum_squared_errors: 0.0, degrees_of_freedom: 0.0, variance_matrix_coefficients: null, include_intercept: false, loglikelihood: 0.0, R2: 0.0, adjustedR2: 0.0, beta_hat: null, coefficients: null, noise_variance: null, model_significance: null, feature_names: null});
      if (!(0 < (names_11627852 != null ? names_11627852.length : 0))) Tmp1 = false; else {        Tmp1 = !(((names_11627852 != null ? names_11627852.length : 0) == cols_10075836(x_11627834)));      }    if (Tmp1) {
    raiseException({message: makeNimstrLit("incorrect number of feature names"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    
    var y_11640002 = as_column_vector_10015414(y_11627835);
    var xp_x_11640003 = inverse_10355071(HEX2A_10125340(t_10301308(x_11627834), x_11627834));
    var beta_hat_11640004 = HEX2A_10125340(HEX2A_10125340(xp_x_11640003, t_10301308(x_11627834)), y_11640002);
    var ypred_11640005 = HEX2A_10125340(x_11627834, beta_hat_11640004);
    var residuals_11640006 = nimCopy(null, (Tmp2 = t_10301308(HEX2D_10095327(y_11640002, ypred_11640005)), Tmp2)[0], NTI9861068);
    var sse_11640007 = HEX5E_9861027(norm_9995414(residuals_11640006, 2.0000000000000000e+000), 2.0000000000000000e+000);
    var variance_normalization_factor_11640008 = (to_float_26459(((rows_10075814(x_11627834) - cols_10075836(x_11627834)) - 1)) / to_float_26459((rows_10075814(x_11627834) - cols_10075836(x_11627834))));
    var s2_11640009 = ((sse_11640007 / to_float_26459(((rows_10075814(x_11627834) - cols_10075836(x_11627834)) - 1))) * variance_normalization_factor_11640008);
    var var_beta_hat_11640010 = HEX2A_10115512(s2_11640009, xp_x_11640003);
    var estimate_std_11640011 = HEX2EHEX5E_10005318(diag_10076014(var_beta_hat_11640010), 5.0000000000000000e-001);
    var coefficients_11640012 = nimCopy(null, (Tmp3 = t_10301308(beta_hat_11640004), Tmp3)[0], NTI9861068);
    var include_intercept_11640013 = any_val_9910614(wise_standard_deviation_10165235(x_11627834, 0), 0.0);
    var total_model_variation_11640015 = HEX5E_9861027(norm_9995414(HEX2D_9880293(ravel_10330414(ypred_11640005), mean_10015614(ravel_10330414(ypred_11640005), 0)), 2.0000000000000000e+000), 2.0000000000000000e+000);
    if (include_intercept_11640013) {
    total_model_variation_11640015 = HEX5E_9861027(norm_9995414(HEX2D_9880293(ravel_10330414(ypred_11640005), mean_10015614(y_11627835, 0)), 2.0000000000000000e+000), 2.0000000000000000e+000);
    }
    else {
      total_model_variation_11640015 = HEX5E_9861027(norm_9995414(HEX2D_9880275(y_11627835, residuals_11640006), 2.0000000000000000e+000), 2.0000000000000000e+000);
    }
    
    if (include_intercept_11640013) {
    Tmp4 = -1;
    }
    else {
    Tmp4 = 0;
    }
    
    var f_score_11640017 = ((total_model_variation_11640015 / to_float_26459((cols_10075836(x_11627834) + Tmp4))) / (sse_11640007 / to_float_26459((rows_10075814(x_11627834) - cols_10075836(x_11627834)))));
    result_11627853.include_intercept = include_intercept_11640013;
    result_11627853.residuals = nimCopy(null, residuals_11640006, NTI9861068);
    result_11627853.sum_squared_errors = sse_11640007;
    result_11627853.variance_matrix_coefficients = nimCopy(null, var_beta_hat_11640010, NTI9861067);
    result_11627853.R2 = (total_model_variation_11640015 / (total_model_variation_11640015 + sse_11640007));
    if (include_intercept_11640013) {
    Tmp5 = -1;
    }
    else {
    Tmp5 = 0;
    }
    
    result_11627853.adjustedR2 = (1.0000000000000000e+000 - ((to_float_26459((rows_10075814(x_11627834) + Tmp5)) / to_float_26459((rows_10075814(x_11627834) - cols_10075836(x_11627834)))) * (1.0000000000000000e+000 - result_11627853.R2)));
    result_11627853.beta_hat = nimCopy(null, ravel_10330414(beta_hat_11640004), NTI9861064);
    result_11627853.loglikelihood = loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(abs_75247(((sse_11640007 * ((result_11627853.degrees_of_freedom + 1.0000000000000000e-010) - 2.0000000000000000e+000)) / to_float_26459((rows_10075814(x_11627834) - cols_10075836(x_11627834))))))), residuals_11640006);
    result_11627853.degrees_of_freedom = to_float_26459((rows_10075814(x_11627834) - cols_10075836(x_11627834)));
    result_11627853.noise_variance = shifted_estimator_11640018(invchisquare_11560124((result_11627853.degrees_of_freedom + 1.0000000000000000e-010), NaN), 0.0, ((sse_11640007 * ((result_11627853.degrees_of_freedom + 1.0000000000000000e-010) - 2.0000000000000000e+000)) / to_float_26459((rows_10075814(x_11627834) - cols_10075836(x_11627834)))));
    L6: do {
      var HEX3Atmp_11645417 = HEX2EHEX2E_2080220(0, (estimate_std_11640011 != null ? (estimate_std_11640011.length-1) : -1));
      var iHEX60gensym11640173_11650003 = 0;
      var resultHEX60gensym11640174_11655065 = new_seq_11655024(len_11400018(HEX3Atmp_11645417));
      L7: do {
        var it_11660006 = 0;
        L8: do {
          var x_12196675 = 0;
          var res_12196676 = HEX3Atmp_11645417.a;
          L9: do {
              L10: while (true) {
              if (!(res_12196676 <= HEX3Atmp_11645417.b)) break L10;
                x_12196675 = res_12196676;
                it_11660006 = x_12196675;
                resultHEX60gensym11640174_11655065[iHEX60gensym11640173_11650003] = shifted_estimator_11645209(studentt_11500381(result_11627853.degrees_of_freedom), coefficients_11640012[it_11660006], estimate_std_11640011[it_11660006]);
                iHEX60gensym11640173_11650003 += 1;
                res_12196676 += 1;
              }
          } while(false);
        } while(false);
      } while(false);
    } while(false);
    result_11627853.coefficients = nimCopy(null, resultHEX60gensym11640174_11655065, NTI11655028);
    if (include_intercept_11640013) {
    Tmp11 = -1;
    }
    else {
    Tmp11 = 0;
    }
    
    var ms_model_dof_11660022 = to_float_26459((cols_10075836(x_11627834) + Tmp11));
    var ms_residual_dof_11660023 = to_float_26459((rows_10075814(x_11627834) - cols_10075836(x_11627834)));
    result_11627853.model_significance = htest_score_11660024(central_f_11565236(ms_model_dof_11660022, ms_residual_dof_11660023), ((total_model_variation_11640015 / ms_model_dof_11660022) / (sse_11640007 / ms_residual_dof_11660023)), 1);
    if ((0 < (names_11627852 != null ? names_11627852.length : 0))) {
    result_11627853.feature_names = nimCopy(null, names_11627852, NTI11627836);
    }
    else {
      L12: do {
        var HEX3Atmp_11675217 = HEX2EHEX2E_2080220(1, cols_10075836(x_11627834));
        var iHEX60gensym11665014_11680003 = 0;
        var resultHEX60gensym11665015_11685029 = new_seq_610232(len_11400018(HEX3Atmp_11675217));
        L13: do {
          var it_11690006 = 0;
          L14: do {
            var x_12196684 = 0;
            var res_12196685 = HEX3Atmp_11675217.a;
            L15: do {
                L16: while (true) {
                if (!(res_12196685 <= HEX3Atmp_11675217.b)) break L16;
                  x_12196684 = res_12196685;
                  it_11690006 = x_12196684;
                  var fmt_res_11690009 = [mnewString(0)];
                  if (fmt_res_11690009[0] != null) { fmt_res_11690009[0] = (fmt_res_11690009[0]).concat(makeNimstrLit("x")); } else { fmt_res_11690009[0] = makeNimstrLit("x"); };
                  format_value_11485001(fmt_res_11690009, 0, it_11690006, []);
                  resultHEX60gensym11665015_11685029[iHEX60gensym11665014_11680003] = nimCopy(null, fmt_res_11690009[0], NTI112);
                  iHEX60gensym11665014_11680003 += 1;
                  res_12196685 += 1;
                }
            } while(false);
          } while(false);
        } while(false);
      } while(false);
      result_11627853.feature_names = nimCopy(null, resultHEX60gensym11665015_11685029, NTI610236);
    }
    

  return result_11627853;

}
function wise_multiply_10095414(a_10095416, b_10095417) {
  var result_10095418 = null;

    L1: do {
      var k_10115218 = 0;
      var colontmp__12196998 = 0;
      colontmp__12196998 = (a_10095416 != null ? (a_10095416.length-1) : -1);
      var res_12196999 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12196999 <= colontmp__12196998)) break L3;
            k_10115218 = res_12196999;
            if (result_10095418 != null) { result_10095418.push([]); } else { result_10095418 = [[]]; };
            L4: do {
              var q_10115270 = 0;
              var colontmp__12196992 = 0;
              colontmp__12196992 = (a_10095416[0] != null ? (a_10095416[0].length-1) : -1);
              var res_12196993 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12196993 <= colontmp__12196992)) break L6;
                    q_10115270 = res_12196993;
                    if (result_10095418[k_10115218] != null) { result_10095418[k_10115218].push((a_10095416[k_10115218][q_10115270] * b_10095417[k_10115218][q_10115270])); } else { result_10095418[k_10115218] = [(a_10095416[k_10115218][q_10115270] * b_10095417[k_10115218][q_10115270])]; };
                    res_12196993 += 1;
                  }
              } while(false);
            } while(false);
            res_12196999 += 1;
          }
      } while(false);
    } while(false);

  return result_10095418;

}
function HEX2EHEX2A_10115404(a_10115406, b_10115407) {
  var result_10115408 = null;

    result_10115408 = nimCopy(null, wise_multiply_10095414(a_10115406, b_10115407), NTI9861067);

  return result_10115408;

}
function predict_11800226(model_11800228, x_11800229) {
  var result_11800230 = null;

    result_11800230 = ({predictions: null, degrees_of_freedom: 0.0, prediction_means: null});
    var yhat_11800237 = ravel_10330414(HEX2A_10125340(x_11800229, as_column_vector_10015414(model_11800228.beta_hat)));
    var yvar_11800239 = sum_10125614(HEX2EHEX2A_10115404(HEX2A_10125340(x_11800229, model_11800228.variance_matrix_coefficients), x_11800229), 1);
    var estimate_std_11800240 = HEX2EHEX5E_10005318(yvar_11800239, 5.0000000000000000e-001);
    result_11800230.prediction_means = nimCopy(null, yhat_11800237, NTI9861064);
    result_11800230.degrees_of_freedom = to_float_26459(((estimate_std_11800240 != null ? estimate_std_11800240.length : 0) - 1));
    L1: do {
      var HEX3Atmp_11805417 = HEX2EHEX2E_2080220(0, (estimate_std_11800240 != null ? (estimate_std_11800240.length-1) : -1));
      var iHEX60gensym11800265_11810003 = 0;
      var resultHEX60gensym11800266_11815029 = new_seq_11655024(len_11400018(HEX3Atmp_11805417));
      L2: do {
        var it_11820006 = 0;
        L3: do {
          var x_12196984 = 0;
          var res_12196985 = HEX3Atmp_11805417.a;
          L4: do {
              L5: while (true) {
              if (!(res_12196985 <= HEX3Atmp_11805417.b)) break L5;
                x_12196984 = res_12196985;
                it_11820006 = x_12196984;
                resultHEX60gensym11800266_11815029[iHEX60gensym11800265_11810003] = shifted_estimator_11645209(studentt_11500381(result_11800230.degrees_of_freedom), yhat_11800237[it_11820006], estimate_std_11800240[it_11820006]);
                iHEX60gensym11800265_11810003 += 1;
                res_12196985 += 1;
              }
          } while(false);
        } while(false);
      } while(false);
    } while(false);
    result_11800230.predictions = nimCopy(null, resultHEX60gensym11800266_11815029, NTI11655028);

  return result_11800230;

}
function data_transform_11626230(x_11626232, dt_11626233) {
  var result_11626234 = null;

    L1: do {
      var r_11626243 = 0;
      var colontmp__12197005 = 0;
      colontmp__12197005 = rows_10075814(x_11626232);
      var res_12197006 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12197006 <= colontmp__12197005)) break L3;
            r_11626243 = res_12197006;
            if (result_11626234 != null) { result_11626234.push(dt_11626233(x_11626232[(r_11626243 - 1)])); } else { result_11626234 = [dt_11626233(x_11626232[(r_11626243 - 1)])]; };
            res_12197006 += 1;
          }
      } while(false);
    } while(false);

  return result_11626234;

}
function add_10005849(x_10005854, x_10005854_Idx, y_10005856) {
    var Tmp1;

    var xl_10005862 = (x_10005854[x_10005854_Idx] != null ? x_10005854[x_10005854_Idx].length : 0);
    if (x_10005854[x_10005854_Idx] === null) x_10005854[x_10005854_Idx] = [];
               if (x_10005854[x_10005854_Idx].length < (Tmp1 = (xl_10005862 + (y_10005856 != null ? y_10005856.length : 0)), Tmp1)) { for (var i=x_10005854[x_10005854_Idx].length;i<Tmp1;++i) x_10005854[x_10005854_Idx].push(0.0); }
               else { x_10005854[x_10005854_Idx].length = Tmp1; };
    L2: do {
      var i_10005887 = 0;
      var colontmp__12197020 = 0;
      colontmp__12197020 = (y_10005856 != null ? (y_10005856.length-1) : -1);
      var res_12197021 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_12197021 <= colontmp__12197020)) break L4;
            i_10005887 = res_12197021;
            x_10005854[x_10005854_Idx][(xl_10005862 + i_10005887)] = y_10005856[i_10005887];
            res_12197021 += 1;
          }
      } while(false);
    } while(false);

  
}
function hstack_10005967(a_10005969, b_10005970) {
  var result_10005971 = [null];

    result_10005971[0] = nimCopy(null, [], NTI10005986);
    add_10005849(result_10005971, 0, []);
    L1: do {
      var c_10006024 = 0;
      var colontmp__12197013 = 0;
      colontmp__12197013 = ((a_10005969 != null ? a_10005969.length : 0) - 1);
      var res_12197014 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197014 <= colontmp__12197013)) break L3;
            c_10006024 = res_12197014;
            if (result_10005971[0] != null) { result_10005971[0].push(a_10005969[c_10006024]); } else { result_10005971[0] = [a_10005969[c_10006024]]; };
            res_12197014 += 1;
          }
      } while(false);
    } while(false);
    if (result_10005971[0] != null) { result_10005971[0].push(b_10005970); } else { result_10005971[0] = [b_10005970]; };

  return result_10005971[0];

}
function ar1_11821214(y_11821216, include_mean_11821217, feature_name_11821218) {
    function HEX3Aanonymous_11825001(x_11825008) {
      var result_11825012 = null;

        result_11825012 = nimCopy(null, hstack_10005967(x_11825008, 1.0000000000000000e+000), NTI9861064);

      return result_11825012;

    }

  var result_11821219 = null;

    var y_0_to_t_1_11821258 = HEX5BHEX5D_11627070(y_11821216, HEX2EHEX2E_2080220(0, ((y_11821216 != null ? (y_11821216.length-1) : -1) - 1)));
    var y_1_to_t_11821297 = HEX5BHEX5D_11627070(y_11821216, HEX2EHEX2E_2080220(1, (y_11821216 != null ? (y_11821216.length-1) : -1)));
    if (include_mean_11821217) {
    result_11821219 = ols_model_11627832(data_transform_11626230(as_column_vector_10015414(y_0_to_t_1_11821258), HEX3Aanonymous_11825001), y_1_to_t_11821297, [nimCopy(null, feature_name_11821218, NTI112)]);
    }
    else {
      result_11821219 = ols_model_11627832(as_column_vector_10015414(y_0_to_t_1_11821258), y_1_to_t_11821297, [nimCopy(null, feature_name_11821218, NTI112)]);
    }
    

  return result_11821219;

}
function mean_11550083(d_11550085) {
    var Tmp1;

  var result_11550086 = 0.0;

  BeforeRet: do {
    if ((1.0000000000000000e+000 < d_11550085.shape)) {
    Tmp1 = (d_11550085.scale / (d_11550085.shape - 1.0000000000000000e+000));
    }
    else {
    Tmp1 = NaN;
    }
    
    result_11550086 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_11550086;

}
function as_inv_gamma_11565029(d_11565031) {
  var result_11565032 = null;

    result_11565032 = {shape: (d_11565031.dof / 2.0000000000000000e+000), scale: ((d_11565031.dof * d_11565031.scale) / 2.0000000000000000e+000)};

  return result_11565032;

}
function mean_11565100(d_11565102) {
  var result_11565103 = 0.0;

    result_11565103 = mean_11550083(as_inv_gamma_11565029(d_11565102));

  return result_11565103;

}
function mean_11765050(d_11765054) {
  var result_11765055 = 0.0;

    result_11765055 = ((mean_11565100(d_11765054.distribution) * d_11765054.scale) + d_11765054.location);

  return result_11765055;

}
function estimate_11765036(d_11765040) {
  var result_11765041 = 0.0;

    result_11765041 = mean_11765050(d_11765040.distribution);

  return result_11765041;

}
function constant_matrix_10300814(rows_10300816, cols_10300817, constant_10300818) {
                    var Tmp7;

  var result_10300819 = null;

    L1: do {
      var i_10300828 = 0;
      var res_12197053 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12197053 <= rows_10300816)) break L3;
            i_10300828 = res_12197053;
            if (result_10300819 != null) { result_10300819.push([]); } else { result_10300819 = [[]]; };
            L4: do {
              var j_10300859 = 0;
              var res_12197048 = 1;
              L5: do {
                  L6: while (true) {
                  if (!(res_12197048 <= cols_10300817)) break L6;
                    j_10300859 = res_12197048;
                    if ((Tmp7 = result_10300819[(i_10300828 - 1)], Tmp7) != null) { Tmp7.push(constant_10300818); } else { Tmp7 = [constant_10300818]; };
                    res_12197048 += 1;
                  }
              } while(false);
            } while(false);
            res_12197053 += 1;
          }
      } while(false);
    } while(false);

  return result_10300819;

}
function simple_ls_model_cov_independient_11827307(y_11827309, names_11827326) {
      var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
    var Tmp5;
    var Tmp11;

  var result_11827327 = null;

    result_11827327 = ({residuals: null, sum_squared_errors: 0.0, degrees_of_freedom: 0.0, variance_matrix_coefficients: null, include_intercept: false, loglikelihood: 0.0, R2: 0.0, adjustedR2: 0.0, beta_hat: null, coefficients: null, noise_variance: null, model_significance: null, feature_names: null});
    var x_11827339 = constant_matrix_10300814((y_11827309 != null ? y_11827309.length : 0), 1, 1.0000000000000000e+000);
      if (!(0 < (names_11827326 != null ? names_11827326.length : 0))) Tmp1 = false; else {        Tmp1 = !(((names_11827326 != null ? names_11827326.length : 0) == cols_10075836(x_11827339)));      }    if (Tmp1) {
    raiseException({message: makeNimstrLit("incorrect number of feature names"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    
    var y_11840002 = as_column_vector_10015414(y_11827309);
    var xp_x_11840003 = inverse_10355071(HEX2A_10125340(t_10301308(x_11827339), x_11827339));
    var beta_hat_11840004 = HEX2A_10125340(HEX2A_10125340(xp_x_11840003, t_10301308(x_11827339)), y_11840002);
    var ypred_11840005 = HEX2A_10125340(x_11827339, beta_hat_11840004);
    var residuals_11840006 = nimCopy(null, (Tmp2 = t_10301308(HEX2D_10095327(y_11840002, ypred_11840005)), Tmp2)[0], NTI9861068);
    var sse_11840007 = HEX5E_9861027(norm_9995414(residuals_11840006, 2.0000000000000000e+000), 2.0000000000000000e+000);
    var variance_normalization_factor_11840008 = (to_float_26459(((rows_10075814(x_11827339) - cols_10075836(x_11827339)) - 1)) / to_float_26459((rows_10075814(x_11827339) - cols_10075836(x_11827339))));
    var s2_11840009 = ((sse_11840007 / to_float_26459(((rows_10075814(x_11827339) - cols_10075836(x_11827339)) - 1))) * variance_normalization_factor_11840008);
    var var_beta_hat_11840010 = HEX2A_10115512(s2_11840009, xp_x_11840003);
    var estimate_std_11840011 = HEX2EHEX5E_10005318(diag_10076014(var_beta_hat_11840010), 5.0000000000000000e-001);
    var coefficients_11840012 = nimCopy(null, (Tmp3 = t_10301308(beta_hat_11840004), Tmp3)[0], NTI9861068);
    var include_intercept_11840013 = any_val_9910614(wise_standard_deviation_10165235(x_11827339, 0), 0.0);
    var total_model_variation_11840015 = HEX5E_9861027(norm_9995414(HEX2D_9880293(ravel_10330414(ypred_11840005), mean_10015614(ravel_10330414(ypred_11840005), 0)), 2.0000000000000000e+000), 2.0000000000000000e+000);
    total_model_variation_11840015 = HEX5E_9861027(norm_9995414(HEX2D_9880275(y_11827309, residuals_11840006), 2.0000000000000000e+000), 2.0000000000000000e+000);
    if (include_intercept_11840013) {
    Tmp4 = -1;
    }
    else {
    Tmp4 = 0;
    }
    
    var f_score_11840016 = ((total_model_variation_11840015 / to_float_26459((cols_10075836(x_11827339) + Tmp4))) / (sse_11840007 / to_float_26459((rows_10075814(x_11827339) - cols_10075836(x_11827339)))));
    result_11827327.include_intercept = include_intercept_11840013;
    result_11827327.residuals = nimCopy(null, residuals_11840006, NTI9861068);
    result_11827327.sum_squared_errors = sse_11840007;
    result_11827327.variance_matrix_coefficients = nimCopy(null, var_beta_hat_11840010, NTI9861067);
    result_11827327.R2 = (total_model_variation_11840015 / (total_model_variation_11840015 + sse_11840007));
    if (include_intercept_11840013) {
    Tmp5 = -1;
    }
    else {
    Tmp5 = 0;
    }
    
    result_11827327.adjustedR2 = (1.0000000000000000e+000 - ((to_float_26459((rows_10075814(x_11827339) + Tmp5)) / to_float_26459((rows_10075814(x_11827339) - cols_10075836(x_11827339)))) * (1.0000000000000000e+000 - result_11827327.R2)));
    result_11827327.beta_hat = nimCopy(null, ravel_10330414(beta_hat_11840004), NTI9861064);
    result_11827327.loglikelihood = loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(abs_75247(((sse_11840007 * ((result_11827327.degrees_of_freedom + 1.0000000000000000e-010) - 2.0000000000000000e+000)) / to_float_26459((rows_10075814(x_11827339) - cols_10075836(x_11827339))))))), residuals_11840006);
    result_11827327.degrees_of_freedom = to_float_26459((rows_10075814(x_11827339) - cols_10075836(x_11827339)));
    result_11827327.noise_variance = shifted_estimator_11640018(invchisquare_11560124((result_11827327.degrees_of_freedom + 1.0000000000000000e-010), NaN), 0.0, ((sse_11840007 * ((result_11827327.degrees_of_freedom + 1.0000000000000000e-010) - 2.0000000000000000e+000)) / to_float_26459((rows_10075814(x_11827339) - cols_10075836(x_11827339)))));
    L6: do {
      var HEX3Atmp_11845417 = HEX2EHEX2E_2080220(0, (estimate_std_11840011 != null ? (estimate_std_11840011.length-1) : -1));
      var iHEX60gensym11840043_11850003 = 0;
      var resultHEX60gensym11840044_11855029 = new_seq_11655024(len_11400018(HEX3Atmp_11845417));
      L7: do {
        var it_11860006 = 0;
        L8: do {
          var x_12197031 = 0;
          var res_12197032 = HEX3Atmp_11845417.a;
          L9: do {
              L10: while (true) {
              if (!(res_12197032 <= HEX3Atmp_11845417.b)) break L10;
                x_12197031 = res_12197032;
                it_11860006 = x_12197031;
                resultHEX60gensym11840044_11855029[iHEX60gensym11840043_11850003] = shifted_estimator_11645209(studentt_11500381(result_11827327.degrees_of_freedom), coefficients_11840012[it_11860006], estimate_std_11840011[it_11860006]);
                iHEX60gensym11840043_11850003 += 1;
                res_12197032 += 1;
              }
          } while(false);
        } while(false);
      } while(false);
    } while(false);
    result_11827327.coefficients = nimCopy(null, resultHEX60gensym11840044_11855029, NTI11655028);
    if (include_intercept_11840013) {
    Tmp11 = -1;
    }
    else {
    Tmp11 = 0;
    }
    
    var ms_model_dof_11860022 = to_float_26459((cols_10075836(x_11827339) + Tmp11));
    var ms_residual_dof_11860023 = to_float_26459((rows_10075814(x_11827339) - cols_10075836(x_11827339)));
    result_11827327.model_significance = htest_score_11660024(central_f_11565236(ms_model_dof_11860022, ms_residual_dof_11860023), ((total_model_variation_11840015 / ms_model_dof_11860022) / (sse_11840007 / ms_residual_dof_11860023)), 1);
    if ((0 < (names_11827326 != null ? names_11827326.length : 0))) {
    result_11827327.feature_names = nimCopy(null, names_11827326, NTI11827310);
    }
    else {
      L12: do {
        var HEX3Atmp_11875217 = HEX2EHEX2E_2080220(1, cols_10075836(x_11827339));
        var iHEX60gensym11865014_11880003 = 0;
        var resultHEX60gensym11865015_11885029 = new_seq_610232(len_11400018(HEX3Atmp_11875217));
        L13: do {
          var it_11890006 = 0;
          L14: do {
            var x_12197040 = 0;
            var res_12197041 = HEX3Atmp_11875217.a;
            L15: do {
                L16: while (true) {
                if (!(res_12197041 <= HEX3Atmp_11875217.b)) break L16;
                  x_12197040 = res_12197041;
                  it_11890006 = x_12197040;
                  var fmt_res_11890009 = [mnewString(0)];
                  if (fmt_res_11890009[0] != null) { fmt_res_11890009[0] = (fmt_res_11890009[0]).concat(makeNimstrLit("x")); } else { fmt_res_11890009[0] = makeNimstrLit("x"); };
                  format_value_11485001(fmt_res_11890009, 0, it_11890006, []);
                  resultHEX60gensym11865015_11885029[iHEX60gensym11865014_11880003] = nimCopy(null, fmt_res_11890009[0], NTI112);
                  iHEX60gensym11865014_11880003 += 1;
                  res_12197041 += 1;
                }
            } while(false);
          } while(false);
        } while(false);
      } while(false);
      result_11827327.feature_names = nimCopy(null, resultHEX60gensym11865015_11885029, NTI610236);
    }
    

  return result_11827327;

}
function simple_ls_model_cov_exchangeable_11895027(y_11895029, names_11895046) {
      var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
    var Tmp5;
    var Tmp11;

  var result_11895047 = null;

    result_11895047 = ({residuals: null, sum_squared_errors: 0.0, degrees_of_freedom: 0.0, variance_matrix_coefficients: null, include_intercept: false, loglikelihood: 0.0, R2: 0.0, adjustedR2: 0.0, beta_hat: null, coefficients: null, noise_variance: null, model_significance: null, feature_names: null});
    var x_11895059 = constant_matrix_10300814((y_11895029 != null ? y_11895029.length : 0), 1, 1.0000000000000000e+000);
      if (!(0 < (names_11895046 != null ? names_11895046.length : 0))) Tmp1 = false; else {        Tmp1 = !(((names_11895046 != null ? names_11895046.length : 0) == cols_10075836(x_11895059)));      }    if (Tmp1) {
    raiseException({message: makeNimstrLit("incorrect number of feature names"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    
    var y_11910002 = as_column_vector_10015414(y_11895029);
    var xp_x_11910003 = inverse_10355071(HEX2A_10125340(t_10301308(x_11895059), x_11895059));
    var beta_hat_11910004 = HEX2A_10125340(HEX2A_10125340(xp_x_11910003, t_10301308(x_11895059)), y_11910002);
    var ypred_11910005 = HEX2A_10125340(x_11895059, beta_hat_11910004);
    var residuals_11910006 = nimCopy(null, (Tmp2 = t_10301308(HEX2D_10095327(y_11910002, ypred_11910005)), Tmp2)[0], NTI9861068);
    var sse_11910007 = HEX5E_9861027(norm_9995414(residuals_11910006, 2.0000000000000000e+000), 2.0000000000000000e+000);
    var variance_normalization_factor_11910008 = (to_float_26459(((rows_10075814(x_11895059) - cols_10075836(x_11895059)) - 1)) / to_float_26459((rows_10075814(x_11895059) - cols_10075836(x_11895059))));
    var s2_11910009 = ((sse_11910007 / to_float_26459(((rows_10075814(x_11895059) - cols_10075836(x_11895059)) - 1))) * variance_normalization_factor_11910008);
    var var_beta_hat_11910010 = HEX2A_10115512(s2_11910009, xp_x_11910003);
    var estimate_std_11910011 = HEX2EHEX5E_10005318(diag_10076014(var_beta_hat_11910010), 5.0000000000000000e-001);
    var coefficients_11910012 = nimCopy(null, (Tmp3 = t_10301308(beta_hat_11910004), Tmp3)[0], NTI9861068);
    var include_intercept_11910013 = any_val_9910614(wise_standard_deviation_10165235(x_11895059, 0), 0.0);
    var total_model_variation_11910015 = HEX5E_9861027(norm_9995414(HEX2D_9880293(ravel_10330414(ypred_11910005), mean_10015614(ravel_10330414(ypred_11910005), 0)), 2.0000000000000000e+000), 2.0000000000000000e+000);
    total_model_variation_11910015 = HEX5E_9861027(norm_9995414(HEX2D_9880275(y_11895029, residuals_11910006), 2.0000000000000000e+000), 2.0000000000000000e+000);
    if (include_intercept_11910013) {
    Tmp4 = -1;
    }
    else {
    Tmp4 = 0;
    }
    
    var f_score_11910016 = ((total_model_variation_11910015 / to_float_26459((cols_10075836(x_11895059) + Tmp4))) / (sse_11910007 / to_float_26459((rows_10075814(x_11895059) - cols_10075836(x_11895059)))));
    result_11895047.include_intercept = include_intercept_11910013;
    result_11895047.residuals = nimCopy(null, residuals_11910006, NTI9861068);
    result_11895047.sum_squared_errors = sse_11910007;
    result_11895047.variance_matrix_coefficients = nimCopy(null, var_beta_hat_11910010, NTI9861067);
    result_11895047.R2 = (total_model_variation_11910015 / (total_model_variation_11910015 + sse_11910007));
    if (include_intercept_11910013) {
    Tmp5 = -1;
    }
    else {
    Tmp5 = 0;
    }
    
    result_11895047.adjustedR2 = (1.0000000000000000e+000 - ((to_float_26459((rows_10075814(x_11895059) + Tmp5)) / to_float_26459((rows_10075814(x_11895059) - cols_10075836(x_11895059)))) * (1.0000000000000000e+000 - result_11895047.R2)));
    result_11895047.beta_hat = nimCopy(null, ravel_10330414(beta_hat_11910004), NTI9861064);
    result_11895047.loglikelihood = loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(abs_75247(((sse_11910007 * ((result_11895047.degrees_of_freedom + 1.0000000000000000e-010) - 2.0000000000000000e+000)) / to_float_26459((rows_10075814(x_11895059) - cols_10075836(x_11895059))))))), residuals_11910006);
    result_11895047.degrees_of_freedom = to_float_26459((rows_10075814(x_11895059) - cols_10075836(x_11895059)));
    result_11895047.noise_variance = shifted_estimator_11640018(invchisquare_11560124((result_11895047.degrees_of_freedom + 1.0000000000000000e-010), NaN), 0.0, ((sse_11910007 * ((result_11895047.degrees_of_freedom + 1.0000000000000000e-010) - 2.0000000000000000e+000)) / to_float_26459((rows_10075814(x_11895059) - cols_10075836(x_11895059)))));
    L6: do {
      var HEX3Atmp_11915417 = HEX2EHEX2E_2080220(0, (estimate_std_11910011 != null ? (estimate_std_11910011.length-1) : -1));
      var iHEX60gensym11910043_11920003 = 0;
      var resultHEX60gensym11910044_11925029 = new_seq_11655024(len_11400018(HEX3Atmp_11915417));
      L7: do {
        var it_11930006 = 0;
        L8: do {
          var x_12197062 = 0;
          var res_12197063 = HEX3Atmp_11915417.a;
          L9: do {
              L10: while (true) {
              if (!(res_12197063 <= HEX3Atmp_11915417.b)) break L10;
                x_12197062 = res_12197063;
                it_11930006 = x_12197062;
                resultHEX60gensym11910044_11925029[iHEX60gensym11910043_11920003] = shifted_estimator_11645209(studentt_11500381(result_11895047.degrees_of_freedom), coefficients_11910012[it_11930006], estimate_std_11910011[it_11930006]);
                iHEX60gensym11910043_11920003 += 1;
                res_12197063 += 1;
              }
          } while(false);
        } while(false);
      } while(false);
    } while(false);
    result_11895047.coefficients = nimCopy(null, resultHEX60gensym11910044_11925029, NTI11655028);
    if (include_intercept_11910013) {
    Tmp11 = -1;
    }
    else {
    Tmp11 = 0;
    }
    
    var ms_model_dof_11930022 = to_float_26459((cols_10075836(x_11895059) + Tmp11));
    var ms_residual_dof_11930023 = to_float_26459((rows_10075814(x_11895059) - cols_10075836(x_11895059)));
    result_11895047.model_significance = htest_score_11660024(central_f_11565236(ms_model_dof_11930022, ms_residual_dof_11930023), ((total_model_variation_11910015 / ms_model_dof_11930022) / (sse_11910007 / ms_residual_dof_11930023)), 1);
    if ((0 < (names_11895046 != null ? names_11895046.length : 0))) {
    result_11895047.feature_names = nimCopy(null, names_11895046, NTI11895030);
    }
    else {
      L12: do {
        var HEX3Atmp_11945217 = HEX2EHEX2E_2080220(1, cols_10075836(x_11895059));
        var iHEX60gensym11935014_11950003 = 0;
        var resultHEX60gensym11935015_11955029 = new_seq_610232(len_11400018(HEX3Atmp_11945217));
        L13: do {
          var it_11960006 = 0;
          L14: do {
            var x_12197071 = 0;
            var res_12197072 = HEX3Atmp_11945217.a;
            L15: do {
                L16: while (true) {
                if (!(res_12197072 <= HEX3Atmp_11945217.b)) break L16;
                  x_12197071 = res_12197072;
                  it_11960006 = x_12197071;
                  var fmt_res_11960009 = [mnewString(0)];
                  if (fmt_res_11960009[0] != null) { fmt_res_11960009[0] = (fmt_res_11960009[0]).concat(makeNimstrLit("x")); } else { fmt_res_11960009[0] = makeNimstrLit("x"); };
                  format_value_11485001(fmt_res_11960009, 0, it_11960006, []);
                  resultHEX60gensym11935015_11955029[iHEX60gensym11935014_11950003] = nimCopy(null, fmt_res_11960009[0], NTI112);
                  iHEX60gensym11935014_11950003 += 1;
                  res_12197072 += 1;
                }
            } while(false);
          } while(false);
        } while(false);
      } while(false);
      result_11895047.feature_names = nimCopy(null, resultHEX60gensym11935015_11955029, NTI610236);
    }
    

  return result_11895047;

}
function hstack_10005814(vectors_10005817) {
  var result_10005818 = [null];

    result_10005818[0] = nimCopy(null, [], NTI10005833);
    add_10005849(result_10005818, 0, []);
    L1: do {
      var a_10005932 = null;
      var i_12197087 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12197087 < (vectors_10005817 != null ? vectors_10005817.length : 0))) break L3;
            a_10005932 = vectors_10005817[i_12197087];
            L4: do {
              var c_10005946 = 0;
              var colontmp__12197080 = 0;
              colontmp__12197080 = ((a_10005932 != null ? a_10005932.length : 0) - 1);
              var res_12197081 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12197081 <= colontmp__12197080)) break L6;
                    c_10005946 = res_12197081;
                    if (result_10005818[0] != null) { result_10005818[0].push(a_10005932[c_10005946]); } else { result_10005818[0] = [a_10005932[c_10005946]]; };
                    res_12197081 += 1;
                  }
              } while(false);
            } while(false);
            i_12197087 += 1;
          }
      } while(false);
    } while(false);

  return result_10005818[0];

}
function model_candidate_12055473(x_12055475, y_12055476, change_point_12055477, covariance_structure_type_12055478) {
  var result_12055479 = null;

    result_12055479 = ({after_model: null, before_model: null, after_residual_model: null, before_residual_model: null, loglikelihood: 0.0, change_point_candidate: 0, parameters_mean: null, covariance_structure_type: null, before_model_covariance_parameters: null, existence_change_point_hypothesis: null});
    var pre_x_12055518 = add_intercept_11626449(HEX5BHEX5D_11627070(x_12055475, HEX2EHEX2E_2080220(0, change_point_12055477)));
    var pre_y_12055551 = HEX5BHEX5D_11627070(y_12055476, HEX2EHEX2E_2080220(0, change_point_12055477));
    var post_x_12055588 = add_intercept_11626449(HEX5BHEX5D_11627070(x_12055475, HEX2EHEX2E_2080220((change_point_12055477 + 1), (x_12055475 != null ? (x_12055475.length-1) : -1))));
    var post_y_12055625 = HEX5BHEX5D_11627070(y_12055476, HEX2EHEX2E_2080220((change_point_12055477 + 1), (y_12055476 != null ? (y_12055476.length-1) : -1)));
    var pre_ols_model_12055637 = ols_model_11627832(pre_x_12055518, pre_y_12055551, [makeNimstrLit("beta1"), makeNimstrLit("beta0")]);
    var post_ols_model_12055649 = ols_model_11627832(post_x_12055588, HEX2D_9880275(post_y_12055625, predict_11800226(pre_ols_model_12055637, post_x_12055588).prediction_means), [makeNimstrLit("delta1"), makeNimstrLit("delta0")]);
    var pre_residual_ar_model_12055650 = null;
    var post_residual_ar_model_12055651 = null;
    var likelihood_model_12055652 = 0.0;
    if (eqStrings(covariance_structure_type_12055478, makeNimstrLit("autoregressive"))) {
    pre_residual_ar_model_12055650 = ar1_11821214(pre_ols_model_12055637.residuals, false, makeNimstrLit("phi0"));
    post_residual_ar_model_12055651 = ar1_11821214(post_ols_model_12055649.residuals, false, makeNimstrLit("phi1"));
    likelihood_model_12055652 = (loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(estimate_11765036(pre_residual_ar_model_12055650.noise_variance))), pre_ols_model_12055637.residuals) + loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(estimate_11765036(post_residual_ar_model_12055651.noise_variance))), post_ols_model_12055649.residuals));
    }
    else {
    if (eqStrings(covariance_structure_type_12055478, makeNimstrLit("independent"))) {
    pre_residual_ar_model_12055650 = simple_ls_model_cov_independient_11827307(pre_ols_model_12055637.residuals, [makeNimstrLit("phi0")]);
    post_residual_ar_model_12055651 = simple_ls_model_cov_independient_11827307(post_ols_model_12055649.residuals, [makeNimstrLit("phi1")]);
    likelihood_model_12055652 = (loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(estimate_11765036(pre_residual_ar_model_12055650.noise_variance))), pre_ols_model_12055637.residuals) + loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(estimate_11765036(post_residual_ar_model_12055651.noise_variance))), post_ols_model_12055649.residuals));
    }
    else {
    if (eqStrings(covariance_structure_type_12055478, makeNimstrLit("exchangeable"))) {
    pre_residual_ar_model_12055650 = simple_ls_model_cov_exchangeable_11895027(pre_ols_model_12055637.residuals, [makeNimstrLit("phi0")]);
    post_residual_ar_model_12055651 = simple_ls_model_cov_exchangeable_11895027(post_ols_model_12055649.residuals, [makeNimstrLit("phi1")]);
    likelihood_model_12055652 = (loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(estimate_11765036(pre_residual_ar_model_12055650.noise_variance))), pre_ols_model_12055637.residuals) + loglikelihood_11535167(normal_11530065(0.0, Math.sqrt(estimate_11765036(post_residual_ar_model_12055651.noise_variance))), post_ols_model_12055649.residuals));
    }
    else {
    rawEcho(makeNimstrLit("Covariance structure unrecognized: "), covariance_structure_type_12055478);
    }
    }}
    result_12055479 = {before_model: pre_ols_model_12055637, after_model: post_ols_model_12055649, before_residual_model: pre_residual_ar_model_12055650, after_residual_model: post_residual_ar_model_12055651, loglikelihood: likelihood_model_12055652, change_point_candidate: change_point_12055477, covariance_structure_type: nimCopy(null, covariance_structure_type_12055478, NTI112), parameters_mean: hstack_10005814([nimCopy(null, pre_ols_model_12055637.beta_hat, NTI9861064), nimCopy(null, pre_residual_ar_model_12055650.beta_hat, NTI9861064), nimCopy(null, post_ols_model_12055649.beta_hat, NTI9861064), nimCopy(null, post_residual_ar_model_12055651.beta_hat, NTI9861064)]), before_model_covariance_parameters: null, existence_change_point_hypothesis: null};

  return result_12055479;

}
function data_transform_11626264(x_11626266, dt_11626267) {
  var result_11626268 = null;

    L1: do {
      var r_11626277 = 0;
      var colontmp__12197130 = 0;
      colontmp__12197130 = (rows_10075814(x_11626266) - 1);
      var res_12197131 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197131 <= colontmp__12197130)) break L3;
            r_11626277 = res_12197131;
            if (result_11626268 != null) { result_11626268.push(dt_11626267(x_11626266[r_11626277], r_11626277)); } else { result_11626268 = [dt_11626267(x_11626266[r_11626277], r_11626277)]; };
            res_12197131 += 1;
          }
      } while(false);
    } while(false);

  return result_11626268;

}
function ones_10300898(row_10300900, col_10300901) {
  var result_10300902 = null;

    result_10300902 = nimCopy(null, constant_matrix_10300814(row_10300900, col_10300901, 1.0000000000000000e+000), NTI9861067);

  return result_10300902;

}
function covariance_matrix_for_before_model_12040061(model_12040063, x_12040064) {
    function HEX3Aanonymous_12045001(x_12045011, i_12045012) {
        var Tmp1;
        var Tmp2;

      var result_12045018 = null;

        if ((model_12040063.change_point_candidate < i_12045012)) {
        Tmp1 = x_12045011[0];
        }
        else {
        Tmp1 = 0.0;
        }
        
        if ((model_12040063.change_point_candidate < i_12045012)) {
        Tmp2 = 1.0000000000000000e+000;
        }
        else {
        Tmp2 = 0.0;
        }
        
        result_12045018 = nimCopy(null, [x_12045011[0], 1.0000000000000000e+000, Tmp1, Tmp2], NTI12055010);

      return result_12045018;

    }

  var result_12040065 = null;

  BeforeRet: do {
    var t_12040071 = (x_12040064 != null ? x_12040064.length : 0);
    var phi_12040072 = min_80014(abs_75247(model_12040063.before_residual_model.beta_hat[0]), 9.9999000000000005e-001);
    var covariance_factor_12040112 = (estimate_11765036(model_12040063.before_model.noise_variance) / (1.0000000000000000e+000 - HEX5E_9861027(phi_12040072, 2.0000000000000000e+000)));
    var x_12055039 = data_transform_11626264(as_column_vector_10015414(HEX5BHEX5D_11627070(x_12040064, HEX2EHEX2E_2080220(1, (x_12040064 != null ? (x_12040064.length-1) : -1)))), HEX3Aanonymous_12045001);
    var covariance_approx_12055216 = [];
    L1: do {
      var r_12055226 = 0;
      var res_12197096 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197096 <= 2)) break L3;
            r_12055226 = res_12197096;
            if (covariance_approx_12055216 != null) { covariance_approx_12055216.push([]); } else { covariance_approx_12055216 = [[]]; };
            L4: do {
              var c_12055258 = 0;
              var res_12197091 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_12197091 <= 2)) break L6;
                    c_12055258 = res_12197091;
                    if (covariance_approx_12055216[r_12055226] != null) { covariance_approx_12055216[r_12055226].push((covariance_factor_12040112 * HEX5E_9861027(phi_12040072, to_float_26459(Math.abs(Math.trunc((c_12055258 - r_12055226) % t_12040071)))))); } else { covariance_approx_12055216[r_12055226] = [(covariance_factor_12040112 * HEX5E_9861027(phi_12040072, to_float_26459(Math.abs(Math.trunc((c_12055258 - r_12055226) % t_12040071)))))]; };
                    res_12197091 += 1;
                  }
              } while(false);
            } while(false);
            res_12197096 += 1;
          }
      } while(false);
    } while(false);
    var inverse_approximation_12055266 = inverse_10355071(covariance_approx_12055216);
    var inverted_matrix_12055282 = [];
    L7: do {
      var r_12055297 = 0;
      var colontmp__12197109 = 0;
      colontmp__12197109 = ((x_12040064 != null ? (x_12040064.length-1) : -1) - 1);
      var res_12197110 = 0;
      L8: do {
          L9: while (true) {
          if (!(res_12197110 <= colontmp__12197109)) break L9;
            r_12055297 = res_12197110;
            if (inverted_matrix_12055282 != null) { inverted_matrix_12055282.push([]); } else { inverted_matrix_12055282 = [[]]; };
            L10: do {
              var c_12055334 = 0;
              var colontmp__12197103 = 0;
              colontmp__12197103 = ((x_12040064 != null ? (x_12040064.length-1) : -1) - 1);
              var res_12197104 = 0;
              L11: do {
                  L12: while (true) {
                  if (!(res_12197104 <= colontmp__12197103)) break L12;
                    c_12055334 = res_12197104;
                    if (inverted_matrix_12055282[r_12055297] != null) { inverted_matrix_12055282[r_12055297].push(0.0); } else { inverted_matrix_12055282[r_12055297] = [0.0]; };
                    if (((r_12055297 == c_12055334) && ((r_12055297 == 0) || (r_12055297 == ((x_12040064 != null ? (x_12040064.length-1) : -1) - 1))))) {
                    inverted_matrix_12055282[r_12055297][c_12055334] = inverse_approximation_12055266[0][0];
                    }
                    else {
                    if ((r_12055297 == c_12055334)) {
                    inverted_matrix_12055282[r_12055297][c_12055334] = inverse_approximation_12055266[1][1];
                    }
                    else {
                    if ((Math.abs((r_12055297 - c_12055334)) <= 1)) {
                    inverted_matrix_12055282[r_12055297][c_12055334] = inverse_approximation_12055266[1][0];
                    }
                    }}
                    res_12197104 += 1;
                  }
              } while(false);
            } while(false);
            res_12197110 += 1;
          }
      } while(false);
    } while(false);
    result_12040065 = nimCopy(null, inverse_10355071(HEX2A_10125340(HEX2A_10125340(t_10301308(x_12055039), inverted_matrix_12055282), x_12055039)), NTI9861067);
    break BeforeRet;
    var covariance_12055401 = ones_10300898((t_12040071 - 1), (t_12040071 - 1));
    L13: do {
      var r_12055416 = 0;
      var colontmp__12197123 = 0;
      colontmp__12197123 = ((x_12040064 != null ? (x_12040064.length-1) : -1) - 1);
      var res_12197124 = 0;
      L14: do {
          L15: while (true) {
          if (!(res_12197124 <= colontmp__12197123)) break L15;
            r_12055416 = res_12197124;
            L16: do {
              var c_12055431 = 0;
              var colontmp__12197117 = 0;
              colontmp__12197117 = ((x_12040064 != null ? (x_12040064.length-1) : -1) - 1);
              var res_12197118 = 0;
              L17: do {
                  L18: while (true) {
                  if (!(res_12197118 <= colontmp__12197117)) break L18;
                    c_12055431 = res_12197118;
                    covariance_12055401[r_12055416][c_12055431] = (covariance_factor_12040112 * HEX5E_9861027(phi_12040072, to_float_26459(Math.abs(Math.trunc((c_12055431 - r_12055416) % t_12040071)))));
                    res_12197118 += 1;
                  }
              } while(false);
            } while(false);
            res_12197124 += 1;
          }
      } while(false);
    } while(false);
    result_12040065 = nimCopy(null, inverse_10355071(HEX2A_10125340(HEX2A_10125340(t_10301308(x_12055039), inverse_10355071(covariance_12055401)), x_12055039)), NTI9861067);
  } while (false);

  return result_12040065;

}
function HEX5BHEX5D_10055233(a_10055235, r_10055236, c_10055237) {
  var result_10055238 = 0.0;

    result_10055238 = a_10055235[r_10055236][c_10055237];

  return result_10055238;

}
function new_seq_12070006(len_12070009) {
  var result_12070011 = null;

    result_12070011 = new Array(len_12070009); for (var i=0;i<len_12070009;++i) {result_12070011[i]=null;}
  return result_12070011;

}
function new_seq_11400047(len_11400050) {
  var result_11400052 = null;

    result_11400052 = new Array(len_11400050); for (var i=0;i<len_11400050;++i) {result_11400052[i]=0.0;}
  return result_11400052;

}
function HEX2A_8766072(x_8766074, order_8766075) {
  var result_8766076 = 0;

    var y_8766081 = (order_8766075 - 1);
    result_8766076 = ((x_8766074 ^ y_8766081) - y_8766081);

  return result_8766076;

}
function merge_11606116(a_11606121, b_11606124, lo_11606125, m_11606126, hi_11606127, cmp_11606131, order_11606132) {
  BeforeRet: do {
    if ((HEX2A_8766072(cmp_11606131(a_11606121[m_11606126], a_11606121[(m_11606126 + 1)]), order_11606132) <= 0)) {
    break BeforeRet;
    }
    
    var j_11606133 = lo_11606125;
    var bb_11615402 = 0;
    L1: do {
        L2: while (true) {
        if (!(j_11606133 <= m_11606126)) break L2;
          b_11606124[bb_11615402] = a_11606121[j_11606133];
          bb_11615402 += 1;
          j_11606133 += 1;
        }
    } while(false);
    var i_11615614 = 0;
    var k_11615615 = lo_11606125;
    L3: do {
        L4: while (true) {
        if (!((k_11615615 < j_11606133) && (j_11606133 <= hi_11606127))) break L4;
          if ((HEX2A_8766072(cmp_11606131(b_11606124[i_11615614], a_11606121[j_11606133]), order_11606132) <= 0)) {
          a_11606121[k_11615615] = b_11606124[i_11615614];
          i_11615614 += 1;
          }
          else {
            a_11606121[k_11615615] = a_11606121[j_11606133];
            j_11606133 += 1;
          }
          
          k_11615615 += 1;
        }
    } while(false);
    L5: do {
        L6: while (true) {
        if (!(k_11615615 < j_11606133)) break L6;
          a_11606121[k_11615615] = b_11606124[i_11615614];
          k_11615615 += 1;
          i_11615614 += 1;
        }
    } while(false);
  } while (false);

  
}
function sort_11606086(a_11606091, cmp_11606095, order_11606096) {
    var n_11606101 = (a_11606091 != null ? a_11606091.length : 0);
    var b_11606103 = null;
    b_11606103 = new Array(Math.trunc(n_11606101 / 2)); for (var i=0;i<Math.trunc(n_11606101 / 2);++i) {b_11606103[i]=0.0;}    var s_11606112 = 1;
    L1: do {
        L2: while (true) {
        if (!(s_11606112 < n_11606101)) break L2;
          var m_11606113 = ((n_11606101 - 1) - s_11606112);
          L3: do {
              L4: while (true) {
              if (!(0 <= m_11606113)) break L4;
                merge_11606116(a_11606091, b_11606103, nimMax(((m_11606113 - s_11606112) + 1), 0), m_11606113, (m_11606113 + s_11606112), cmp_11606095, order_11606096);
                m_11606113 -= (s_11606112 * 2);
              }
          } while(false);
          s_11606112 = (s_11606112 * 2);
        }
    } while(false);

  
}
function sorted_11606044(a_11606048, cmp_11606052, order_11606053) {
  var result_11606055 = null;

    result_11606055 = nimCopy(null, new_seq_11400047((a_11606048 != null ? a_11606048.length : 0)), NTI11400051);
    L1: do {
      var i_11606079 = 0;
      var colontmp__12197163 = 0;
      colontmp__12197163 = (a_11606048 != null ? (a_11606048.length-1) : -1);
      var res_12197164 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197164 <= colontmp__12197163)) break L3;
            i_11606079 = res_12197164;
            result_11606055[i_11606079] = a_11606048[i_11606079];
            res_12197164 += 1;
          }
      } while(false);
    } while(false);
    sort_11606086(result_11606055, cmp_11606052, order_11606053);

  return result_11606055;

}
function cmp_11606021(x_11606024, y_11606025) {
  var result_11606026 = 0;

  BeforeRet: do {
    if ((x_11606024 == y_11606025)) {
    result_11606026 = 0;
    break BeforeRet;
    }
    
    if ((x_11606024 < y_11606025)) {
    result_11606026 = -1;
    break BeforeRet;
    }
    
    result_11606026 = 1;
    break BeforeRet;
  } while (false);

  return result_11606026;

}
function benjamini_hochberg_fdr_11606006(v_11606008, alpha_11606009) {
  var result_11606010 = [0.0];

    var m_11606016 = to_float_26459((v_11606008 != null ? v_11606008.length : 0));
    var vs_11616470 = sorted_11606044(v_11606008, cmp_11606021, 1);
    var max_pvalue_11616471 = -1.0000000000000000e+000;
    L1: do {
      var i_x_11625229 = 0;
      var x_11625230 = 0.0;
      var i_12197159 = 0;
      var l_12197160 = (vs_11616470 != null ? vs_11616470.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_12197159 < l_12197160)) break L3;
            i_x_11625229 = i_12197159;
            x_11625230 = vs_11616470[i_12197159];
            var bh_11625231 = ((alpha_11606009 / m_11606016) * to_float_26459((i_x_11625229 + 1)));
            if ((x_11625230 < bh_11625231)) {
            HEX2BHEX3D_1000001(result_11606010, 0, 1.0000000000000000e+000);
            max_pvalue_11616471 = x_11625230;
            }
            
            i_12197159 += 1;
          }
      } while(false);
    } while(false);
    result_11606010[0] = max_pvalue_11616471;

  return result_11606010[0];

}
function new_seq_12110135(len_12110138) {
  var result_12110140 = null;

    result_12110140 = new Array(len_12110138); for (var i=0;i<len_12110138;++i) {result_12110140[i]=null;}
  return result_12110140;

}
function merge_12110211(a_12110216, b_12110219, lo_12110220, m_12110221, hi_12110222, cmp_12110226, order_12110227) {
  BeforeRet: do {
    if ((HEX2A_8766072(cmp_12110226(a_12110216[m_12110221], a_12110216[(m_12110221 + 1)]), order_12110227) <= 0)) {
    break BeforeRet;
    }
    
    var j_12110228 = lo_12110220;
    var bb_12120402 = 0;
    L1: do {
        L2: while (true) {
        if (!(j_12110228 <= m_12110221)) break L2;
          b_12110219[bb_12120402] = a_12110216[j_12110228];
          bb_12120402 += 1;
          j_12110228 += 1;
        }
    } while(false);
    var i_12120614 = 0;
    var k_12120615 = lo_12110220;
    L3: do {
        L4: while (true) {
        if (!((k_12120615 < j_12110228) && (j_12110228 <= hi_12110222))) break L4;
          if ((HEX2A_8766072(cmp_12110226(b_12110219[i_12120614], a_12110216[j_12110228]), order_12110227) <= 0)) {
          a_12110216[k_12120615] = b_12110219[i_12120614];
          i_12120614 += 1;
          }
          else {
            a_12110216[k_12120615] = a_12110216[j_12110228];
            j_12110228 += 1;
          }
          
          k_12120615 += 1;
        }
    } while(false);
    L5: do {
        L6: while (true) {
        if (!(k_12120615 < j_12110228)) break L6;
          a_12110216[k_12120615] = b_12110219[i_12120614];
          k_12120615 += 1;
          i_12120614 += 1;
        }
    } while(false);
  } while (false);

  
}
function sort_12110181(a_12110186, cmp_12110190, order_12110191) {
    var n_12110196 = (a_12110186 != null ? a_12110186.length : 0);
    var b_12110198 = null;
    b_12110198 = new Array(Math.trunc(n_12110196 / 2)); for (var i=0;i<Math.trunc(n_12110196 / 2);++i) {b_12110198[i]=null;}    var s_12110207 = 1;
    L1: do {
        L2: while (true) {
        if (!(s_12110207 < n_12110196)) break L2;
          var m_12110208 = ((n_12110196 - 1) - s_12110207);
          L3: do {
              L4: while (true) {
              if (!(0 <= m_12110208)) break L4;
                merge_12110211(a_12110186, b_12110198, nimMax(((m_12110208 - s_12110207) + 1), 0), m_12110208, (m_12110208 + s_12110207), cmp_12110190, order_12110191);
                m_12110208 -= (s_12110207 * 2);
              }
          } while(false);
          s_12110207 = (s_12110207 * 2);
        }
    } while(false);

  
}
function sorted_12110118(a_12110122, cmp_12110126, order_12110127) {
  var result_12110129 = null;

    result_12110129 = nimCopy(null, new_seq_12110135((a_12110122 != null ? a_12110122.length : 0)), NTI12110139);
    L1: do {
      var i_12110174 = 0;
      var colontmp__12197175 = 0;
      colontmp__12197175 = (a_12110122 != null ? (a_12110122.length-1) : -1);
      var res_12197176 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197176 <= colontmp__12197175)) break L3;
            i_12110174 = res_12197176;
            result_12110129[i_12110174] = a_12110122[i_12110174];
            res_12197176 += 1;
          }
      } while(false);
    } while(false);
    sort_12110181(result_12110129, cmp_12110126, order_12110127);

  return result_12110129;

}
function existence_change_point_wald_test_12056214(models_12056217) {
            var Tmp4;
            var Tmp5;
    function HEX3Aanonymous_12110001(h1_12110011, h2_12110012) {
      var result_12110018 = false;

        result_12110018 = (p_value_12035089(h1_12110011) < p_value_12035089(h2_12110012));

      return result_12110018;

    }
    var Tmp14;

  var result_12056222 = null;

  BeforeRet: do {
    var m_12056228 = (models_12056217 != null ? models_12056217.length : 0);
    var base_distribution_12056229 = {dof: 2.0000000000000000e+000};
    var scores_12056246 = [];
    L1: do {
      var j_12056261 = 0;
      var colontmp__12197138 = 0;
      colontmp__12197138 = (models_12056217 != null ? (models_12056217.length-1) : -1);
      var res_12197139 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197139 <= colontmp__12197138)) break L3;
            j_12056261 = res_12197139;
            var cov_12056262 = nimCopy(null, models_12056217[j_12056261].before_model_covariance_parameters, NTI9861067);
            var beta_12056263 = as_column_vector_10015414(models_12056217[j_12056261].after_model.beta_hat);
            var reduced_cov_12056313 = [[HEX5BHEX5D_10055233(cov_12056262, 2, 2), HEX5BHEX5D_10055233(cov_12056262, 2, 3)], [HEX5BHEX5D_10055233(cov_12056262, 3, 2), HEX5BHEX5D_10055233(cov_12056262, 3, 3)]];
            var score_12056314 = (Tmp5 = (Tmp4 = HEX2A_10125340(HEX2A_10125340(t_10301308(beta_12056263), inverse_10355071(reduced_cov_12056313)), beta_12056263), Tmp4)[0], Tmp5)[0];
            if (scores_12056246 != null) { scores_12056246.push(score_12056314); } else { scores_12056246 = [score_12056314]; };
            res_12197139 += 1;
          }
      } while(false);
    } while(false);
    L6: do {
      var iHEX60gensym12056324_12065003 = 0;
      var resultHEX60gensym12056325_12070047 = new_seq_12070006((scores_12056246 != null ? scores_12056246.length : 0));
      L7: do {
        var it_12075007 = 0.0;
        var i_12197147 = 0;
        var l_12197148 = (scores_12056246 != null ? scores_12056246.length : 0);
        L8: do {
            L9: while (true) {
            if (!(i_12197147 < l_12197148)) break L9;
              it_12075007 = scores_12056246[i_12197147];
              resultHEX60gensym12056325_12070047[iHEX60gensym12056324_12065003] = htest_score_12060210({dof: (2.0000000000000000e+000 * to_float_26459(m_12056228))}, it_12075007, 2);
              iHEX60gensym12056324_12065003 += 1;
              i_12197147 += 1;
            }
        } while(false);
      } while(false);
    } while(false);
    var hypothesis_set_12075023 = nimCopy(null, resultHEX60gensym12056325_12070047, NTI12070010);
    L10: do {
      var iHEX60gensym12075026_12095003 = 0;
      var resultHEX60gensym12075027_12100011 = new_seq_11400047((hypothesis_set_12075023 != null ? hypothesis_set_12075023.length : 0));
      L11: do {
        var it_12105007 = null;
        var i_12197153 = 0;
        var l_12197154 = (hypothesis_set_12075023 != null ? hypothesis_set_12075023.length : 0);
        L12: do {
            L13: while (true) {
            if (!(i_12197153 < l_12197154)) break L13;
              it_12105007 = hypothesis_set_12075023[i_12197153];
              resultHEX60gensym12075027_12100011[iHEX60gensym12075026_12095003] = p_value_12035089(it_12105007);
              iHEX60gensym12075026_12095003 += 1;
              i_12197153 += 1;
            }
        } while(false);
      } while(false);
    } while(false);
    var p_values_12105057 = nimCopy(null, resultHEX60gensym12075027_12100011, NTI11400051);
    var number_rejected_12105058 = benjamini_hochberg_fdr_11606006(p_values_12105057, 5.0000000000000003e-002);
    var hypothesis_12121470 = (Tmp14 = sorted_12110118(hypothesis_set_12075023, HEX3Aanonymous_12110001, 1), Tmp14)[0];
    result_12056222 = hypothesis_12121470;
    break BeforeRet;
  } while (false);

  return result_12056222;

}
function rits_model_12150057(x_12150059, y_12150060, candidate_change_point_start_12150061, candidate_change_point_end_12150062, covariance_structure_type_12150063) {
                var Tmp5;
                var Tmp6;

  var result_12150064 = null;

    result_12150064 = ({candidates: null, change_point_candidates: null, loglikelihood_candidates: null, loglikelihood: 0.0, change_point_index: 0, change_point_x: 0.0, model: null, parameters_mean: null});
    if (!(((y_12150060 != null ? y_12150060.length : 0) == (x_12150059 != null ? x_12150059.length : 0)))) {
    raiseException({message: makeNimstrLit("x and y must have the same size"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    
    var likely_change_point_12160003 = -1;
    result_12150064.loglikelihood = -Infinity;
    L1: do {
      var k_12160009 = 0;
      var res_12196645 = candidate_change_point_start_12150061;
      L2: do {
          L3: while (true) {
          if (!(res_12196645 <= candidate_change_point_end_12150062)) break L3;
            k_12160009 = res_12196645;
            L4: do {
                if ((k_12160009 < 1)) Tmp5 = true; else {                  Tmp5 = (((y_12150060 != null ? (y_12150060.length-1) : -1) - 2) < k_12160009);                }              if (Tmp5) {
              break L4;
              }
              
              var candidate_12165007 = model_candidate_12055473(x_12150059, y_12150060, k_12160009, covariance_structure_type_12150063);
              if (result_12150064.change_point_candidates != null) { result_12150064.change_point_candidates.push(k_12160009); } else { result_12150064.change_point_candidates = [k_12160009]; };
              if (result_12150064.loglikelihood_candidates != null) { result_12150064.loglikelihood_candidates.push(candidate_12165007.loglikelihood); } else { result_12150064.loglikelihood_candidates = [candidate_12165007.loglikelihood]; };
                if (!!((classify_880431(candidate_12165007.loglikelihood) == 4))) Tmp6 = false; else {                  Tmp6 = (result_12150064.loglikelihood < candidate_12165007.loglikelihood);                }              if (Tmp6) {
              result_12150064.loglikelihood = candidate_12165007.loglikelihood;
              result_12150064.model = candidate_12165007;
              likely_change_point_12160003 = k_12160009;
              }
              
            } while(false);
            res_12196645 += 1;
          }
      } while(false);
    } while(false);
    result_12150064.parameters_mean = nimCopy(null, result_12150064.model.parameters_mean, NTI9861064);
    result_12150064.model.before_model_covariance_parameters = nimCopy(null, covariance_matrix_for_before_model_12040061(result_12150064.model, x_12150059), NTI9861067);
    result_12150064.model.existence_change_point_hypothesis = existence_change_point_wald_test_12056214([result_12150064.model]);
    result_12150064.change_point_index = likely_change_point_12160003;
    result_12150064.change_point_x = x_12150059[likely_change_point_12160003];

  return result_12150064;

}
function nsuRepeatStr(s_9300075, n_9300076) {
  var result_9300077 = null;

    result_9300077 = nimCopy(null, mnewString(0), NTI112);
    L1: do {
      var i_9300086 = 0;
      var colontmp__12197194 = 0;
      colontmp__12197194 = n_9300076;
      var res_12197195 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12197195 <= colontmp__12197194)) break L3;
            i_9300086 = res_12197195;
            if (result_9300077 != null) { result_9300077 = (result_9300077).concat(s_9300075); } else { result_9300077 = s_9300075.slice(); };
            res_12197195 += 1;
          }
      } while(false);
    } while(false);

  return result_9300077;

}
function nucruneLen(s_1201829) {
  var result_1201830 = 0;

    var i_1201832 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1201832 < (s_1201829 != null ? s_1201829.length : 0))) break L2;
          if ((s_1201829[i_1201832] <= 127)) {
          i_1201832 += 1;
          }
          else {
          if ((((s_1201829[i_1201832] >>> 0) >>> 5) == 6)) {
          i_1201832 += 2;
          }
          else {
          if ((((s_1201829[i_1201832] >>> 0) >>> 4) == 14)) {
          i_1201832 += 3;
          }
          else {
          if ((((s_1201829[i_1201832] >>> 0) >>> 3) == 30)) {
          i_1201832 += 4;
          }
          else {
          if ((((s_1201829[i_1201832] >>> 0) >>> 2) == 62)) {
          i_1201832 += 5;
          }
          else {
          if ((((s_1201829[i_1201832] >>> 0) >>> 1) == 126)) {
          i_1201832 += 6;
          }
          else {
          i_1201832 += 1;
          }
          }}}}}
          result_1201830 += 1;
        }
    } while(false);

  return result_1201830;

}
function rune_len_at_1201931(s_1201933, i_1201934) {
  var result_1201935 = 0;

    if ((s_1201933[i_1201934] <= 127)) {
    result_1201935 = 1;
    }
    else {
    if ((((s_1201933[i_1201934] >>> 0) >>> 5) == 6)) {
    result_1201935 = 2;
    }
    else {
    if ((((s_1201933[i_1201934] >>> 0) >>> 4) == 14)) {
    result_1201935 = 3;
    }
    else {
    if ((((s_1201933[i_1201934] >>> 0) >>> 3) == 30)) {
    result_1201935 = 4;
    }
    else {
    if ((((s_1201933[i_1201934] >>> 0) >>> 2) == 62)) {
    result_1201935 = 5;
    }
    else {
    if ((((s_1201933[i_1201934] >>> 0) >>> 1) == 126)) {
    result_1201935 = 6;
    }
    else {
      result_1201935 = 1;
    }
    }}}}}

  return result_1201935;

}
function rune_offset_1825244(s_1825246, pos_1825247, start_1825248) {
  var result_1825249 = 0;

  BeforeRet: do {
    var i_1825251 = 0;
    var o_1825252 = start_1825248;
    L1: do {
        L2: while (true) {
        if (!(i_1825251 < pos_1825247)) break L2;
          o_1825252 += rune_len_at_1201931(s_1825246, o_1825252);
          if (((s_1825246 != null ? s_1825246.length : 0) <= o_1825252)) {
          result_1825249 = -1;
          break BeforeRet;
          }
          
          i_1825251 += 1;
        }
    } while(false);
    result_1825249 = o_1825252;
    break BeforeRet;
  } while (false);

  return result_1825249;

}
function validate_utf8_1445229(s_1445231) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_1445232 = 0;

  BeforeRet: do {
    var i_1445234 = 0;
    var l_1445235 = (s_1445231 != null ? s_1445231.length : 0);
    L1: do {
        L2: while (true) {
        if (!(i_1445234 < l_1445235)) break L2;
          if ((s_1445231[i_1445234] <= 127)) {
          i_1445234 += 1;
          }
          else {
          if ((((s_1445231[i_1445234] >>> 0) >>> 5) == 6)) {
          if ((s_1445231[i_1445234] < 194)) {
          result_1445232 = i_1445234;
          break BeforeRet;
          }
          
            if (!((i_1445234 + 1) < l_1445235)) Tmp3 = false; else {              Tmp3 = (((s_1445231[(i_1445234 + 1)] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          i_1445234 += 2;
          }
          else {
            result_1445232 = i_1445234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1445231[i_1445234] >>> 0) >>> 4) == 14)) {
            if (!((i_1445234 + 2) < l_1445235)) Tmp5 = false; else {              Tmp5 = (((s_1445231[(i_1445234 + 1)] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_1445231[(i_1445234 + 2)] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          i_1445234 += 3;
          }
          else {
            result_1445232 = i_1445234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1445231[i_1445234] >>> 0) >>> 3) == 30)) {
            if (!((i_1445234 + 3) < l_1445235)) Tmp8 = false; else {              Tmp8 = (((s_1445231[(i_1445234 + 1)] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_1445231[(i_1445234 + 2)] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_1445231[(i_1445234 + 3)] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          i_1445234 += 4;
          }
          else {
            result_1445232 = i_1445234;
            break BeforeRet;
          }
          
          }
          else {
            result_1445232 = i_1445234;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    result_1445232 = -1;
    break BeforeRet;
  } while (false);

  return result_1445232;

}
function align_string_9755222(s_9755224, minimum_width_9755225, align_9755226, fill_9755227) {
      var Tmp1;

  var result_9755228 = null;

    if ((minimum_width_9755225 == 0)) {
    result_9755228 = nimCopy(null, s_9755224, NTI112);
    }
    else {
      if ((validate_utf8_1445229(s_9755224) == -1)) {
      Tmp1 = nucruneLen(s_9755224);
      }
      else {
      Tmp1 = (s_9755224 != null ? s_9755224.length : 0);
      }
      
      var s_rune_len_9755229 = Tmp1;
      var to_fill_9755230 = (minimum_width_9755225 - s_rune_len_9755229);
      if ((to_fill_9755230 <= 0)) {
      result_9755228 = nimCopy(null, s_9755224, NTI112);
      }
      else {
      if (((align_9755226 == 60) || (align_9755226 == 0))) {
      result_9755228 = nimCopy(null, (s_9755224 || []).concat(nsuRepeatChar(fill_9755227, to_fill_9755230) || []), NTI112);
      }
      else {
      if ((align_9755226 == 94)) {
      var half_9755231 = Math.trunc(to_fill_9755230 / 2);
      result_9755228 = nimCopy(null, (nsuRepeatChar(fill_9755227, half_9755231) || []).concat(s_9755224 || [],nsuRepeatChar(fill_9755227, (to_fill_9755230 - half_9755231)) || []), NTI112);
      }
      else {
        result_9755228 = nimCopy(null, (nsuRepeatChar(fill_9755227, to_fill_9755230) || []).concat(s_9755224 || []), NTI112);
      }
      }}
    }
    

  return result_9755228;

}
function format_value_9800080(result_9800083, result_9800083_Idx, value_9800084, specifier_9800085) {
    var spec_9800086 = parse_standard_format_specifier_9755322(specifier_9800085, 0, false);
    var value_9800087 = nimCopy(null, value_9800084, NTI112);
    switch (spec_9800086.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_9800086.typ]), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    if (!((spec_9800086.precision == -1))) {
    if ((spec_9800086.precision < nucruneLen(value_9800087))) {
    (value_9800087 == null ? value_9800087 = mnewString(rune_offset_1825244(value_9800087, spec_9800086.precision, 0)) : value_9800087.length = rune_offset_1825244(value_9800087, spec_9800086.precision, 0));
    }
    
    }
    
    if (result_9800083[result_9800083_Idx] != null) { result_9800083[result_9800083_Idx] = (result_9800083[result_9800083_Idx]).concat(align_string_9755222(value_9800087, spec_9800086.minimumWidth, spec_9800086.align, spec_9800086.fill)); } else { result_9800083[result_9800083_Idx] = align_string_9755222(value_9800087, spec_9800086.minimumWidth, spec_9800086.align, spec_9800086.fill).slice(); };

  
}
function nsuformatBiggestFloat(f_9585221, format_9585222, precision_9585227, decimal_sep_9585228) {
  var result_9585229 = null;

    var precision_9585401 = precision_9585227;
    if ((precision_9585401 == -1)) {
    precision_9585401 = 6;
    }
    
    var res_9585402 = null;
    switch (format_9585222) {
    case 0:
      res_9585402 = f_9585221.toString();
      break;
    case 1:
      res_9585402 = f_9585221.toFixed(precision_9585401);
      break;
    case 2:
      res_9585402 = f_9585221.toExponential(precision_9585401);
      break;
    }
    result_9585229 = nimCopy(null, cstrToNimstr(res_9585402), NTI112);
    if (((1.0000000000000000e+000 / f_9585221) == -Infinity)) {
    result_9585229 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_9585402) || []), NTI112);
    }
    
    L1: do {
      var i_9585410 = 0;
      var colontmp__12197230 = 0;
      colontmp__12197230 = (result_9585229 != null ? result_9585229.length : 0);
      var i_12197231 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12197231 < colontmp__12197230)) break L3;
            i_9585410 = i_12197231;
            if ((ConstSet9[result_9585229[i_9585410]] != undefined)) {
            result_9585229[i_9585410] = decimal_sep_9585228;
            }
            
            i_12197231 += 1;
          }
      } while(false);
    } while(false);

  return result_9585229;

}
function insert_335401(x_335404, x_335404_Idx, item_335405, i_335406) {
    var xl_335407 = (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0);
    (x_335404[x_335404_Idx] == null ? x_335404[x_335404_Idx] = mnewString((xl_335407 + (item_335405 != null ? item_335405.length : 0))) : x_335404[x_335404_Idx].length = (xl_335407 + (item_335405 != null ? item_335405.length : 0)));
    var j_335408 = (xl_335407 - 1);
    L1: do {
        L2: while (true) {
        if (!(i_335406 <= j_335408)) break L2;
          x_335404[x_335404_Idx][(j_335408 + (item_335405 != null ? item_335405.length : 0))] = x_335404[x_335404_Idx][j_335408];
          j_335408 -= 1;
        }
    } while(false);
    j_335408 = 0;
    L3: do {
        L4: while (true) {
        if (!(j_335408 < (item_335405 != null ? item_335405.length : 0))) break L4;
          x_335404[x_335404_Idx][(j_335408 + i_335406)] = item_335405[j_335408];
          j_335408 += 1;
        }
    } while(false);

  
}
function nsuToUpperAsciiChar(c_8815016) {
  var result_8815017 = 0;

    if ((ConstSet11[c_8815016] != undefined)) {
    result_8815017 = (c_8815016 - 32);
    }
    else {
      result_8815017 = c_8815016;
    }
    

  return result_8815017;

}
function nsuToUpperAsciiStr(s_8820037) {
  var result_8820038 = null;

    result_8820038 = nimCopy(null, mnewString((s_8820037 != null ? s_8820037.length : 0)), NTI112);
    L1: do {
      var iHEX60gensym8820039_8825009 = 0;
      var colontmp__12197236 = 0;
      colontmp__12197236 = ((s_8820037 != null ? s_8820037.length : 0) - 1);
      var res_12197237 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197237 <= colontmp__12197236)) break L3;
            iHEX60gensym8820039_8825009 = res_12197237;
            result_8820038[iHEX60gensym8820039_8825009] = nsuToUpperAsciiChar(s_8820037[iHEX60gensym8820039_8825009]);
            res_12197237 += 1;
          }
      } while(false);
    } while(false);

  return result_8820038;

}
function format_value_11445001(result_11445004, result_11445004_Idx, value_11445005, specifier_11445006) {
    var Tmp1;

  BeforeRet: do {
    if (((specifier_11445006 != null ? specifier_11445006.length : 0) == 0)) {
    if (result_11445004[result_11445004_Idx] != null) { result_11445004[result_11445004_Idx] = (result_11445004[result_11445004_Idx]).concat(cstrToNimstr((value_11445005)+"")); } else { result_11445004[result_11445004_Idx] = cstrToNimstr((value_11445005)+"").slice(); };
    break BeforeRet;
    }
    
    var spec_11445007 = parse_standard_format_specifier_9755322(specifier_11445006, 0, false);
    var fmode_11445008 = 0;
    switch (spec_11445007.typ) {
    case 101:
    case 69:
      fmode_11445008 = 2;
      break;
    case 102:
    case 70:
      fmode_11445008 = 1;
      break;
    case 103:
    case 71:
      fmode_11445008 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_11445007.typ]), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    var f_11450002 = [nsuformatBiggestFloat(value_11445005, fmode_11445008, spec_11445007.precision, 46)];
    var sign_11450003 = false;
    if ((0.0 <= value_11445005)) {
    if (!((spec_11445007.sign == 45))) {
    sign_11450003 = true;
    if ((value_11445005 == 0.0)) {
    if (((1.0000000000000000e+000 / value_11445005) == Infinity)) {
    insert_335401(f_11450002, 0, nimCharToStr(spec_11445007.sign), 0);
    }
    
    }
    else {
    insert_335401(f_11450002, 0, nimCharToStr(spec_11445007.sign), 0);
    }
    
    }
    
    }
    else {
      sign_11450003 = true;
    }
    
    if (spec_11445007.padWithZero) {
    var sign_str_11450006 = [];
    if (sign_11450003) {
    sign_str_11450006 = nimCopy(null, nimCharToStr(f_11450002[0][0]), NTI112);
    f_11450002[0] = nimCopy(null, HEX5BHEX5D_4530068(f_11450002[0], HEX2EHEX2E_4530001(1, 1)), NTI112);
    }
    
    var to_fill_11460040 = ((spec_11445007.minimumWidth - (f_11450002[0] != null ? f_11450002[0].length : 0)) - (sign_11450003 ? 1:0));
    if ((0 < to_fill_11460040)) {
    f_11450002[0] = nimCopy(null, (nsuRepeatChar(48, to_fill_11460040) || []).concat(f_11450002[0] || []), NTI112);
    }
    
    if (sign_11450003) {
    f_11450002[0] = nimCopy(null, (sign_str_11450006 || []).concat(f_11450002[0] || []), NTI112);
    }
    
    }
    
    if ((spec_11445007.align == 0)) {
    Tmp1 = 62;
    }
    else {
    Tmp1 = spec_11445007.align;
    }
    
    var align_11460041 = Tmp1;
    var res_11460042 = align_string_9755222(f_11450002[0], spec_11445007.minimumWidth, align_11460041, spec_11445007.fill);
    if ((ConstSet10[spec_11445007.typ] != undefined)) {
    if (result_11445004[result_11445004_Idx] != null) { result_11445004[result_11445004_Idx] = (result_11445004[result_11445004_Idx]).concat(nsuToUpperAsciiStr(res_11460042)); } else { result_11445004[result_11445004_Idx] = nsuToUpperAsciiStr(res_11460042).slice(); };
    }
    else {
    if (result_11445004[result_11445004_Idx] != null) { result_11445004[result_11445004_Idx] = (result_11445004[result_11445004_Idx]).concat(res_11460042); } else { result_11445004[result_11445004_Idx] = res_11460042.slice(); };
    }
    
  } while (false);

  
}
function mean_11515014(d_11515016) {
    var Tmp1;

  var result_11515017 = 0.0;

  BeforeRet: do {
    if ((1 < d_11515016.dof)) {
    Tmp1 = 0.0;
    }
    else {
    Tmp1 = NaN;
    }
    
    result_11515017 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_11515017;

}
function mean_11740051(d_11740055) {
  var result_11740056 = 0.0;

    result_11740056 = ((mean_11515014(d_11740055.distribution) * d_11740055.scale) + d_11740055.location);

  return result_11740056;

}
function estimate_11740037(d_11740041) {
  var result_11740042 = 0.0;

    result_11740042 = mean_11740051(d_11740041.distribution);

  return result_11740042;

}
function standard_deviation_11740131(sd_11740135) {
  var result_11740136 = 0.0;

    result_11740136 = sd_11740135.distribution.scale;

  return result_11740136;

}
function betacf_11330014(x_11330016, a_11330017, b_11330018) {
  var result_11330019 = 0.0;

  BeforeRet: do {
    var qab_11330021 = (a_11330017 + b_11330018);
    var qap_11330022 = (a_11330017 + 1.0000000000000000e+000);
    var qam_11330023 = (a_11330017 - 1.0000000000000000e+000);
    var c_11330024 = 1.0000000000000000e+000;
    var d_11330025 = (1.0000000000000000e+000 - ((qab_11330021 * x_11330016) / qap_11330022));
    var m2_11330026 = 0.0;
    var aa_11330027 = 0.0;
    var del_11330028 = 0.0;
    var h_11330029 = [0.0];
    if ((abs_75247(d_11330025) < 1.0000000000000001e-030)) {
    d_11330025 = 1.0000000000000001e-030;
    }
    
    d_11330025 = (1.0000000000000000e+000 / d_11330025);
    h_11330029[0] = d_11330025;
    L1: do {
      var m_11330040 = 0;
      var res_12197249 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_12197249 <= 100)) break L3;
            m_11330040 = res_12197249;
            m2_11330026 = (2.0000000000000000e+000 * to_float_26459(m_11330040));
            aa_11330027 = (((to_float_26459(m_11330040) * (b_11330018 - to_float_26459(m_11330040))) * x_11330016) / ((qam_11330023 + m2_11330026) * (a_11330017 + m2_11330026)));
            d_11330025 = (1.0000000000000000e+000 + (aa_11330027 * d_11330025));
            if ((abs_75247(d_11330025) < 1.0000000000000001e-030)) {
            d_11330025 = 1.0000000000000001e-030;
            }
            
            c_11330024 = (1.0000000000000000e+000 + (aa_11330027 / c_11330024));
            if ((abs_75247(c_11330024) < 1.0000000000000001e-030)) {
            c_11330024 = 1.0000000000000001e-030;
            }
            
            d_11330025 = (1.0000000000000000e+000 / d_11330025);
            HEX2AHEX3D_9620001(h_11330029, 0, (d_11330025 * c_11330024));
            aa_11330027 = (((-((a_11330017 + to_float_26459(m_11330040))) * (qab_11330021 + to_float_26459(m_11330040))) * x_11330016) / ((a_11330017 + m2_11330026) * (qap_11330022 + m2_11330026)));
            d_11330025 = (1.0000000000000000e+000 + (aa_11330027 * d_11330025));
            if ((abs_75247(d_11330025) < 1.0000000000000001e-030)) {
            d_11330025 = 1.0000000000000001e-030;
            }
            
            c_11330024 = (1.0000000000000000e+000 + (aa_11330027 / c_11330024));
            if ((abs_75247(c_11330024) < 1.0000000000000001e-030)) {
            c_11330024 = 1.0000000000000001e-030;
            }
            
            d_11330025 = (1.0000000000000000e+000 / d_11330025);
            del_11330028 = (d_11330025 * c_11330024);
            HEX2AHEX3D_9620001(h_11330029, 0, del_11330028);
            if ((abs_75247((del_11330028 - 1.0000000000000000e+000)) < 2.9999999999999999e-007)) {
            break L1;
            }
            
            res_12197249 += 1;
          }
      } while(false);
    } while(false);
    result_11330019 = h_11330029[0];
    break BeforeRet;
  } while (false);

  return result_11330019;

}
function ibeta_11355035(x_11355037, a_11355038, b_11355039) {
    var Tmp1;
      var Tmp2;

  var result_11355040 = 0.0;

  BeforeRet: do {
    if (((x_11355037 == 0.0) || (x_11355037 == 1.0000000000000000e+000))) {
    Tmp1 = 0.0;
    }
    else {
    Tmp1 = Math.exp(((((gammaln_11306072((a_11355038 + b_11355039)) - gammaln_11306072(a_11355038)) - gammaln_11306072(b_11355039)) + (a_11355038 * Math.log(x_11355037))) + (b_11355039 * Math.log((1.0000000000000000e+000 - x_11355037)))));
    }
    
    var bt_11355041 = Tmp1;
      if ((x_11355037 < 0.0)) Tmp2 = true; else {        Tmp2 = (1.0000000000000000e+000 < x_11355037);      }    if (Tmp2) {
    result_11355040 = NaN;
    break BeforeRet;
    }
    
    if ((x_11355037 < ((a_11355038 + 1.0000000000000000e+000) / ((a_11355038 + b_11355039) + 2.0000000000000000e+000)))) {
    result_11355040 = ((bt_11355041 * betacf_11330014(x_11355037, a_11355038, b_11355039)) / a_11355038);
    break BeforeRet;
    }
    
    result_11355040 = (1.0000000000000000e+000 - ((bt_11355041 * betacf_11330014((1.0000000000000000e+000 - x_11355037), b_11355039, a_11355038)) / b_11355039));
    break BeforeRet;
  } while (false);

  return result_11355040;

}
function ibetainv_11360014(p_11360016, a_11360017, b_11360018) {
      var Tmp1;
    var Tmp2;
              var Tmp6;

  var result_11360019 = 0.0;

  BeforeRet: do {
    var a1_11360021 = (a_11360017 - 1.0000000000000000e+000);
    var b1_11360022 = (b_11360018 - 1.0000000000000000e+000);
    var lna_11360023 = 0.0;
    var lnb_11360024 = 0.0;
    var pp_11360025 = 0.0;
    var t_11360026 = 0.0;
    var u_11360027 = 0.0;
    var err_11360028 = 0.0;
    var x_11360029 = [0.0];
    var al_11360030 = 0.0;
    var h_11360031 = 0.0;
    var w_11360032 = 0.0;
    var afac_11360033 = 0.0;
    if ((p_11360016 <= 0.0)) {
    result_11360019 = 0.0;
    break BeforeRet;
    }
    
    if ((1.0000000000000000e+000 <= p_11360016)) {
    result_11360019 = 1.0000000000000000e+001;
    break BeforeRet;
    }
    
      if (!(1.0000000000000000e+000 <= a_11360017)) Tmp1 = false; else {        Tmp1 = (1.0000000000000000e+000 <= b_11360018);      }    if (Tmp1) {
    if ((p_11360016 < 5.0000000000000000e-001)) {
    Tmp2 = p_11360016;
    }
    else {
    Tmp2 = (1.0000000000000000e+000 - p_11360016);
    }
    
    pp_11360025 = Tmp2;
    t_11360026 = Math.sqrt((-2.0000000000000000e+000 * Math.log(pp_11360025)));
    x_11360029[0] = (((2.3075299999999999e+000 + (t_11360026 * 2.7061000000000002e-001)) / (1.0000000000000000e+000 + (t_11360026 * (9.9229000000000001e-001 + (t_11360026 * 4.4810000000000003e-002))))) - t_11360026);
    if ((p_11360016 < 5.0000000000000000e-001)) {
    x_11360029[0] = -(x_11360029[0]);
    }
    
    al_11360030 = (((x_11360029[0] * x_11360029[0]) - 3.0000000000000000e+000) / 6.0000000000000000e+000);
    h_11360031 = (2.0000000000000000e+000 / ((1.0000000000000000e+000 / ((2.0000000000000000e+000 * a_11360017) - 1.0000000000000000e+000)) + (1.0000000000000000e+000 / ((2.0000000000000000e+000 * b_11360018) - 1.0000000000000000e+000))));
    w_11360032 = (((x_11360029[0] * Math.sqrt((al_11360030 + h_11360031))) / h_11360031) - (((1.0000000000000000e+000 / ((2.0000000000000000e+000 * b_11360018) - 1.0000000000000000e+000)) - (1.0000000000000000e+000 / ((2.0000000000000000e+000 * a_11360017) - 1.0000000000000000e+000))) * ((al_11360030 + 8.3333333333333337e-001) - (2.0000000000000000e+000 / (3.0000000000000000e+000 * h_11360031)))));
    x_11360029[0] = (a_11360017 / (a_11360017 + (b_11360018 * Math.exp((2.0000000000000000e+000 * w_11360032)))));
    }
    else {
      lna_11360023 = Math.log((a_11360017 / (a_11360017 + b_11360018)));
      lnb_11360024 = Math.log((b_11360018 / (a_11360017 + b_11360018)));
      t_11360026 = (Math.exp((a_11360017 * lna_11360023)) / a_11360017);
      u_11360027 = (Math.exp((b_11360018 * lnb_11360024)) / b_11360018);
      w_11360032 = (t_11360026 + u_11360027);
      if ((p_11360016 < (t_11360026 / w_11360032))) {
      x_11360029[0] = Math.pow(((a_11360017 * w_11360032) * p_11360016), (1.0000000000000000e+000 / a_11360017));
      }
      else {
        x_11360029[0] = (1.0000000000000000e+000 - Math.pow(((b_11360018 * w_11360032) * (1.0000000000000000e+000 - p_11360016)), (1.0000000000000000e+000 / b_11360018)));
      }
      
    }
    
    afac_11360033 = ((-(gammaln_11306072(a_11360017)) - gammaln_11306072(b_11360018)) + gammaln_11306072((a_11360017 + b_11360018)));
    L3: do {
      var j_11375010 = 0;
      var res_12197243 = 0;
      L4: do {
          L5: while (true) {
          if (!(res_12197243 <= 9)) break L5;
            j_11375010 = res_12197243;
            if (((x_11360029[0] == 0.0) || (x_11360029[0] == 1.0000000000000000e+000))) {
            result_11360019 = x_11360029[0];
            break BeforeRet;
            }
            
            err_11360028 = (ibeta_11355035(x_11360029[0], a_11360017, b_11360018) - p_11360016);
            t_11360026 = Math.exp((((a1_11360021 * Math.log(x_11360029[0])) + (b1_11360022 * Math.log((1.0000000000000000e+000 - x_11360029[0])))) + afac_11360033));
            u_11360027 = (err_11360028 / t_11360026);
            t_11360026 = (u_11360027 / (1.0000000000000000e+000 - (5.0000000000000000e-001 * min_80014(1.0000000000000000e+000, (u_11360027 * ((a1_11360021 / x_11360029[0]) - (b1_11360022 / (1.0000000000000000e+000 - x_11360029[0]))))))));
            HEX2DHEX3D_10345020(x_11360029, 0, t_11360026);
            if ((x_11360029[0] <= 0.0)) {
            x_11360029[0] = (5.0000000000000000e-001 * (x_11360029[0] + t_11360026));
            }
            
            if ((1.0000000000000000e+000 <= x_11360029[0])) {
            x_11360029[0] = (5.0000000000000000e-001 * ((x_11360029[0] + t_11360026) + 1.0000000000000000e+000));
            }
            
              if (!(abs_75247(t_11360026) < (1.0000000000000000e-008 * x_11360029[0]))) Tmp6 = false; else {                Tmp6 = (0 < j_11375010);              }            if (Tmp6) {
            break L3;
            }
            
            res_12197243 += 1;
          }
      } while(false);
    } while(false);
    result_11360019 = x_11360029[0];
    break BeforeRet;
  } while (false);

  return result_11360019;

}
function inv_11510034(d_11510036, p_11510037) {
    var Tmp1;

  var result_11510038 = 0.0;

  BeforeRet: do {
    var x_11510039 = ibetainv_11360014((2.0000000000000000e+000 * min_80014(p_11510037, (1.0000000000000000e+000 - p_11510037))), (5.0000000000000000e-001 * to_float_26459(d_11510036.dof)), 5.0000000000000000e-001);
    x_11510039 = Math.sqrt(((to_float_26459(d_11510036.dof) * (1.0000000000000000e+000 - x_11510039)) / x_11510039));
    if ((5.0000000000000000e-001 < p_11510037)) {
    Tmp1 = x_11510039;
    }
    else {
    Tmp1 = -(x_11510039);
    }
    
    result_11510038 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_11510038;

}
function inv_11740207(d_11740211, p_11740212) {
  var result_11740213 = 0.0;

    result_11740213 = ((inv_11510034(d_11740211.distribution, p_11740212) * d_11740211.scale) + d_11740211.location);

  return result_11740213;

}
function confidence_interval_11740191(sd_11740195, alpha_11740196) {
  var result_11740197 = null;

    result_11740197 = nimCopy(null, [inv_11740207(sd_11740195.distribution, (5.0000000000000000e-001 * alpha_11740196)), inv_11740207(sd_11740195.distribution, (1.0000000000000000e+000 - (5.0000000000000000e-001 * alpha_11740196)))], NTI11626481);

  return result_11740197;

}
function test_score_11740346(d_11740350) {
  var result_11740351 = 0.0;

    result_11740351 = (d_11740350.distribution.location / d_11740350.distribution.scale);

  return result_11740351;

}
function cdf_11510015(d_11510017, x_11510018) {
  var result_11510019 = 0.0;

  BeforeRet: do {
    var dof2_11510020 = (to_float_26459(d_11510017.dof) * 5.0000000000000000e-001);
    result_11510019 = ibeta_11355035(((x_11510018 + Math.sqrt(((x_11510018 * x_11510018) + to_float_26459(d_11510017.dof)))) / (2.0000000000000000e+000 * Math.sqrt(((x_11510018 * x_11510018) + to_float_26459(d_11510017.dof))))), dof2_11510020, dof2_11510020);
    break BeforeRet;
  } while (false);

  return result_11510019;

}
function cdf_11740470(d_11740474, x_11740475) {
  var result_11740476 = 0.0;

    result_11740476 = cdf_11510015(d_11740474.distribution, ((x_11740475 - d_11740474.location) / d_11740474.scale));

  return result_11740476;

}
function p_value_11740450(sd_11740454) {
    var Tmp1;
      var Tmp2;

  var result_11740455 = 0.0;

  BeforeRet: do {
    if ((sd_11740454.test_type == 0)) {
    result_11740455 = ((1.0000000000000000e+000 - cdf_11740470(sd_11740454.distribution, abs_75247(sd_11740454.test_score))) + cdf_11740470(sd_11740454.distribution, -(abs_75247(sd_11740454.test_score))));
    break BeforeRet;
    }
    
    if ((sd_11740454.test_type == 3)) {
    result_11740455 = cdf_11740470(sd_11740454.distribution, sd_11740454.test_score);
    break BeforeRet;
    }
    
    if ((sd_11740454.test_type == 2)) {
    result_11740455 = (1.0000000000000000e+000 - cdf_11740470(sd_11740454.distribution, sd_11740454.test_score));
    break BeforeRet;
    }
    
    var p1_11740558 = (1.0000000000000000e+000 - cdf_11740470(sd_11740454.distribution, sd_11740454.test_score));
    var p2_11740573 = cdf_11740470(sd_11740454.distribution, sd_11740454.test_score);
      if (!(p1_11740558 < p2_11740573)) Tmp2 = false; else {        Tmp2 = (0.0 <= p1_11740558);      }    if (Tmp2) {
    Tmp1 = p1_11740558;
    }
    else {
    Tmp1 = p2_11740573;
    }
    
    result_11740455 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_11740455;

}
function p_value_11740408(d_11740412) {
  var result_11740413 = 0.0;

    result_11740413 = p_value_11740450(d_11740412.hypothesis_test);

  return result_11740413;

}
function estimate_as_string_11730045(estimator_11730049, title_11730050, name_11730051) {
    var Tmp1;
    var Tmp2;

  var result_11730052 = null;

    if (title_11730050) {
    var fmt_res_11730053 = mnewString(0);
    if (fmt_res_11730053 != null) { fmt_res_11730053 = (fmt_res_11730053).concat(makeNimstrLit("| Estimate| Std. dev.| Confidence int. 95%|   t-value|   p-value| \x0A")); } else { fmt_res_11730053 = makeNimstrLit("| Estimate| Std. dev.| Confidence int. 95%|   t-value|   p-value| \x0A"); };
    if (result_11730052 != null) { result_11730052 = (result_11730052).concat((nsuRepeatStr(makeNimstrLit(" "), ((name_11730051 != null ? name_11730051.length : 0) + 1)) || []).concat(fmt_res_11730053 || [])); } else { result_11730052 = (nsuRepeatStr(makeNimstrLit(" "), ((name_11730051 != null ? name_11730051.length : 0) + 1)) || []).concat(fmt_res_11730053 || []).slice(); };
    }
    
    var fmt_res_11735002 = [mnewString(0)];
    if (fmt_res_11735002[0] != null) { fmt_res_11735002[0] = (fmt_res_11735002[0]).concat(makeNimstrLit(" ")); } else { fmt_res_11735002[0] = makeNimstrLit(" "); };
    format_value_9800080(fmt_res_11735002, 0, name_11730051, []);
    if (fmt_res_11735002[0] != null) { fmt_res_11735002[0] = (fmt_res_11735002[0]).concat(makeNimstrLit("|")); } else { fmt_res_11735002[0] = makeNimstrLit("|"); };
    format_value_11445001(fmt_res_11735002, 0, estimate_11740037(estimator_11730049), makeNimstrLit(">9.5f"));
    if (fmt_res_11735002[0] != null) { fmt_res_11735002[0] = (fmt_res_11735002[0]).concat(makeNimstrLit("| ")); } else { fmt_res_11735002[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_11735002, 0, standard_deviation_11740131(estimator_11730049), makeNimstrLit(">9.5f"));
    if (fmt_res_11735002[0] != null) { fmt_res_11735002[0] = (fmt_res_11735002[0]).concat(makeNimstrLit("| ")); } else { fmt_res_11735002[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_11735002, 0, (Tmp1 = confidence_interval_11740191(estimator_11730049, 5.0000000000000003e-002), Tmp1)[0], makeNimstrLit(">9.5f"));
    if (fmt_res_11735002[0] != null) { fmt_res_11735002[0] = (fmt_res_11735002[0]).concat(makeNimstrLit(" ")); } else { fmt_res_11735002[0] = makeNimstrLit(" "); };
    format_value_11445001(fmt_res_11735002, 0, (Tmp2 = confidence_interval_11740191(estimator_11730049, 5.0000000000000003e-002), Tmp2)[1], makeNimstrLit(">9.5f"));
    if (fmt_res_11735002[0] != null) { fmt_res_11735002[0] = (fmt_res_11735002[0]).concat(makeNimstrLit("| ")); } else { fmt_res_11735002[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_11735002, 0, test_score_11740346(estimator_11730049), makeNimstrLit(">9.5f"));
    if (fmt_res_11735002[0] != null) { fmt_res_11735002[0] = (fmt_res_11735002[0]).concat(makeNimstrLit("| ")); } else { fmt_res_11735002[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_11735002, 0, p_value_11740408(estimator_11730049), makeNimstrLit(">9.5e"));
    if (fmt_res_11735002[0] != null) { fmt_res_11735002[0] = (fmt_res_11735002[0]).concat(makeNimstrLit("|")); } else { fmt_res_11735002[0] = makeNimstrLit("|"); };
    if (result_11730052 != null) { result_11730052 = (result_11730052).concat(fmt_res_11735002[0]); } else { result_11730052 = fmt_res_11735002[0].slice(); };

  return result_11730052;

}
function standard_deviation_11765130(sd_11765134) {
  var result_11765135 = 0.0;

    result_11765135 = sd_11765134.distribution.scale;

  return result_11765135;

}
function inv_11550065(d_11550067, p_11550068) {
  var result_11550069 = 0.0;

  BeforeRet: do {
    result_11550069 = (d_11550067.scale / gammapinv_11330068((1.0000000000000000e+000 - p_11550068), d_11550067.shape));
    break BeforeRet;
  } while (false);

  return result_11550069;

}
function inv_11565082(d_11565084, p_11565085) {
  var result_11565086 = 0.0;

    result_11565086 = inv_11550065(as_inv_gamma_11565029(d_11565084), p_11565085);

  return result_11565086;

}
function inv_11765206(d_11765210, p_11765211) {
  var result_11765212 = 0.0;

    result_11765212 = ((inv_11565082(d_11765210.distribution, p_11765211) * d_11765210.scale) + d_11765210.location);

  return result_11765212;

}
function confidence_interval_11765190(sd_11765194, alpha_11765195) {
  var result_11765196 = null;

    result_11765196 = nimCopy(null, [inv_11765206(sd_11765194.distribution, (5.0000000000000000e-001 * alpha_11765195)), inv_11765206(sd_11765194.distribution, (1.0000000000000000e+000 - (5.0000000000000000e-001 * alpha_11765195)))], NTI11626481);

  return result_11765196;

}
function test_score_11765345(d_11765349) {
  var result_11765350 = 0.0;

    result_11765350 = (d_11765349.distribution.location / d_11765349.distribution.scale);

  return result_11765350;

}
function cdf_11550047(d_11550049, x_11550050) {
  var result_11550051 = 0.0;

  BeforeRet: do {
    if ((x_11550050 < 0.0)) {
    result_11550051 = 0.0;
    break BeforeRet;
    }
    
    result_11550051 = (1.0000000000000000e+000 - low_reg_gamma_11310067(d_11550049.shape, (d_11550049.scale / x_11550050)));
    break BeforeRet;
  } while (false);

  return result_11550051;

}
function cdf_11565064(d_11565066, x_11565067) {
  var result_11565068 = 0.0;

    result_11565068 = cdf_11550047(as_inv_gamma_11565029(d_11565066), x_11565067);

  return result_11565068;

}
function cdf_11765469(d_11765473, x_11765474) {
  var result_11765475 = 0.0;

    result_11765475 = cdf_11565064(d_11765473.distribution, ((x_11765474 - d_11765473.location) / d_11765473.scale));

  return result_11765475;

}
function p_value_11765449(sd_11765453) {
    var Tmp1;
      var Tmp2;

  var result_11765454 = 0.0;

  BeforeRet: do {
    if ((sd_11765453.test_type == 0)) {
    result_11765454 = ((1.0000000000000000e+000 - cdf_11765469(sd_11765453.distribution, abs_75247(sd_11765453.test_score))) + cdf_11765469(sd_11765453.distribution, -(abs_75247(sd_11765453.test_score))));
    break BeforeRet;
    }
    
    if ((sd_11765453.test_type == 3)) {
    result_11765454 = cdf_11765469(sd_11765453.distribution, sd_11765453.test_score);
    break BeforeRet;
    }
    
    if ((sd_11765453.test_type == 2)) {
    result_11765454 = (1.0000000000000000e+000 - cdf_11765469(sd_11765453.distribution, sd_11765453.test_score));
    break BeforeRet;
    }
    
    var p1_11765557 = (1.0000000000000000e+000 - cdf_11765469(sd_11765453.distribution, sd_11765453.test_score));
    var p2_11765572 = cdf_11765469(sd_11765453.distribution, sd_11765453.test_score);
      if (!(p1_11765557 < p2_11765572)) Tmp2 = false; else {        Tmp2 = (0.0 <= p1_11765557);      }    if (Tmp2) {
    Tmp1 = p1_11765557;
    }
    else {
    Tmp1 = p2_11765572;
    }
    
    result_11765454 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_11765454;

}
function p_value_11765407(d_11765411) {
  var result_11765412 = 0.0;

    result_11765412 = p_value_11765449(d_11765411.hypothesis_test);

  return result_11765412;

}
function estimate_as_string_11996309(estimator_11996313, title_11996314, name_11996315) {
    var Tmp1;
    var Tmp2;

  var result_11996316 = null;

    if (title_11996314) {
    var fmt_res_11996317 = mnewString(0);
    if (fmt_res_11996317 != null) { fmt_res_11996317 = (fmt_res_11996317).concat(makeNimstrLit("| Estimate| Std. dev.| Confidence int. 95%|   t-value|   p-value| \x0A")); } else { fmt_res_11996317 = makeNimstrLit("| Estimate| Std. dev.| Confidence int. 95%|   t-value|   p-value| \x0A"); };
    if (result_11996316 != null) { result_11996316 = (result_11996316).concat((nsuRepeatStr(makeNimstrLit(" "), ((name_11996315 != null ? name_11996315.length : 0) + 1)) || []).concat(fmt_res_11996317 || [])); } else { result_11996316 = (nsuRepeatStr(makeNimstrLit(" "), ((name_11996315 != null ? name_11996315.length : 0) + 1)) || []).concat(fmt_res_11996317 || []).slice(); };
    }
    
    var fmt_res_12000002 = [mnewString(0)];
    if (fmt_res_12000002[0] != null) { fmt_res_12000002[0] = (fmt_res_12000002[0]).concat(makeNimstrLit(" ")); } else { fmt_res_12000002[0] = makeNimstrLit(" "); };
    format_value_9800080(fmt_res_12000002, 0, name_11996315, []);
    if (fmt_res_12000002[0] != null) { fmt_res_12000002[0] = (fmt_res_12000002[0]).concat(makeNimstrLit("|")); } else { fmt_res_12000002[0] = makeNimstrLit("|"); };
    format_value_11445001(fmt_res_12000002, 0, estimate_11765036(estimator_11996313), makeNimstrLit(">9.5f"));
    if (fmt_res_12000002[0] != null) { fmt_res_12000002[0] = (fmt_res_12000002[0]).concat(makeNimstrLit("| ")); } else { fmt_res_12000002[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_12000002, 0, standard_deviation_11765130(estimator_11996313), makeNimstrLit(">9.5f"));
    if (fmt_res_12000002[0] != null) { fmt_res_12000002[0] = (fmt_res_12000002[0]).concat(makeNimstrLit("| ")); } else { fmt_res_12000002[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_12000002, 0, (Tmp1 = confidence_interval_11765190(estimator_11996313, 5.0000000000000003e-002), Tmp1)[0], makeNimstrLit(">9.5f"));
    if (fmt_res_12000002[0] != null) { fmt_res_12000002[0] = (fmt_res_12000002[0]).concat(makeNimstrLit(" ")); } else { fmt_res_12000002[0] = makeNimstrLit(" "); };
    format_value_11445001(fmt_res_12000002, 0, (Tmp2 = confidence_interval_11765190(estimator_11996313, 5.0000000000000003e-002), Tmp2)[1], makeNimstrLit(">9.5f"));
    if (fmt_res_12000002[0] != null) { fmt_res_12000002[0] = (fmt_res_12000002[0]).concat(makeNimstrLit("| ")); } else { fmt_res_12000002[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_12000002, 0, test_score_11765345(estimator_11996313), makeNimstrLit(">9.5f"));
    if (fmt_res_12000002[0] != null) { fmt_res_12000002[0] = (fmt_res_12000002[0]).concat(makeNimstrLit("| ")); } else { fmt_res_12000002[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_12000002, 0, p_value_11765407(estimator_11996313), makeNimstrLit(">9.5e"));
    if (fmt_res_12000002[0] != null) { fmt_res_12000002[0] = (fmt_res_12000002[0]).concat(makeNimstrLit("|")); } else { fmt_res_12000002[0] = makeNimstrLit("|"); };
    if (result_11996316 != null) { result_11996316 = (result_11996316).concat(fmt_res_12000002[0]); } else { result_11996316 = fmt_res_12000002[0].slice(); };

  return result_11996316;

}
function nsuFindChar(s_9445216, sub_9445217, start_9445218, last_9445219) {
    var Tmp1;

  var result_9445221 = 0;

  BeforeRet: do {
    if ((last_9445219 == 0)) {
    Tmp1 = (s_9445216 != null ? (s_9445216.length-1) : -1);
    }
    else {
    Tmp1 = last_9445219;
    }
    
    var last_9445223 = Tmp1;
    L2: do {
      var i_9445606 = 0;
      var colontmp__12197267 = 0;
      colontmp__12197267 = start_9445218;
      var res_12197268 = colontmp__12197267;
      L3: do {
          L4: while (true) {
          if (!(res_12197268 <= last_9445223)) break L4;
            i_9445606 = res_12197268;
            if ((sub_9445217 == s_9445216[i_9445606])) {
            result_9445221 = i_9445606;
            break BeforeRet;
            }
            
            res_12197268 += 1;
          }
      } while(false);
    } while(false);
    result_9445221 = -1;
    break BeforeRet;
  } while (false);

  return result_9445221;

}
function substr_341022(s_341024, first_341025, last_341026) {
  var result_341027 = null;

    var first_341028 = nimMax(first_341025, 0);
    var l_341030 = nimMax(((nimMin(last_341026, (s_341024 != null ? (s_341024.length-1) : -1)) - first_341028) + 1), 0);
    result_341027 = nimCopy(null, mnewString(l_341030), NTI112);
    L1: do {
      var i_341039 = 0;
      var colontmp__12197274 = 0;
      colontmp__12197274 = (l_341030 - 1);
      var res_12197275 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197275 <= colontmp__12197274)) break L3;
            i_341039 = res_12197275;
            result_341027[i_341039] = s_341024[(i_341039 + first_341028)];
            res_12197275 += 1;
          }
      } while(false);
    } while(false);

  return result_341027;

}
function substr_341053(s_341055, first_341056) {
  var result_341058 = null;

    result_341058 = nimCopy(null, substr_341022(s_341055, first_341056, (s_341055 != null ? (s_341055.length-1) : -1)), NTI112);

  return result_341058;

}
function nsuInitSkipTable(a_9440081, sub_9440082) {
    var m_9440083 = (sub_9440082 != null ? sub_9440082.length : 0);
    var i_9440085 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_9440085 <= 248)) break L2;
          a_9440081[(i_9440085 + 0)] = m_9440083;
          a_9440081[(i_9440085 + 1)] = m_9440083;
          a_9440081[(i_9440085 + 2)] = m_9440083;
          a_9440081[(i_9440085 + 3)] = m_9440083;
          a_9440081[(i_9440085 + 4)] = m_9440083;
          a_9440081[(i_9440085 + 5)] = m_9440083;
          a_9440081[(i_9440085 + 6)] = m_9440083;
          a_9440081[(i_9440085 + 7)] = m_9440083;
          i_9440085 += 8;
        }
    } while(false);
    L3: do {
      var i_9440101 = 0;
      var colontmp__12197282 = 0;
      colontmp__12197282 = (m_9440083 - 1);
      var i_12197283 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_12197283 < colontmp__12197282)) break L5;
            i_9440101 = i_12197283;
            a_9440081[sub_9440082[i_9440101]] = ((m_9440083 - 1) - i_9440101);
            i_12197283 += 1;
          }
      } while(false);
    } while(false);

  
}
function nsuFindStrA(a_9440117, s_9440118, sub_9440119, start_9440120, last_9440121) {
    var Tmp1;

  var result_9440123 = 0;

  BeforeRet: do {
    if ((last_9440121 == 0)) {
    Tmp1 = (s_9440118 != null ? (s_9440118.length-1) : -1);
    }
    else {
    Tmp1 = last_9440121;
    }
    
    var last_9440125 = Tmp1;
    var sub_last_9440126 = ((sub_9440119 != null ? sub_9440119.length : 0) - 1);
    if ((sub_last_9440126 == -1)) {
    result_9440123 = start_9440120;
    break BeforeRet;
    }
    
    var skip_9440127 = start_9440120;
    L2: do {
        L3: while (true) {
        if (!(sub_last_9440126 <= (last_9440125 - skip_9440127))) break L3;
          var i_9445001 = sub_last_9440126;
          L4: do {
              L5: while (true) {
              if (!(s_9440118[(skip_9440127 + i_9445001)] == sub_9440119[i_9445001])) break L5;
                if ((i_9445001 == 0)) {
                result_9440123 = skip_9440127;
                break BeforeRet;
                }
                
                i_9445001 -= 1;
              }
          } while(false);
          skip_9440127 += a_9440117[s_9440118[(skip_9440127 + sub_last_9440126)]];
        }
    } while(false);
    result_9440123 = -1;
    break BeforeRet;
  } while (false);

  return result_9440123;

}
function nsuReplaceStr(s_9515016, sub_9515017, by_9515018) {
  var result_9515019 = null;

    result_9515019 = nimCopy(null, [], NTI112);
    var sub_len_9515020 = (sub_9515017 != null ? sub_9515017.length : 0);
    if ((sub_len_9515020 == 0)) {
    result_9515019 = nimCopy(null, s_9515016, NTI112);
    }
    else {
    if ((sub_len_9515020 == 1)) {
    var c_9515021 = sub_9515017[0];
    var last_9515023 = (s_9515016 != null ? (s_9515016.length-1) : -1);
    var i_9515025 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          var j_9515026 = nsuFindChar(s_9515016, c_9515021, i_9515025, last_9515023);
          if ((j_9515026 < 0)) {
          break L1;
          }
          
          if (result_9515019 != null) { result_9515019 = (result_9515019).concat(substr_341022(s_9515016, i_9515025, (j_9515026 - 1))); } else { result_9515019 = substr_341022(s_9515016, i_9515025, (j_9515026 - 1)).slice(); };
          if (result_9515019 != null) { result_9515019 = (result_9515019).concat(by_9515018); } else { result_9515019 = by_9515018.slice(); };
          i_9515025 = (j_9515026 + sub_len_9515020);
        }
    } while(false);
    if (result_9515019 != null) { result_9515019 = (result_9515019).concat(substr_341053(s_9515016, i_9515025)); } else { result_9515019 = substr_341053(s_9515016, i_9515025).slice(); };
    }
    else {
      var a_9515027 = [new Int32Array(256)];
      nsuInitSkipTable(a_9515027[0], sub_9515017);
      var last_9515030 = (s_9515016 != null ? (s_9515016.length-1) : -1);
      var i_9515032 = 0;
      L3: do {
          L4: while (true) {
          if (!true) break L4;
            var j_9515033 = nsuFindStrA(a_9515027[0], s_9515016, sub_9515017, i_9515032, last_9515030);
            if ((j_9515033 < 0)) {
            break L3;
            }
            
            if (result_9515019 != null) { result_9515019 = (result_9515019).concat(substr_341022(s_9515016, i_9515032, (j_9515033 - 1))); } else { result_9515019 = substr_341022(s_9515016, i_9515032, (j_9515033 - 1)).slice(); };
            if (result_9515019 != null) { result_9515019 = (result_9515019).concat(by_9515018); } else { result_9515019 = by_9515018.slice(); };
            i_9515032 = (j_9515033 + sub_len_9515020);
          }
      } while(false);
      if (result_9515019 != null) { result_9515019 = (result_9515019).concat(substr_341053(s_9515016, i_9515032)); } else { result_9515019 = substr_341053(s_9515016, i_9515032).slice(); };
    }
    }

  return result_9515019;

}
function format_value_12020002(result_12020005, result_12020005_Idx, value_12020006, specifier_12020007) {
    format_value_9800080(result_12020005, result_12020005_Idx, HEX24_11535293(value_12020006), specifier_12020007);

  
}
function HEX24_12015016(d_12015019) {
    var Tmp1;
    var Tmp2;

  var result_12015020 = null;

    var fmt_res_12015021 = [mnewString(0)];
    if (fmt_res_12015021[0] != null) { fmt_res_12015021[0] = (fmt_res_12015021[0]).concat(makeNimstrLit("[Hypothesis test]\x0A* Null distribution: ")); } else { fmt_res_12015021[0] = makeNimstrLit("[Hypothesis test]\x0A* Null distribution: "); };
    format_value_12020002(fmt_res_12015021, 0, d_12015019.distribution, []);
    if (fmt_res_12015021[0] != null) { fmt_res_12015021[0] = (fmt_res_12015021[0]).concat(makeNimstrLit(" \x0A")); } else { fmt_res_12015021[0] = makeNimstrLit(" \x0A"); };
    if (result_12015020 != null) { result_12015020 = (result_12015020).concat(fmt_res_12015021[0]); } else { result_12015020 = fmt_res_12015021[0].slice(); };
    var fmt_res_12020022 = mnewString(0);
    if (fmt_res_12020022 != null) { fmt_res_12020022 = (fmt_res_12020022).concat(makeNimstrLit("      Null C.I. 95%| Test value|    p-value| \x0A")); } else { fmt_res_12020022 = makeNimstrLit("      Null C.I. 95%| Test value|    p-value| \x0A"); };
    if (result_12015020 != null) { result_12015020 = (result_12015020).concat(fmt_res_12020022); } else { result_12015020 = fmt_res_12020022.slice(); };
    var fmt_res_12025001 = [mnewString(0)];
    format_value_11445001(fmt_res_12025001, 0, (Tmp1 = null_confidence_interval_12030010(d_12015019, 5.0000000000000003e-002), Tmp1)[0], makeNimstrLit(">9.5f"));
    if (fmt_res_12025001[0] != null) { fmt_res_12025001[0] = (fmt_res_12025001[0]).concat(makeNimstrLit(" ")); } else { fmt_res_12025001[0] = makeNimstrLit(" "); };
    format_value_11445001(fmt_res_12025001, 0, (Tmp2 = null_confidence_interval_12030010(d_12015019, 5.0000000000000003e-002), Tmp2)[1], makeNimstrLit(">9.5f"));
    if (fmt_res_12025001[0] != null) { fmt_res_12025001[0] = (fmt_res_12025001[0]).concat(makeNimstrLit("|  ")); } else { fmt_res_12025001[0] = makeNimstrLit("|  "); };
    format_value_11445001(fmt_res_12025001, 0, d_12015019.test_score, makeNimstrLit(">9.5f"));
    if (fmt_res_12025001[0] != null) { fmt_res_12025001[0] = (fmt_res_12025001[0]).concat(makeNimstrLit("| ")); } else { fmt_res_12025001[0] = makeNimstrLit("| "); };
    format_value_11445001(fmt_res_12025001, 0, p_value_12035089(d_12015019), makeNimstrLit(">9.5e"));
    if (fmt_res_12025001[0] != null) { fmt_res_12025001[0] = (fmt_res_12025001[0]).concat(makeNimstrLit("|")); } else { fmt_res_12025001[0] = makeNimstrLit("|"); };
    if (result_12015020 != null) { result_12015020 = (result_12015020).concat(fmt_res_12025001[0]); } else { result_12015020 = fmt_res_12025001[0].slice(); };

  return result_12015020;

}
function HEX24_11996067(model_11996069) {
            var Tmp4;

  var result_11996070 = null;

    result_11996070 = nimCopy(null, makeNimstrLit("[Robust Interrupted Time Series Model]\x0A"), NTI112);
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat(makeNimstrLit("* Coefficients:\x0A")); } else { result_11996070 = makeNimstrLit("* Coefficients:\x0A"); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat((estimate_as_string_11730045(model_11996069.model.before_model.coefficients[0], true, makeNimstrLit("       slope (pre)")) || []).concat(makeNimstrLit("\x0A") || [])); } else { result_11996070 = (estimate_as_string_11730045(model_11996069.model.before_model.coefficients[0], true, makeNimstrLit("       slope (pre)")) || []).concat(makeNimstrLit("\x0A") || []).slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat((estimate_as_string_11730045(model_11996069.model.before_model.coefficients[1], false, makeNimstrLit("   intercept (pre)")) || []).concat(makeNimstrLit("\x0A") || [])); } else { result_11996070 = (estimate_as_string_11730045(model_11996069.model.before_model.coefficients[1], false, makeNimstrLit("   intercept (pre)")) || []).concat(makeNimstrLit("\x0A") || []).slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat((estimate_as_string_11730045(model_11996069.model.before_residual_model.coefficients[0], false, makeNimstrLit("    autocorr (pre)")) || []).concat(makeNimstrLit("\x0A") || [])); } else { result_11996070 = (estimate_as_string_11730045(model_11996069.model.before_residual_model.coefficients[0], false, makeNimstrLit("    autocorr (pre)")) || []).concat(makeNimstrLit("\x0A") || []).slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat((estimate_as_string_11730045(model_11996069.model.after_model.coefficients[0], false, makeNimstrLit("      slope (post)")) || []).concat(makeNimstrLit("\x0A") || [])); } else { result_11996070 = (estimate_as_string_11730045(model_11996069.model.after_model.coefficients[0], false, makeNimstrLit("      slope (post)")) || []).concat(makeNimstrLit("\x0A") || []).slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat((estimate_as_string_11730045(model_11996069.model.after_model.coefficients[1], false, makeNimstrLit("  intercept (post)")) || []).concat(makeNimstrLit("\x0A") || [])); } else { result_11996070 = (estimate_as_string_11730045(model_11996069.model.after_model.coefficients[1], false, makeNimstrLit("  intercept (post)")) || []).concat(makeNimstrLit("\x0A") || []).slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat((estimate_as_string_11730045(model_11996069.model.after_residual_model.coefficients[0], false, makeNimstrLit("   autocorr (post)")) || []).concat(makeNimstrLit("\x0A") || [])); } else { result_11996070 = (estimate_as_string_11730045(model_11996069.model.after_residual_model.coefficients[0], false, makeNimstrLit("   autocorr (post)")) || []).concat(makeNimstrLit("\x0A") || []).slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat(makeNimstrLit("* Noise estimates:\x0A")); } else { result_11996070 = makeNimstrLit("* Noise estimates:\x0A"); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat((estimate_as_string_11996309(model_11996069.model.before_residual_model.noise_variance, false, makeNimstrLit("    variance (pre)")) || []).concat(makeNimstrLit("\x0A") || [])); } else { result_11996070 = (estimate_as_string_11996309(model_11996069.model.before_residual_model.noise_variance, false, makeNimstrLit("    variance (pre)")) || []).concat(makeNimstrLit("\x0A") || []).slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat((estimate_as_string_11996309(model_11996069.model.after_residual_model.noise_variance, false, makeNimstrLit("   variance (post)")) || []).concat(makeNimstrLit("\x0A") || [])); } else { result_11996070 = (estimate_as_string_11996309(model_11996069.model.after_residual_model.noise_variance, false, makeNimstrLit("   variance (post)")) || []).concat(makeNimstrLit("\x0A") || []).slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat(makeNimstrLit("* Log-likelihood evaluations:\x0A")); } else { result_11996070 = makeNimstrLit("* Log-likelihood evaluations:\x0A"); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat(makeNimstrLit(" Change-point| Log-likelihood\x0A")); } else { result_11996070 = makeNimstrLit(" Change-point| Log-likelihood\x0A"); };
    L1: do {
      var k_12005348 = 0;
      var colontmp__12197187 = 0;
      colontmp__12197187 = (model_11996069.change_point_candidates != null ? (model_11996069.change_point_candidates.length-1) : -1);
      var res_12197188 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197188 <= colontmp__12197187)) break L3;
            k_12005348 = res_12197188;
            var fmt_res_12005349 = [mnewString(0)];
            if (fmt_res_12005349[0] != null) { fmt_res_12005349[0] = (fmt_res_12005349[0]).concat(makeNimstrLit("       ")); } else { fmt_res_12005349[0] = makeNimstrLit("       "); };
            format_value_11485001(fmt_res_12005349, 0, model_11996069.change_point_candidates[k_12005348], makeNimstrLit(">5"));
            if (fmt_res_12005349[0] != null) { fmt_res_12005349[0] = (fmt_res_12005349[0]).concat(makeNimstrLit(" | ")); } else { fmt_res_12005349[0] = makeNimstrLit(" | "); };
            format_value_11445001(fmt_res_12005349, 0, model_11996069.loglikelihood_candidates[k_12005348], makeNimstrLit(".3f"));
            if (fmt_res_12005349[0] != null) { fmt_res_12005349[0] = (fmt_res_12005349[0]).concat(makeNimstrLit(" ")); } else { fmt_res_12005349[0] = makeNimstrLit(" "); };
            if ((model_11996069.change_point_candidates[k_12005348] == model_11996069.change_point_index)) {
            Tmp4 = makeNimstrLit("***\x0A");
            }
            else {
            Tmp4 = makeNimstrLit("\x0A");
            }
            
            if (result_11996070 != null) { result_11996070 = (result_11996070).concat((fmt_res_12005349[0] || []).concat(Tmp4 || [])); } else { result_11996070 = (fmt_res_12005349[0] || []).concat(Tmp4 || []).slice(); };
            res_12197188 += 1;
          }
      } while(false);
    } while(false);
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat(makeNimstrLit("* Wald test:\x0A")); } else { result_11996070 = makeNimstrLit("* Wald test:\x0A"); };
    var fmt_res_12010016 = [mnewString(0)];
    if (fmt_res_12010016[0] != null) { fmt_res_12010016[0] = (fmt_res_12010016[0]).concat(makeNimstrLit("  H0: There is not change point at ")); } else { fmt_res_12010016[0] = makeNimstrLit("  H0: There is not change point at "); };
    format_value_11445001(fmt_res_12010016, 0, model_11996069.change_point_x, []);
    if (fmt_res_12010016[0] != null) { fmt_res_12010016[0] = (fmt_res_12010016[0]).concat(makeNimstrLit(":\x0A")); } else { fmt_res_12010016[0] = makeNimstrLit(":\x0A"); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat(fmt_res_12010016[0]); } else { result_11996070 = fmt_res_12010016[0].slice(); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat(makeNimstrLit("  H1: At least one of the after C.P. parameters is not 0:\x0A  ")); } else { result_11996070 = makeNimstrLit("  H1: At least one of the after C.P. parameters is not 0:\x0A  "); };
    if (result_11996070 != null) { result_11996070 = (result_11996070).concat(nsuReplaceStr(HEX24_12015016(model_11996069.model.existence_change_point_hypothesis), makeNimstrLit("\x0A"), makeNimstrLit("\x0A  "))); } else { result_11996070 = nsuReplaceStr(HEX24_12015016(model_11996069.model.existence_change_point_hypothesis), makeNimstrLit("\x0A"), makeNimstrLit("\x0A  ")).slice(); };

  return result_11996070;

}
function new_ritsperiod_12176142() {
  var result_12176144 = null;

    result_12176144 = ({slope: null, intercept: null, level: null, autocorrelation: null, noise: null, residuals: null});
    result_12176144.slope = ({mean: 0.0, standard_deviation: 0.0, confidence_interval: null, p_value: 0.0, t_value: 0.0, score: 0.0});
    result_12176144.intercept = ({mean: 0.0, standard_deviation: 0.0, confidence_interval: null, p_value: 0.0, t_value: 0.0, score: 0.0});
    result_12176144.level = ({mean: 0.0, standard_deviation: 0.0, confidence_interval: null, p_value: 0.0, t_value: 0.0, score: 0.0});
    result_12176144.autocorrelation = ({mean: 0.0, standard_deviation: 0.0, confidence_interval: null, p_value: 0.0, t_value: 0.0, score: 0.0});
    result_12176144.noise = ({mean: 0.0, standard_deviation: 0.0, confidence_interval: null, p_value: 0.0, t_value: 0.0, score: 0.0});
    result_12176144.residuals = ({values: null, autocorrelation: null, autocorrelation_null_confidence_interval: null});

  return result_12176144;

}
function clean_nan_12176323(v_12176325, d_12176326) {
              var Tmp5;

  var result_12176327 = null;

    L1: do {
      var iHEX60gensym12176330_12185003 = 0;
      var resultHEX60gensym12176331_12190011 = new_seq_11400047((v_12176325 != null ? v_12176325.length : 0));
      L2: do {
        var it_12195007 = 0.0;
        var i_12197289 = 0;
        var l_12197290 = (v_12176325 != null ? v_12176325.length : 0);
        L3: do {
            L4: while (true) {
            if (!(i_12197289 < l_12197290)) break L4;
              it_12195007 = v_12176325[i_12197289];
              if ((classify_880431(it_12195007) == 4)) {
              Tmp5 = d_12176326;
              }
              else {
              Tmp5 = it_12195007;
              }
              
              resultHEX60gensym12176331_12190011[iHEX60gensym12176330_12185003] = Tmp5;
              iHEX60gensym12176330_12185003 += 1;
              i_12197289 += 1;
            }
        } while(false);
      } while(false);
    } while(false);
    result_12176327 = nimCopy(null, resultHEX60gensym12176331_12190011, NTI11400051);

  return result_12176327;

}
function sum_9995614(a_9995616) {
  var result_9995617 = [0.0];

    L1: do {
      var k_9995635 = 0;
      var colontmp__12197300 = 0;
      colontmp__12197300 = (a_9995616 != null ? (a_9995616.length-1) : -1);
      var res_12197301 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197301 <= colontmp__12197300)) break L3;
            k_9995635 = res_12197301;
            HEX2BHEX3D_1000001(result_9995617, 0, a_9995616[k_9995635]);
            res_12197301 += 1;
          }
      } while(false);
    } while(false);

  return result_9995617[0];

}
function multiply_9880614(a_9880616, b_9880617) {
  var result_9880618 = null;

    L1: do {
      var k_9890218 = 0;
      var colontmp__12197307 = 0;
      colontmp__12197307 = (a_9880616 != null ? (a_9880616.length-1) : -1);
      var res_12197308 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197308 <= colontmp__12197307)) break L3;
            k_9890218 = res_12197308;
            if (result_9880618 != null) { result_9880618.push((a_9880616[k_9890218] * b_9880617[k_9890218])); } else { result_9880618 = [(a_9880616[k_9890218] * b_9880617[k_9890218])]; };
            res_12197308 += 1;
          }
      } while(false);
    } while(false);

  return result_9880618;

}
function HEX2A_9890300(a_9890302, b_9890303) {
  var result_9890304 = null;

    result_9890304 = nimCopy(null, multiply_9880614(a_9890302, b_9890303), NTI9861064);

  return result_9890304;

}
function scaled_shifted_11627521(distribution_11627524, location_11627525, scale_11627526) {
  var result_11627528 = null;

    result_11627528 = ({distribution: null, location: 0.0, scale: 0.0});
    result_11627528.distribution = distribution_11627524;
    result_11627528.location = location_11627525;
    result_11627528.scale = scale_11627526;

  return result_11627528;

}
function htest_score_11627579(distribution_11627582, score_11627583, test_type_11627584) {
  var result_11627586 = null;

    result_11627586 = ({distribution: null, test_score: 0.0, test_type: 0});
    result_11627586.distribution = distribution_11627582;
    result_11627586.test_score = score_11627583;
    result_11627586.test_type = test_type_11627584;

  return result_11627586;

}
function shifted_estimator_11627513(distribution_11627516, location_11627517, scale_11627518) {
  var result_11627520 = null;

    var est_distribution_11627563 = scaled_shifted_11627521(distribution_11627516, location_11627517, scale_11627518);
    var est_null_distribution_11627571 = scaled_shifted_11627521(distribution_11627516, 0.0, scale_11627518);
    result_11627520 = ({distribution: null, hypothesis_test: null});
    result_11627520.distribution = est_distribution_11627563;
    result_11627520.hypothesis_test = htest_score_11627579(est_null_distribution_11627571, location_11627517, 0);

  return result_11627520;

}
function autocorrelation_function_11627019(x_11627021, max_lags_11627022) {
  var result_11627023 = null;

    result_11627023 = ({estimators: null, null_distribution: null, estimators_mean: null, lags: null});
    var x_mean_11627031 = mean_10015614(x_11627021, 0);
    var n_11627038 = (x_11627021 != null ? (x_11627021.length-1) : -1);
    L1: do {
      var k_11627047 = 0;
      var colontmp__12197293 = 0;
      colontmp__12197293 = nimMin(max_lags_11627022, n_11627038);
      var res_12197294 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197294 <= colontmp__12197293)) break L3;
            k_11627047 = res_12197294;
            var acf_11627465 = (sum_9995614(HEX2A_9890300(HEX2D_9880293(HEX5BHEX5D_11627070(x_11627021, HEX2EHEX2E_2080220(0, (n_11627038 - k_11627047))), x_mean_11627031), HEX2D_9880293(HEX5BHEX5D_11627070(x_11627021, HEX2EHEX2E_2080220(k_11627047, n_11627038)), x_mean_11627031))) / sum_9995614(HEX2EHEX5E_10005318(HEX2D_9880293(x_11627021, mean_10015614(x_11627021, 0)), 2.0000000000000000e+000)));
            if (result_11627023.lags != null) { result_11627023.lags.push(to_float_26459(k_11627047)); } else { result_11627023.lags = [to_float_26459(k_11627047)]; };
            if (result_11627023.estimators_mean != null) { result_11627023.estimators_mean.push(acf_11627465); } else { result_11627023.estimators_mean = [acf_11627465]; };
            if (result_11627023.estimators != null) { result_11627023.estimators.push(shifted_estimator_11627513(normal_11530065(0.0, 1.0000000000000000e+000), acf_11627465, Math.sqrt((1.0000000000000000e+000 + ((1.0000000000000000e+000 + (2.0000000000000000e+000 * sum_9995614(HEX2EHEX5E_10005318(HEX5BHEX5D_11627070(x_11627021, HEX2EHEX2E_2080220(0, k_11627047)), 2.0000000000000000e+000)))) / to_float_26459(n_11627038)))))); } else { result_11627023.estimators = [shifted_estimator_11627513(normal_11530065(0.0, 1.0000000000000000e+000), acf_11627465, Math.sqrt((1.0000000000000000e+000 + ((1.0000000000000000e+000 + (2.0000000000000000e+000 * sum_9995614(HEX2EHEX5E_10005318(HEX5BHEX5D_11627070(x_11627021, HEX2EHEX2E_2080220(0, k_11627047)), 2.0000000000000000e+000)))) / to_float_26459(n_11627038)))))]; };
            res_12197294 += 1;
          }
      } while(false);
    } while(false);
    result_11627023.null_distribution = shifted_estimator_11627513(normal_11530065(0.0, 1.0000000000000000e+000), 0.0, (1.0000000000000000e+000 / Math.sqrt(to_float_26459(n_11627038))));

  return result_11627023;

}
function flatten_12195097(estimator_12195101) {
  var result_12195102 = null;

    result_12195102 = ({mean: 0.0, standard_deviation: 0.0, confidence_interval: null, p_value: 0.0, t_value: 0.0, score: 0.0});
    result_12195102.mean = estimate_11740037(estimator_12195101);
    result_12195102.standard_deviation = standard_deviation_11740131(estimator_12195101);
    result_12195102.confidence_interval = nimCopy(null, confidence_interval_11740191(estimator_12195101, 5.0000000000000003e-002), NTI11626893);
    result_12195102.p_value = p_value_11740408(estimator_12195101);
    result_12195102.score = test_score_11740346(estimator_12195101);
    result_12195102.t_value = test_score_11740346(estimator_12195101);

  return result_12195102;

}
function flatten_12195472(estimator_12195476) {
  var result_12195477 = null;

    result_12195477 = ({mean: 0.0, standard_deviation: 0.0, confidence_interval: null, p_value: 0.0, t_value: 0.0, score: 0.0});
    result_12195477.mean = estimate_11765036(estimator_12195476);
    result_12195477.standard_deviation = standard_deviation_11765130(estimator_12195476);
    result_12195477.confidence_interval = nimCopy(null, confidence_interval_11765190(estimator_12195476, 5.0000000000000003e-002), NTI11626893);
    result_12195477.p_value = p_value_11765407(estimator_12195476);
    result_12195477.score = test_score_11765345(estimator_12195476);
    result_12195477.t_value = test_score_11765345(estimator_12195476);

  return result_12195477;

}
function erf_11345021(x_11345023) {
    var Tmp3;

  var result_11345024 = 0.0;

  BeforeRet: do {
    var x2_11345028 = x_11345023;
    var j_11345051 = 27;
    var isneg_11345052 = false;
    var d_11345053 = 0.0;
    var dd_11345054 = 0.0;
    var t_11345055 = 0.0;
    var ty_11345056 = 0.0;
    var tmp_11345057 = 0.0;
    var res_11345058 = 0.0;
    if ((x_11345023 < 0.0)) {
    x2_11345028 = -(x_11345023);
    isneg_11345052 = true;
    }
    
    t_11345055 = (2.0000000000000000e+000 / (2.0000000000000000e+000 + x2_11345028));
    ty_11345056 = ((4.0000000000000000e+000 * t_11345055) - 2.0000000000000000e+000);
    L1: do {
        L2: while (true) {
        if (!(0 < j_11345051)) break L2;
          tmp_11345057 = d_11345053;
          d_11345053 = (((ty_11345056 * d_11345053) - dd_11345054) + cof_11345027[j_11345051]);
          dd_11345054 = tmp_11345057;
          j_11345051 -= 1;
        }
    } while(false);
    res_11345058 = (t_11345055 * Math.exp((((-(x_11345023) * x_11345023) + (5.0000000000000000e-001 * (-1.3026537197817094e+000 + (ty_11345056 * d_11345053)))) - dd_11345054)));
    if (isneg_11345052) {
    Tmp3 = (res_11345058 - 1.0000000000000000e+000);
    }
    else {
    Tmp3 = (1.0000000000000000e+000 - res_11345058);
    }
    
    result_11345024 = Tmp3;
    break BeforeRet;
  } while (false);

  return result_11345024;

}
function erfc_11350050(x_11350052) {
  var result_11350053 = 0.0;

    result_11350053 = (1.0000000000000000e+000 - erf_11345021(x_11350052));

  return result_11350053;

}
function erfcinv_11350067(p_11350069) {
    var Tmp1;
    var Tmp5;

  var result_11350070 = 0.0;

  BeforeRet: do {
    if ((2.0000000000000000e+000 <= p_11350069)) {
    result_11350070 = -1.0000000000000000e+002;
    break BeforeRet;
    }
    
    if ((p_11350069 <= 0.0)) {
    result_11350070 = 1.0000000000000000e+002;
    break BeforeRet;
    }
    
    if ((p_11350069 < 1.0000000000000000e+000)) {
    Tmp1 = p_11350069;
    }
    else {
    Tmp1 = (2.0000000000000000e+000 - p_11350069);
    }
    
    var pp_11355001 = Tmp1;
    var t_11355002 = Math.sqrt((-2.0000000000000000e+000 * Math.log((pp_11355001 / 2.0000000000000000e+000))));
    var x_11355003 = [(-7.0711000000000002e-001 * (((2.3075299999999999e+000 + (t_11355002 * 2.7061000000000002e-001)) / (1.0000000000000000e+000 + (t_11355002 * (9.9229000000000001e-001 + (t_11355002 * 4.4810000000000003e-002))))) - t_11355002))];
    var err_11355004 = 0.0;
    L2: do {
      var j_11355014 = 0;
      var res_12197314 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_12197314 <= 1)) break L4;
            j_11355014 = res_12197314;
            err_11355004 = (erfc_11350050(x_11355003[0]) - pp_11355001);
            HEX2BHEX3D_1000001(x_11355003, 0, (err_11355004 / ((1.1283791670955126e+000 * Math.exp((-(x_11355003[0]) * x_11355003[0]))) - (x_11355003[0] * err_11355004))));
            res_12197314 += 1;
          }
      } while(false);
    } while(false);
    if ((p_11350069 < 1.0000000000000000e+000)) {
    Tmp5 = x_11355003[0];
    }
    else {
    Tmp5 = -(x_11355003[0]);
    }
    
    result_11350070 = Tmp5;
    break BeforeRet;
  } while (false);

  return result_11350070;

}
function inv_11535064(d_11535066, p_11535067) {
  var result_11535068 = 0.0;

  BeforeRet: do {
    result_11535068 = (((-1.4142135623730951e+000 * d_11535066.std) * erfcinv_11350067((2.0000000000000000e+000 * p_11535067))) + d_11535066.mean);
    break BeforeRet;
  } while (false);

  return result_11535068;

}
function inv_12195779(d_12195783, p_12195784) {
  var result_12195785 = 0.0;

    result_12195785 = ((inv_11535064(d_12195783.distribution, p_12195784) * d_12195783.scale) + d_12195783.location);

  return result_12195785;

}
function confidence_interval_12195763(sd_12195767, alpha_12195768) {
  var result_12195769 = null;

    result_12195769 = nimCopy(null, [inv_12195779(sd_12195767.distribution, (5.0000000000000000e-001 * alpha_12195768)), inv_12195779(sd_12195767.distribution, (1.0000000000000000e+000 - (5.0000000000000000e-001 * alpha_12195768)))], NTI11626481);

  return result_12195769;

}
function addition_9861414(a_9861416, b_9861417) {
  var result_9861418 = null;

    L1: do {
      var k_9870218 = 0;
      var colontmp__12197321 = 0;
      colontmp__12197321 = (a_9861416 != null ? (a_9861416.length-1) : -1);
      var res_12197322 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197322 <= colontmp__12197321)) break L3;
            k_9870218 = res_12197322;
            if (result_9861418 != null) { result_9861418.push((a_9861416[k_9870218] + b_9861417[k_9870218])); } else { result_9861418 = [(a_9861416[k_9870218] + b_9861417[k_9870218])]; };
            res_12197322 += 1;
          }
      } while(false);
    } while(false);

  return result_9861418;

}
function HEX2B_9870315(a_9870317, b_9870318) {
  var result_9870319 = null;

    result_9870319 = nimCopy(null, addition_9861414(a_9870317, b_9870318), NTI9861064);

  return result_9870319;

}
function multiply_9890239(a_9890241, b_9890242) {
  var result_9890243 = null;

    L1: do {
      var k_9890261 = 0;
      var colontmp__12197328 = 0;
      colontmp__12197328 = (a_9890241 != null ? (a_9890241.length-1) : -1);
      var res_12197329 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197329 <= colontmp__12197328)) break L3;
            k_9890261 = res_12197329;
            if (result_9890243 != null) { result_9890243.push((a_9890241[k_9890261] * b_9890242)); } else { result_9890243 = [(a_9890241[k_9890261] * b_9890242)]; };
            res_12197329 += 1;
          }
      } while(false);
    } while(false);

  return result_9890243;

}
function HEX2A_9890318(a_9890320, b_9890321) {
  var result_9890322 = null;

    result_9890322 = nimCopy(null, multiply_9890239(a_9890320, b_9890321), NTI9861064);

  return result_9890322;

}
function flatten_12195047(model_12195049) {
  var result_12195050 = null;

    result_12195050 = ({change_point_candidates: null, loglikelihood_candidates: null, change_point_index: 0, change_point_x: 0.0, initial: null, increment_change: null, existence_change_point_hypothesis: null});
    result_12195050.initial = new_ritsperiod_12176142();
    result_12195050.increment_change = new_ritsperiod_12176142();
    result_12195050.change_point_candidates = nimCopy(null, model_12195049.change_point_candidates, NTI11996044);
    result_12195050.loglikelihood_candidates = nimCopy(null, clean_nan_12176323(model_12195049.loglikelihood_candidates, -Infinity), NTI9861064);
    result_12195050.change_point_index = model_12195049.change_point_index;
    result_12195050.change_point_x = model_12195049.change_point_x;
    var acf1_12195058 = autocorrelation_function_11627019(clean_nan_12176323(model_12195049.model.before_residual_model.residuals, -Infinity), 100);
    var acf2_12195060 = autocorrelation_function_11627019(clean_nan_12176323(model_12195049.model.after_residual_model.residuals, -Infinity), 100);
    result_12195050.initial.slope = flatten_12195097(model_12195049.model.before_model.coefficients[0]);
    result_12195050.initial.intercept = flatten_12195097(model_12195049.model.before_model.coefficients[1]);
    result_12195050.initial.autocorrelation = flatten_12195097(model_12195049.model.before_residual_model.coefficients[0]);
    result_12195050.initial.noise = flatten_12195472(model_12195049.model.before_residual_model.noise_variance);
    result_12195050.initial.residuals.values = nimCopy(null, clean_nan_12176323(model_12195049.model.before_residual_model.residuals, -Infinity), NTI9861064);
    result_12195050.initial.residuals.autocorrelation = nimCopy(null, clean_nan_12176323(acf1_12195058.estimators_mean, 0.0), NTI9861064);
    result_12195050.initial.residuals.autocorrelation_null_confidence_interval = nimCopy(null, confidence_interval_12195763(acf1_12195058.null_distribution, 5.0000000000000003e-002), NTI11626893);
    result_12195050.increment_change.slope = flatten_12195097(model_12195049.model.after_model.coefficients[0]);
    result_12195050.increment_change.intercept = flatten_12195097(model_12195049.model.after_model.coefficients[1]);
    result_12195050.increment_change.autocorrelation = flatten_12195097(model_12195049.model.after_residual_model.coefficients[0]);
    result_12195050.increment_change.noise = flatten_12195472(model_12195049.model.after_residual_model.noise_variance);
    result_12195050.increment_change.residuals.values = nimCopy(null, clean_nan_12176323(model_12195049.model.after_residual_model.residuals, -Infinity), NTI9861064);
    result_12195050.increment_change.residuals.autocorrelation = nimCopy(null, clean_nan_12176323(acf2_12195060.estimators_mean, 0.0), NTI9861064);
    result_12195050.increment_change.residuals.autocorrelation_null_confidence_interval = nimCopy(null, confidence_interval_12195763(acf2_12195060.null_distribution, 5.0000000000000003e-002), NTI11626893);
    result_12195050.increment_change.level.mean = ((result_12195050.increment_change.slope.mean * result_12195050.change_point_x) + result_12195050.increment_change.intercept.mean);
    result_12195050.increment_change.level.standard_deviation = ((result_12195050.increment_change.slope.standard_deviation * result_12195050.change_point_x) + result_12195050.increment_change.intercept.standard_deviation);
    result_12195050.increment_change.level.confidence_interval = nimCopy(null, HEX2B_9870315(HEX2A_9890318(result_12195050.increment_change.slope.confidence_interval, result_12195050.change_point_x), result_12195050.increment_change.intercept.confidence_interval), NTI9861064);
    result_12195050.existence_change_point_hypothesis = flatten_12196076(model_12195049.model.existence_change_point_hypothesis);

  return result_12195050;

}
function robust_interrupted_time_series(x_12196616, y_12196617, change_point_candidates_start_12196618, change_point_candidates_end_12196619, covariance_structure_type_12196620) {
  var result_12196621 = null;

    rawEcho(makeNimstrLit("covariance_structure_type:::"), cstrToNimstr(covariance_structure_type_12196620));
    var model_12196626 = rits_model_12150057(x_12196616, y_12196617, change_point_candidates_start_12196618, change_point_candidates_end_12196619, cstrToNimstr(covariance_structure_type_12196620));
    rawEcho(HEX24_11996067(model_12196626));
    result_12196621 = flatten_12195047(model_12196626);

  return result_12196621;

}
function subsample_10050214(v_10050216, sampling_10050217) {
  var result_10050218 = null;

    L1: do {
      var k_10050236 = 0;
      var colontmp__12197374 = 0;
      colontmp__12197374 = (v_10050216 != null ? (v_10050216.length-1) : -1);
      var res_12197375 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12197375 <= colontmp__12197374)) break L3;
            k_10050236 = res_12197375;
            L4: do {
              if (!((Math.trunc(k_10050236 % sampling_10050217) == 0))) {
              break L4;
              }
              
              if (result_10050218 != null) { result_10050218.push(interpolated_if_not_valid_10045229(v_10050216, k_10050236)); } else { result_10050218 = [interpolated_if_not_valid_10045229(v_10050216, k_10050236)]; };
            } while(false);
            res_12197375 += 1;
          }
      } while(false);
    } while(false);

  return result_10050218;

}
function robust_interrupted_time_series_approximated(sampling_12197349, x_12197350, y_12197351, change_point_candidates_start_12197352, change_point_candidates_end_12197353, covariance_structure_type_12197354) {
  var result_12197355 = null;

    var model_12197356 = rits_model_12150057(subsample_10050214(x_12197350, sampling_12197349), y_12197351, to_int_26493((to_float_26459(change_point_candidates_start_12197352) / to_float_26459(sampling_12197349))), to_int_26493((to_float_26459(change_point_candidates_end_12197353) / to_float_26459(sampling_12197349))), cstrToNimstr(covariance_structure_type_12197354));
    rawEcho(HEX24_11996067(model_12197356));
    result_12197355 = flatten_12195047(model_12197356);

  return result_12197355;

}
exports.robust_interrupted_time_series = robust_interrupted_time_series
exports.robust_interrupted_time_series_approximated = robust_interrupted_time_series_approximated
exports.existence_change_point_hypothesis = existence_change_point_hypothesis
